ARM GAS  /tmp/ccfa7ew2.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"tim.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.comm	htim1,60,4
  21              		.comm	htim2,60,4
  22              		.comm	htim3,60,4
  23              		.section	.text.MX_TIM1_Init,"ax",%progbits
  24              		.align	2
  25              		.global	MX_TIM1_Init
  26              		.thumb
  27              		.thumb_func
  29              	MX_TIM1_Init:
  30              	.LFB112:
  31              		.file 1 "Src/tim.c"
   1:Src/tim.c     **** /**
   2:Src/tim.c     ****   ******************************************************************************
   3:Src/tim.c     ****   * File Name          : TIM.c
   4:Src/tim.c     ****   * Date               : 26/05/2015 10:05:16
   5:Src/tim.c     ****   * Description        : This file provides code for the configuration
   6:Src/tim.c     ****   *                      of the TIM instances.
   7:Src/tim.c     ****   ******************************************************************************
   8:Src/tim.c     ****   *
   9:Src/tim.c     ****   * COPYRIGHT(c) 2015 STMicroelectronics
  10:Src/tim.c     ****   *
  11:Src/tim.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Src/tim.c     ****   * are permitted provided that the following conditions are met:
  13:Src/tim.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Src/tim.c     ****   *      this list of conditions and the following disclaimer.
  15:Src/tim.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:Src/tim.c     ****   *      this list of conditions and the following disclaimer in the documentation
  17:Src/tim.c     ****   *      and/or other materials provided with the distribution.
  18:Src/tim.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Src/tim.c     ****   *      may be used to endorse or promote products derived from this software
  20:Src/tim.c     ****   *      without specific prior written permission.
  21:Src/tim.c     ****   *
  22:Src/tim.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Src/tim.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Src/tim.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Src/tim.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Src/tim.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Src/tim.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /tmp/ccfa7ew2.s 			page 2


  28:Src/tim.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Src/tim.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Src/tim.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Src/tim.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:Src/tim.c     ****   *
  33:Src/tim.c     ****   ******************************************************************************
  34:Src/tim.c     ****   */
  35:Src/tim.c     **** 
  36:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  37:Src/tim.c     **** #include "tim.h"
  38:Src/tim.c     **** 
  39:Src/tim.c     **** /* USER CODE BEGIN 0 */
  40:Src/tim.c     **** 
  41:Src/tim.c     **** /* USER CODE END 0 */
  42:Src/tim.c     **** 
  43:Src/tim.c     **** TIM_HandleTypeDef htim1;
  44:Src/tim.c     **** TIM_HandleTypeDef htim2;
  45:Src/tim.c     **** TIM_HandleTypeDef htim3;
  46:Src/tim.c     **** 
  47:Src/tim.c     **** /* TIM1 init function */
  48:Src/tim.c     **** void MX_TIM1_Init(void)
  49:Src/tim.c     **** {
  32              		.loc 1 49 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 32
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36 0000 80B5     		push	{r7, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 88B0     		sub	sp, sp, #32
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 40
  44 0004 00AF     		add	r7, sp, #0
  45              	.LCFI2:
  46              		.cfi_def_cfa_register 7
  50:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
  51:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
  52:Src/tim.c     **** 
  53:Src/tim.c     ****   htim1.Instance = TIM1;
  47              		.loc 1 53 0
  48 0006 174B     		ldr	r3, .L2
  49 0008 174A     		ldr	r2, .L2+4
  50 000a 1A60     		str	r2, [r3]
  54:Src/tim.c     ****   htim1.Init.Prescaler = 3600;
  51              		.loc 1 54 0
  52 000c 154B     		ldr	r3, .L2
  53 000e 4FF46162 		mov	r2, #3600
  54 0012 5A60     		str	r2, [r3, #4]
  55:Src/tim.c     ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  55              		.loc 1 55 0
  56 0014 134B     		ldr	r3, .L2
  57 0016 0022     		movs	r2, #0
  58 0018 9A60     		str	r2, [r3, #8]
  56:Src/tim.c     ****   htim1.Init.Period = 1;
  59              		.loc 1 56 0
ARM GAS  /tmp/ccfa7ew2.s 			page 3


  60 001a 124B     		ldr	r3, .L2
  61 001c 0122     		movs	r2, #1
  62 001e DA60     		str	r2, [r3, #12]
  57:Src/tim.c     ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  63              		.loc 1 57 0
  64 0020 104B     		ldr	r3, .L2
  65 0022 0022     		movs	r2, #0
  66 0024 1A61     		str	r2, [r3, #16]
  58:Src/tim.c     ****   htim1.Init.RepetitionCounter = 0;
  67              		.loc 1 58 0
  68 0026 0F4B     		ldr	r3, .L2
  69 0028 0022     		movs	r2, #0
  70 002a 5A61     		str	r2, [r3, #20]
  59:Src/tim.c     ****   HAL_TIM_Base_Init(&htim1);
  71              		.loc 1 59 0
  72 002c 0D48     		ldr	r0, .L2
  73 002e FFF7FEFF 		bl	HAL_TIM_Base_Init
  60:Src/tim.c     **** 
  61:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  74              		.loc 1 61 0
  75 0032 4FF48053 		mov	r3, #4096
  76 0036 3B61     		str	r3, [r7, #16]
  62:Src/tim.c     ****   HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig);
  77              		.loc 1 62 0
  78 0038 07F11003 		add	r3, r7, #16
  79 003c 1946     		mov	r1, r3
  80 003e 0948     		ldr	r0, .L2
  81 0040 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
  63:Src/tim.c     **** 
  64:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  82              		.loc 1 64 0
  83 0044 0023     		movs	r3, #0
  84 0046 7B60     		str	r3, [r7, #4]
  65:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
  85              		.loc 1 65 0
  86 0048 0023     		movs	r3, #0
  87 004a BB60     		str	r3, [r7, #8]
  66:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  88              		.loc 1 66 0
  89 004c 0023     		movs	r3, #0
  90 004e FB60     		str	r3, [r7, #12]
  67:Src/tim.c     ****   HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig);
  91              		.loc 1 67 0
  92 0050 3B1D     		adds	r3, r7, #4
  93 0052 1946     		mov	r1, r3
  94 0054 0348     		ldr	r0, .L2
  95 0056 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
  68:Src/tim.c     **** 
  69:Src/tim.c     **** }
  96              		.loc 1 69 0
  97 005a 00BF     		nop
  98 005c 2037     		adds	r7, r7, #32
  99              	.LCFI3:
 100              		.cfi_def_cfa_offset 8
 101 005e BD46     		mov	sp, r7
 102              	.LCFI4:
 103              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccfa7ew2.s 			page 4


 104              		@ sp needed
 105 0060 80BD     		pop	{r7, pc}
 106              	.L3:
 107 0062 00BF     		.align	2
 108              	.L2:
 109 0064 00000000 		.word	htim1
 110 0068 002C0140 		.word	1073818624
 111              		.cfi_endproc
 112              	.LFE112:
 114              		.section	.text.MX_TIM2_Init,"ax",%progbits
 115              		.align	2
 116              		.global	MX_TIM2_Init
 117              		.thumb
 118              		.thumb_func
 120              	MX_TIM2_Init:
 121              	.LFB113:
  70:Src/tim.c     **** /* TIM2 init function */
  71:Src/tim.c     **** void MX_TIM2_Init(void)
  72:Src/tim.c     **** {
 122              		.loc 1 72 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 32
 125              		@ frame_needed = 1, uses_anonymous_args = 0
 126 0000 80B5     		push	{r7, lr}
 127              	.LCFI5:
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 7, -8
 130              		.cfi_offset 14, -4
 131 0002 88B0     		sub	sp, sp, #32
 132              	.LCFI6:
 133              		.cfi_def_cfa_offset 40
 134 0004 00AF     		add	r7, sp, #0
 135              	.LCFI7:
 136              		.cfi_def_cfa_register 7
  73:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
  74:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
  75:Src/tim.c     **** 
  76:Src/tim.c     ****   htim2.Instance = TIM2;
 137              		.loc 1 76 0
 138 0006 154B     		ldr	r3, .L5
 139 0008 4FF08042 		mov	r2, #1073741824
 140 000c 1A60     		str	r2, [r3]
  77:Src/tim.c     ****   htim2.Init.Prescaler = 14400;
 141              		.loc 1 77 0
 142 000e 134B     		ldr	r3, .L5
 143 0010 4FF46152 		mov	r2, #14400
 144 0014 5A60     		str	r2, [r3, #4]
  78:Src/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 145              		.loc 1 78 0
 146 0016 114B     		ldr	r3, .L5
 147 0018 0022     		movs	r2, #0
 148 001a 9A60     		str	r2, [r3, #8]
  79:Src/tim.c     ****   htim2.Init.Period = 5;
 149              		.loc 1 79 0
 150 001c 0F4B     		ldr	r3, .L5
 151 001e 0522     		movs	r2, #5
 152 0020 DA60     		str	r2, [r3, #12]
ARM GAS  /tmp/ccfa7ew2.s 			page 5


  80:Src/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 153              		.loc 1 80 0
 154 0022 0E4B     		ldr	r3, .L5
 155 0024 0022     		movs	r2, #0
 156 0026 1A61     		str	r2, [r3, #16]
  81:Src/tim.c     ****   HAL_TIM_Base_Init(&htim2);
 157              		.loc 1 81 0
 158 0028 0C48     		ldr	r0, .L5
 159 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
  82:Src/tim.c     **** 
  83:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 160              		.loc 1 83 0
 161 002e 4FF48053 		mov	r3, #4096
 162 0032 3B61     		str	r3, [r7, #16]
  84:Src/tim.c     ****   HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig);
 163              		.loc 1 84 0
 164 0034 07F11003 		add	r3, r7, #16
 165 0038 1946     		mov	r1, r3
 166 003a 0848     		ldr	r0, .L5
 167 003c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
  85:Src/tim.c     **** 
  86:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 168              		.loc 1 86 0
 169 0040 0023     		movs	r3, #0
 170 0042 7B60     		str	r3, [r7, #4]
  87:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 171              		.loc 1 87 0
 172 0044 0023     		movs	r3, #0
 173 0046 FB60     		str	r3, [r7, #12]
  88:Src/tim.c     ****   HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig);
 174              		.loc 1 88 0
 175 0048 3B1D     		adds	r3, r7, #4
 176 004a 1946     		mov	r1, r3
 177 004c 0348     		ldr	r0, .L5
 178 004e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
  89:Src/tim.c     **** 
  90:Src/tim.c     **** }
 179              		.loc 1 90 0
 180 0052 00BF     		nop
 181 0054 2037     		adds	r7, r7, #32
 182              	.LCFI8:
 183              		.cfi_def_cfa_offset 8
 184 0056 BD46     		mov	sp, r7
 185              	.LCFI9:
 186              		.cfi_def_cfa_register 13
 187              		@ sp needed
 188 0058 80BD     		pop	{r7, pc}
 189              	.L6:
 190 005a 00BF     		.align	2
 191              	.L5:
 192 005c 00000000 		.word	htim2
 193              		.cfi_endproc
 194              	.LFE113:
 196              		.section	.text.MX_TIM3_Init,"ax",%progbits
 197              		.align	2
 198              		.global	MX_TIM3_Init
 199              		.thumb
ARM GAS  /tmp/ccfa7ew2.s 			page 6


 200              		.thumb_func
 202              	MX_TIM3_Init:
 203              	.LFB114:
  91:Src/tim.c     **** /* TIM3 init function */
  92:Src/tim.c     **** void MX_TIM3_Init(void)
  93:Src/tim.c     **** {
 204              		.loc 1 93 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 32
 207              		@ frame_needed = 1, uses_anonymous_args = 0
 208 0000 80B5     		push	{r7, lr}
 209              	.LCFI10:
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
 213 0002 88B0     		sub	sp, sp, #32
 214              	.LCFI11:
 215              		.cfi_def_cfa_offset 40
 216 0004 00AF     		add	r7, sp, #0
 217              	.LCFI12:
 218              		.cfi_def_cfa_register 7
  94:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
  95:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
  96:Src/tim.c     **** 
  97:Src/tim.c     ****   htim3.Instance = TIM3;
 219              		.loc 1 97 0
 220 0006 144B     		ldr	r3, .L8
 221 0008 144A     		ldr	r2, .L8+4
 222 000a 1A60     		str	r2, [r3]
  98:Src/tim.c     ****   htim3.Init.Prescaler = 14400;
 223              		.loc 1 98 0
 224 000c 124B     		ldr	r3, .L8
 225 000e 4FF46152 		mov	r2, #14400
 226 0012 5A60     		str	r2, [r3, #4]
  99:Src/tim.c     ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 227              		.loc 1 99 0
 228 0014 104B     		ldr	r3, .L8
 229 0016 0022     		movs	r2, #0
 230 0018 9A60     		str	r2, [r3, #8]
 100:Src/tim.c     ****   htim3.Init.Period = 50;
 231              		.loc 1 100 0
 232 001a 0F4B     		ldr	r3, .L8
 233 001c 3222     		movs	r2, #50
 234 001e DA60     		str	r2, [r3, #12]
 101:Src/tim.c     ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 235              		.loc 1 101 0
 236 0020 0D4B     		ldr	r3, .L8
 237 0022 0022     		movs	r2, #0
 238 0024 1A61     		str	r2, [r3, #16]
 102:Src/tim.c     ****   HAL_TIM_Base_Init(&htim3);
 239              		.loc 1 102 0
 240 0026 0C48     		ldr	r0, .L8
 241 0028 FFF7FEFF 		bl	HAL_TIM_Base_Init
 103:Src/tim.c     **** 
 104:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 242              		.loc 1 104 0
 243 002c 4FF48053 		mov	r3, #4096
ARM GAS  /tmp/ccfa7ew2.s 			page 7


 244 0030 3B61     		str	r3, [r7, #16]
 105:Src/tim.c     ****   HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig);
 245              		.loc 1 105 0
 246 0032 07F11003 		add	r3, r7, #16
 247 0036 1946     		mov	r1, r3
 248 0038 0748     		ldr	r0, .L8
 249 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 106:Src/tim.c     **** 
 107:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 250              		.loc 1 107 0
 251 003e 0023     		movs	r3, #0
 252 0040 7B60     		str	r3, [r7, #4]
 108:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 253              		.loc 1 108 0
 254 0042 0023     		movs	r3, #0
 255 0044 FB60     		str	r3, [r7, #12]
 109:Src/tim.c     ****   HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig);
 256              		.loc 1 109 0
 257 0046 3B1D     		adds	r3, r7, #4
 258 0048 1946     		mov	r1, r3
 259 004a 0348     		ldr	r0, .L8
 260 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 110:Src/tim.c     **** 
 111:Src/tim.c     **** }
 261              		.loc 1 111 0
 262 0050 00BF     		nop
 263 0052 2037     		adds	r7, r7, #32
 264              	.LCFI13:
 265              		.cfi_def_cfa_offset 8
 266 0054 BD46     		mov	sp, r7
 267              	.LCFI14:
 268              		.cfi_def_cfa_register 13
 269              		@ sp needed
 270 0056 80BD     		pop	{r7, pc}
 271              	.L9:
 272              		.align	2
 273              	.L8:
 274 0058 00000000 		.word	htim3
 275 005c 00040040 		.word	1073742848
 276              		.cfi_endproc
 277              	.LFE114:
 279              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 280              		.align	2
 281              		.global	HAL_TIM_Base_MspInit
 282              		.thumb
 283              		.thumb_func
 285              	HAL_TIM_Base_MspInit:
 286              	.LFB115:
 112:Src/tim.c     **** 
 113:Src/tim.c     **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
 114:Src/tim.c     **** {
 287              		.loc 1 114 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 8
 290              		@ frame_needed = 1, uses_anonymous_args = 0
 291 0000 80B5     		push	{r7, lr}
 292              	.LCFI15:
ARM GAS  /tmp/ccfa7ew2.s 			page 8


 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 7, -8
 295              		.cfi_offset 14, -4
 296 0002 82B0     		sub	sp, sp, #8
 297              	.LCFI16:
 298              		.cfi_def_cfa_offset 16
 299 0004 00AF     		add	r7, sp, #0
 300              	.LCFI17:
 301              		.cfi_def_cfa_register 7
 302 0006 7860     		str	r0, [r7, #4]
 115:Src/tim.c     **** 
 116:Src/tim.c     ****   if(htim_base->Instance==TIM1)
 303              		.loc 1 116 0
 304 0008 7B68     		ldr	r3, [r7, #4]
 305 000a 1B68     		ldr	r3, [r3]
 306 000c 1E4A     		ldr	r2, .L15
 307 000e 9342     		cmp	r3, r2
 308 0010 0ED1     		bne	.L11
 117:Src/tim.c     ****   {
 118:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 119:Src/tim.c     **** 
 120:Src/tim.c     ****   /* USER CODE END TIM1_MspInit 0 */
 121:Src/tim.c     ****     /* Peripheral clock enable */
 122:Src/tim.c     ****     __TIM1_CLK_ENABLE();
 309              		.loc 1 122 0
 310 0012 1E4A     		ldr	r2, .L15+4
 311 0014 1D4B     		ldr	r3, .L15+4
 312 0016 9B69     		ldr	r3, [r3, #24]
 313 0018 43F40063 		orr	r3, r3, #2048
 314 001c 9361     		str	r3, [r2, #24]
 123:Src/tim.c     **** 
 124:Src/tim.c     ****     /* Peripheral interrupt init*/
 125:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, 0, 0);
 315              		.loc 1 125 0
 316 001e 0022     		movs	r2, #0
 317 0020 0021     		movs	r1, #0
 318 0022 1920     		movs	r0, #25
 319 0024 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 126:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 320              		.loc 1 126 0
 321 0028 1920     		movs	r0, #25
 322 002a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 127:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 128:Src/tim.c     **** 
 129:Src/tim.c     ****   /* USER CODE END TIM1_MspInit 1 */
 130:Src/tim.c     ****   }
 131:Src/tim.c     ****   else if(htim_base->Instance==TIM2)
 132:Src/tim.c     ****   {
 133:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 134:Src/tim.c     **** 
 135:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 0 */
 136:Src/tim.c     ****     /* Peripheral clock enable */
 137:Src/tim.c     ****     __TIM2_CLK_ENABLE();
 138:Src/tim.c     **** 
 139:Src/tim.c     ****     /* Peripheral interrupt init*/
 140:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 141:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
ARM GAS  /tmp/ccfa7ew2.s 			page 9


 142:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 143:Src/tim.c     **** 
 144:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 1 */
 145:Src/tim.c     ****   }
 146:Src/tim.c     ****   else if(htim_base->Instance==TIM3)
 147:Src/tim.c     ****   {
 148:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 0 */
 149:Src/tim.c     **** 
 150:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 0 */
 151:Src/tim.c     ****     /* Peripheral clock enable */
 152:Src/tim.c     ****     __TIM3_CLK_ENABLE();
 153:Src/tim.c     **** 
 154:Src/tim.c     ****     /* Peripheral interrupt init*/
 155:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 156:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM3_IRQn);
 157:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 158:Src/tim.c     **** 
 159:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 1 */
 160:Src/tim.c     ****   }
 161:Src/tim.c     **** }
 323              		.loc 1 161 0
 324 002e 26E0     		b	.L14
 325              	.L11:
 131:Src/tim.c     ****   {
 326              		.loc 1 131 0
 327 0030 7B68     		ldr	r3, [r7, #4]
 328 0032 1B68     		ldr	r3, [r3]
 329 0034 B3F1804F 		cmp	r3, #1073741824
 330 0038 0ED1     		bne	.L13
 137:Src/tim.c     **** 
 331              		.loc 1 137 0
 332 003a 144A     		ldr	r2, .L15+4
 333 003c 134B     		ldr	r3, .L15+4
 334 003e DB69     		ldr	r3, [r3, #28]
 335 0040 43F00103 		orr	r3, r3, #1
 336 0044 D361     		str	r3, [r2, #28]
 140:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 337              		.loc 1 140 0
 338 0046 0022     		movs	r2, #0
 339 0048 0021     		movs	r1, #0
 340 004a 1C20     		movs	r0, #28
 341 004c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 141:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 342              		.loc 1 141 0
 343 0050 1C20     		movs	r0, #28
 344 0052 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 345              		.loc 1 161 0
 346 0056 12E0     		b	.L14
 347              	.L13:
 146:Src/tim.c     ****   {
 348              		.loc 1 146 0
 349 0058 7B68     		ldr	r3, [r7, #4]
 350 005a 1B68     		ldr	r3, [r3]
 351 005c 0C4A     		ldr	r2, .L15+8
 352 005e 9342     		cmp	r3, r2
 353 0060 0DD1     		bne	.L14
 152:Src/tim.c     **** 
ARM GAS  /tmp/ccfa7ew2.s 			page 10


 354              		.loc 1 152 0
 355 0062 0A4A     		ldr	r2, .L15+4
 356 0064 094B     		ldr	r3, .L15+4
 357 0066 DB69     		ldr	r3, [r3, #28]
 358 0068 43F00203 		orr	r3, r3, #2
 359 006c D361     		str	r3, [r2, #28]
 155:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM3_IRQn);
 360              		.loc 1 155 0
 361 006e 0022     		movs	r2, #0
 362 0070 0021     		movs	r1, #0
 363 0072 1D20     		movs	r0, #29
 364 0074 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 156:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 365              		.loc 1 156 0
 366 0078 1D20     		movs	r0, #29
 367 007a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 368              	.L14:
 369              		.loc 1 161 0
 370 007e 00BF     		nop
 371 0080 0837     		adds	r7, r7, #8
 372              	.LCFI18:
 373              		.cfi_def_cfa_offset 8
 374 0082 BD46     		mov	sp, r7
 375              	.LCFI19:
 376              		.cfi_def_cfa_register 13
 377              		@ sp needed
 378 0084 80BD     		pop	{r7, pc}
 379              	.L16:
 380 0086 00BF     		.align	2
 381              	.L15:
 382 0088 002C0140 		.word	1073818624
 383 008c 00100240 		.word	1073876992
 384 0090 00040040 		.word	1073742848
 385              		.cfi_endproc
 386              	.LFE115:
 388              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 389              		.align	2
 390              		.global	HAL_TIM_Base_MspDeInit
 391              		.thumb
 392              		.thumb_func
 394              	HAL_TIM_Base_MspDeInit:
 395              	.LFB116:
 162:Src/tim.c     **** 
 163:Src/tim.c     **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* htim_base)
 164:Src/tim.c     **** {
 396              		.loc 1 164 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 8
 399              		@ frame_needed = 1, uses_anonymous_args = 0
 400 0000 80B5     		push	{r7, lr}
 401              	.LCFI20:
 402              		.cfi_def_cfa_offset 8
 403              		.cfi_offset 7, -8
 404              		.cfi_offset 14, -4
 405 0002 82B0     		sub	sp, sp, #8
 406              	.LCFI21:
 407              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccfa7ew2.s 			page 11


 408 0004 00AF     		add	r7, sp, #0
 409              	.LCFI22:
 410              		.cfi_def_cfa_register 7
 411 0006 7860     		str	r0, [r7, #4]
 165:Src/tim.c     **** 
 166:Src/tim.c     ****   if(htim_base->Instance==TIM1)
 412              		.loc 1 166 0
 413 0008 7B68     		ldr	r3, [r7, #4]
 414 000a 1B68     		ldr	r3, [r3]
 415 000c 164A     		ldr	r2, .L22
 416 000e 9342     		cmp	r3, r2
 417 0010 09D1     		bne	.L18
 167:Src/tim.c     ****   {
 168:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 169:Src/tim.c     **** 
 170:Src/tim.c     ****   /* USER CODE END TIM1_MspDeInit 0 */
 171:Src/tim.c     ****     /* Peripheral clock disable */
 172:Src/tim.c     ****     __TIM1_CLK_DISABLE();
 418              		.loc 1 172 0
 419 0012 164A     		ldr	r2, .L22+4
 420 0014 154B     		ldr	r3, .L22+4
 421 0016 9B69     		ldr	r3, [r3, #24]
 422 0018 23F40063 		bic	r3, r3, #2048
 423 001c 9361     		str	r3, [r2, #24]
 173:Src/tim.c     **** 
 174:Src/tim.c     ****     /* Peripheral interrupt Deinit*/
 175:Src/tim.c     ****     HAL_NVIC_DisableIRQ(TIM1_UP_TIM16_IRQn);
 424              		.loc 1 175 0
 425 001e 1920     		movs	r0, #25
 426 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 176:Src/tim.c     **** 
 177:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 178:Src/tim.c     **** 
 179:Src/tim.c     ****   /* USER CODE END TIM1_MspDeInit 1 */
 180:Src/tim.c     ****   }
 181:Src/tim.c     ****   else if(htim_base->Instance==TIM2)
 182:Src/tim.c     ****   {
 183:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 184:Src/tim.c     **** 
 185:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 0 */
 186:Src/tim.c     ****     /* Peripheral clock disable */
 187:Src/tim.c     ****     __TIM2_CLK_DISABLE();
 188:Src/tim.c     **** 
 189:Src/tim.c     ****     /* Peripheral interrupt Deinit*/
 190:Src/tim.c     ****     HAL_NVIC_DisableIRQ(TIM2_IRQn);
 191:Src/tim.c     **** 
 192:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 193:Src/tim.c     **** 
 194:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 1 */
 195:Src/tim.c     ****   }
 196:Src/tim.c     ****   else if(htim_base->Instance==TIM3)
 197:Src/tim.c     ****   {
 198:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 0 */
 199:Src/tim.c     **** 
 200:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 0 */
 201:Src/tim.c     ****     /* Peripheral clock disable */
 202:Src/tim.c     ****     __TIM3_CLK_DISABLE();
ARM GAS  /tmp/ccfa7ew2.s 			page 12


 203:Src/tim.c     **** 
 204:Src/tim.c     ****     /* Peripheral interrupt Deinit*/
 205:Src/tim.c     ****     HAL_NVIC_DisableIRQ(TIM3_IRQn);
 206:Src/tim.c     **** 
 207:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 208:Src/tim.c     **** 
 209:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 1 */
 210:Src/tim.c     ****   }
 211:Src/tim.c     **** } 
 427              		.loc 1 211 0
 428 0024 1CE0     		b	.L21
 429              	.L18:
 181:Src/tim.c     ****   {
 430              		.loc 1 181 0
 431 0026 7B68     		ldr	r3, [r7, #4]
 432 0028 1B68     		ldr	r3, [r3]
 433 002a B3F1804F 		cmp	r3, #1073741824
 434 002e 09D1     		bne	.L20
 187:Src/tim.c     **** 
 435              		.loc 1 187 0
 436 0030 0E4A     		ldr	r2, .L22+4
 437 0032 0E4B     		ldr	r3, .L22+4
 438 0034 DB69     		ldr	r3, [r3, #28]
 439 0036 23F00103 		bic	r3, r3, #1
 440 003a D361     		str	r3, [r2, #28]
 190:Src/tim.c     **** 
 441              		.loc 1 190 0
 442 003c 1C20     		movs	r0, #28
 443 003e FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 444              		.loc 1 211 0
 445 0042 0DE0     		b	.L21
 446              	.L20:
 196:Src/tim.c     ****   {
 447              		.loc 1 196 0
 448 0044 7B68     		ldr	r3, [r7, #4]
 449 0046 1B68     		ldr	r3, [r3]
 450 0048 094A     		ldr	r2, .L22+8
 451 004a 9342     		cmp	r3, r2
 452 004c 08D1     		bne	.L21
 202:Src/tim.c     **** 
 453              		.loc 1 202 0
 454 004e 074A     		ldr	r2, .L22+4
 455 0050 064B     		ldr	r3, .L22+4
 456 0052 DB69     		ldr	r3, [r3, #28]
 457 0054 23F00203 		bic	r3, r3, #2
 458 0058 D361     		str	r3, [r2, #28]
 205:Src/tim.c     **** 
 459              		.loc 1 205 0
 460 005a 1D20     		movs	r0, #29
 461 005c FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 462              	.L21:
 463              		.loc 1 211 0
 464 0060 00BF     		nop
 465 0062 0837     		adds	r7, r7, #8
 466              	.LCFI23:
 467              		.cfi_def_cfa_offset 8
 468 0064 BD46     		mov	sp, r7
ARM GAS  /tmp/ccfa7ew2.s 			page 13


 469              	.LCFI24:
 470              		.cfi_def_cfa_register 13
 471              		@ sp needed
 472 0066 80BD     		pop	{r7, pc}
 473              	.L23:
 474              		.align	2
 475              	.L22:
 476 0068 002C0140 		.word	1073818624
 477 006c 00100240 		.word	1073876992
 478 0070 00040040 		.word	1073742848
 479              		.cfi_endproc
 480              	.LFE116:
 482              		.text
 483              	.Letext0:
 484              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 485              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 486              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 487              		.file 5 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 488              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 489              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 490              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim_ex.h"
 491              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/ccfa7ew2.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
                            *COM*:000000000000003c htim1
                            *COM*:000000000000003c htim2
                            *COM*:000000000000003c htim3
     /tmp/ccfa7ew2.s:24     .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccfa7ew2.s:29     .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccfa7ew2.s:109    .text.MX_TIM1_Init:0000000000000064 $d
     /tmp/ccfa7ew2.s:115    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccfa7ew2.s:120    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccfa7ew2.s:192    .text.MX_TIM2_Init:000000000000005c $d
     /tmp/ccfa7ew2.s:197    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccfa7ew2.s:202    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccfa7ew2.s:274    .text.MX_TIM3_Init:0000000000000058 $d
     /tmp/ccfa7ew2.s:280    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccfa7ew2.s:285    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccfa7ew2.s:382    .text.HAL_TIM_Base_MspInit:0000000000000088 $d
     /tmp/ccfa7ew2.s:389    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccfa7ew2.s:394    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccfa7ew2.s:476    .text.HAL_TIM_Base_MspDeInit:0000000000000068 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_NVIC_DisableIRQ
