ARM GAS  /tmp/ccmMAFV5.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"usart.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.comm	huart1,108,4
  21              		.comm	huart3,108,4
  22              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  23              		.align	2
  24              		.global	MX_USART1_UART_Init
  25              		.thumb
  26              		.thumb_func
  28              	MX_USART1_UART_Init:
  29              	.LFB112:
  30              		.file 1 "Src/usart.c"
   1:Src/usart.c   **** /**
   2:Src/usart.c   ****   ******************************************************************************
   3:Src/usart.c   ****   * File Name          : USART.c
   4:Src/usart.c   ****   * Date               : 26/05/2015 10:05:16
   5:Src/usart.c   ****   * Description        : This file provides code for the configuration
   6:Src/usart.c   ****   *                      of the USART instances.
   7:Src/usart.c   ****   ******************************************************************************
   8:Src/usart.c   ****   *
   9:Src/usart.c   ****   * COPYRIGHT(c) 2015 STMicroelectronics
  10:Src/usart.c   ****   *
  11:Src/usart.c   ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Src/usart.c   ****   * are permitted provided that the following conditions are met:
  13:Src/usart.c   ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Src/usart.c   ****   *      this list of conditions and the following disclaimer.
  15:Src/usart.c   ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:Src/usart.c   ****   *      this list of conditions and the following disclaimer in the documentation
  17:Src/usart.c   ****   *      and/or other materials provided with the distribution.
  18:Src/usart.c   ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Src/usart.c   ****   *      may be used to endorse or promote products derived from this software
  20:Src/usart.c   ****   *      without specific prior written permission.
  21:Src/usart.c   ****   *
  22:Src/usart.c   ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Src/usart.c   ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Src/usart.c   ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Src/usart.c   ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Src/usart.c   ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Src/usart.c   ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:Src/usart.c   ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /tmp/ccmMAFV5.s 			page 2


  29:Src/usart.c   ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Src/usart.c   ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Src/usart.c   ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:Src/usart.c   ****   *
  33:Src/usart.c   ****   ******************************************************************************
  34:Src/usart.c   ****   */
  35:Src/usart.c   **** 
  36:Src/usart.c   **** /* Includes ------------------------------------------------------------------*/
  37:Src/usart.c   **** #include "usart.h"
  38:Src/usart.c   **** 
  39:Src/usart.c   **** #include "gpio.h"
  40:Src/usart.c   **** 
  41:Src/usart.c   **** /* USER CODE BEGIN 0 */
  42:Src/usart.c   **** 
  43:Src/usart.c   **** /* USER CODE END 0 */
  44:Src/usart.c   **** 
  45:Src/usart.c   **** UART_HandleTypeDef huart1;
  46:Src/usart.c   **** UART_HandleTypeDef huart3;
  47:Src/usart.c   **** 
  48:Src/usart.c   **** /* USART1 init function */
  49:Src/usart.c   **** 
  50:Src/usart.c   **** void MX_USART1_UART_Init(void)
  51:Src/usart.c   **** {
  31              		.loc 1 51 0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 1, uses_anonymous_args = 0
  35 0000 80B5     		push	{r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 00AF     		add	r7, sp, #0
  41              	.LCFI1:
  42              		.cfi_def_cfa_register 7
  52:Src/usart.c   **** 
  53:Src/usart.c   ****   huart1.Instance = USART1;
  43              		.loc 1 53 0
  44 0004 114B     		ldr	r3, .L2
  45 0006 124A     		ldr	r2, .L2+4
  46 0008 1A60     		str	r2, [r3]
  54:Src/usart.c   ****   huart1.Init.BaudRate = 115200;
  47              		.loc 1 54 0
  48 000a 104B     		ldr	r3, .L2
  49 000c 4FF4E132 		mov	r2, #115200
  50 0010 5A60     		str	r2, [r3, #4]
  55:Src/usart.c   ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  51              		.loc 1 55 0
  52 0012 0E4B     		ldr	r3, .L2
  53 0014 0022     		movs	r2, #0
  54 0016 9A60     		str	r2, [r3, #8]
  56:Src/usart.c   ****   huart1.Init.StopBits = UART_STOPBITS_1;
  55              		.loc 1 56 0
  56 0018 0C4B     		ldr	r3, .L2
  57 001a 0022     		movs	r2, #0
  58 001c DA60     		str	r2, [r3, #12]
  57:Src/usart.c   ****   huart1.Init.Parity = UART_PARITY_NONE;
ARM GAS  /tmp/ccmMAFV5.s 			page 3


  59              		.loc 1 57 0
  60 001e 0B4B     		ldr	r3, .L2
  61 0020 0022     		movs	r2, #0
  62 0022 1A61     		str	r2, [r3, #16]
  58:Src/usart.c   ****   huart1.Init.Mode = UART_MODE_TX_RX;
  63              		.loc 1 58 0
  64 0024 094B     		ldr	r3, .L2
  65 0026 0C22     		movs	r2, #12
  66 0028 5A61     		str	r2, [r3, #20]
  59:Src/usart.c   ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  67              		.loc 1 59 0
  68 002a 084B     		ldr	r3, .L2
  69 002c 0022     		movs	r2, #0
  70 002e 9A61     		str	r2, [r3, #24]
  60:Src/usart.c   ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  71              		.loc 1 60 0
  72 0030 064B     		ldr	r3, .L2
  73 0032 0022     		movs	r2, #0
  74 0034 DA61     		str	r2, [r3, #28]
  61:Src/usart.c   ****   huart1.Init.OneBitSampling = UART_ONEBIT_SAMPLING_DISABLED ;
  75              		.loc 1 61 0
  76 0036 054B     		ldr	r3, .L2
  77 0038 0022     		movs	r2, #0
  78 003a 1A62     		str	r2, [r3, #32]
  62:Src/usart.c   ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  79              		.loc 1 62 0
  80 003c 034B     		ldr	r3, .L2
  81 003e 0022     		movs	r2, #0
  82 0040 5A62     		str	r2, [r3, #36]
  63:Src/usart.c   ****   HAL_UART_Init(&huart1);
  83              		.loc 1 63 0
  84 0042 0248     		ldr	r0, .L2
  85 0044 FFF7FEFF 		bl	HAL_UART_Init
  64:Src/usart.c   **** 
  65:Src/usart.c   **** }
  86              		.loc 1 65 0
  87 0048 00BF     		nop
  88 004a 80BD     		pop	{r7, pc}
  89              	.L3:
  90              		.align	2
  91              	.L2:
  92 004c 00000000 		.word	huart1
  93 0050 00380140 		.word	1073821696
  94              		.cfi_endproc
  95              	.LFE112:
  97              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
  98              		.align	2
  99              		.global	MX_USART3_UART_Init
 100              		.thumb
 101              		.thumb_func
 103              	MX_USART3_UART_Init:
 104              	.LFB113:
  66:Src/usart.c   **** /* USART3 init function */
  67:Src/usart.c   **** 
  68:Src/usart.c   **** void MX_USART3_UART_Init(void)
  69:Src/usart.c   **** {
 105              		.loc 1 69 0
ARM GAS  /tmp/ccmMAFV5.s 			page 4


 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 1, uses_anonymous_args = 0
 109 0000 80B5     		push	{r7, lr}
 110              	.LCFI2:
 111              		.cfi_def_cfa_offset 8
 112              		.cfi_offset 7, -8
 113              		.cfi_offset 14, -4
 114 0002 00AF     		add	r7, sp, #0
 115              	.LCFI3:
 116              		.cfi_def_cfa_register 7
  70:Src/usart.c   **** 
  71:Src/usart.c   ****   huart3.Instance = USART3;
 117              		.loc 1 71 0
 118 0004 114B     		ldr	r3, .L5
 119 0006 124A     		ldr	r2, .L5+4
 120 0008 1A60     		str	r2, [r3]
  72:Src/usart.c   ****   huart3.Init.BaudRate = 31250;
 121              		.loc 1 72 0
 122 000a 104B     		ldr	r3, .L5
 123 000c 47F61222 		movw	r2, #31250
 124 0010 5A60     		str	r2, [r3, #4]
  73:Src/usart.c   ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 125              		.loc 1 73 0
 126 0012 0E4B     		ldr	r3, .L5
 127 0014 0022     		movs	r2, #0
 128 0016 9A60     		str	r2, [r3, #8]
  74:Src/usart.c   ****   huart3.Init.StopBits = UART_STOPBITS_1;
 129              		.loc 1 74 0
 130 0018 0C4B     		ldr	r3, .L5
 131 001a 0022     		movs	r2, #0
 132 001c DA60     		str	r2, [r3, #12]
  75:Src/usart.c   ****   huart3.Init.Parity = UART_PARITY_NONE;
 133              		.loc 1 75 0
 134 001e 0B4B     		ldr	r3, .L5
 135 0020 0022     		movs	r2, #0
 136 0022 1A61     		str	r2, [r3, #16]
  76:Src/usart.c   ****   huart3.Init.Mode = UART_MODE_TX_RX;
 137              		.loc 1 76 0
 138 0024 094B     		ldr	r3, .L5
 139 0026 0C22     		movs	r2, #12
 140 0028 5A61     		str	r2, [r3, #20]
  77:Src/usart.c   ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 141              		.loc 1 77 0
 142 002a 084B     		ldr	r3, .L5
 143 002c 0022     		movs	r2, #0
 144 002e 9A61     		str	r2, [r3, #24]
  78:Src/usart.c   ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 145              		.loc 1 78 0
 146 0030 064B     		ldr	r3, .L5
 147 0032 0022     		movs	r2, #0
 148 0034 DA61     		str	r2, [r3, #28]
  79:Src/usart.c   ****   huart3.Init.OneBitSampling = UART_ONEBIT_SAMPLING_DISABLED ;
 149              		.loc 1 79 0
 150 0036 054B     		ldr	r3, .L5
 151 0038 0022     		movs	r2, #0
 152 003a 1A62     		str	r2, [r3, #32]
ARM GAS  /tmp/ccmMAFV5.s 			page 5


  80:Src/usart.c   ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 153              		.loc 1 80 0
 154 003c 034B     		ldr	r3, .L5
 155 003e 0022     		movs	r2, #0
 156 0040 5A62     		str	r2, [r3, #36]
  81:Src/usart.c   ****   HAL_UART_Init(&huart3);
 157              		.loc 1 81 0
 158 0042 0248     		ldr	r0, .L5
 159 0044 FFF7FEFF 		bl	HAL_UART_Init
  82:Src/usart.c   **** 
  83:Src/usart.c   **** }
 160              		.loc 1 83 0
 161 0048 00BF     		nop
 162 004a 80BD     		pop	{r7, pc}
 163              	.L6:
 164              		.align	2
 165              	.L5:
 166 004c 00000000 		.word	huart3
 167 0050 00480040 		.word	1073760256
 168              		.cfi_endproc
 169              	.LFE113:
 171              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 172              		.align	2
 173              		.global	HAL_UART_MspInit
 174              		.thumb
 175              		.thumb_func
 177              	HAL_UART_MspInit:
 178              	.LFB114:
  84:Src/usart.c   **** 
  85:Src/usart.c   **** void HAL_UART_MspInit(UART_HandleTypeDef* huart)
  86:Src/usart.c   **** {
 179              		.loc 1 86 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 32
 182              		@ frame_needed = 1, uses_anonymous_args = 0
 183 0000 80B5     		push	{r7, lr}
 184              	.LCFI4:
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 7, -8
 187              		.cfi_offset 14, -4
 188 0002 88B0     		sub	sp, sp, #32
 189              	.LCFI5:
 190              		.cfi_def_cfa_offset 40
 191 0004 00AF     		add	r7, sp, #0
 192              	.LCFI6:
 193              		.cfi_def_cfa_register 7
 194 0006 7860     		str	r0, [r7, #4]
  87:Src/usart.c   **** 
  88:Src/usart.c   ****   GPIO_InitTypeDef GPIO_InitStruct;
  89:Src/usart.c   ****   if(huart->Instance==USART1)
 195              		.loc 1 89 0
 196 0008 7B68     		ldr	r3, [r7, #4]
 197 000a 1B68     		ldr	r3, [r3]
 198 000c 254A     		ldr	r2, .L11
 199 000e 9342     		cmp	r3, r2
 200 0010 20D1     		bne	.L8
  90:Src/usart.c   ****   {
ARM GAS  /tmp/ccmMAFV5.s 			page 6


  91:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 0 */
  92:Src/usart.c   **** 
  93:Src/usart.c   ****   /* USER CODE END USART1_MspInit 0 */
  94:Src/usart.c   ****     /* Peripheral clock enable */
  95:Src/usart.c   ****     __USART1_CLK_ENABLE();
 201              		.loc 1 95 0
 202 0012 254A     		ldr	r2, .L11+4
 203 0014 244B     		ldr	r3, .L11+4
 204 0016 9B69     		ldr	r3, [r3, #24]
 205 0018 43F48043 		orr	r3, r3, #16384
 206 001c 9361     		str	r3, [r2, #24]
  96:Src/usart.c   ****   
  97:Src/usart.c   ****     /**USART1 GPIO Configuration    
  98:Src/usart.c   ****     PA9     ------> USART1_TX
  99:Src/usart.c   ****     PA10     ------> USART1_RX 
 100:Src/usart.c   ****     */
 101:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 207              		.loc 1 101 0
 208 001e 4FF4C063 		mov	r3, #1536
 209 0022 FB60     		str	r3, [r7, #12]
 102:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 210              		.loc 1 102 0
 211 0024 0223     		movs	r3, #2
 212 0026 3B61     		str	r3, [r7, #16]
 103:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 213              		.loc 1 103 0
 214 0028 0123     		movs	r3, #1
 215 002a 7B61     		str	r3, [r7, #20]
 104:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_LOW;
 216              		.loc 1 104 0
 217 002c 0023     		movs	r3, #0
 218 002e BB61     		str	r3, [r7, #24]
 105:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 219              		.loc 1 105 0
 220 0030 0723     		movs	r3, #7
 221 0032 FB61     		str	r3, [r7, #28]
 106:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 222              		.loc 1 106 0
 223 0034 07F10C03 		add	r3, r7, #12
 224 0038 1946     		mov	r1, r3
 225 003a 4FF09040 		mov	r0, #1207959552
 226 003e FFF7FEFF 		bl	HAL_GPIO_Init
 107:Src/usart.c   **** 
 108:Src/usart.c   ****     /* Peripheral interrupt init*/
 109:Src/usart.c   ****     HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 227              		.loc 1 109 0
 228 0042 0022     		movs	r2, #0
 229 0044 0021     		movs	r1, #0
 230 0046 2520     		movs	r0, #37
 231 0048 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 110:Src/usart.c   ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 232              		.loc 1 110 0
 233 004c 2520     		movs	r0, #37
 234 004e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 111:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 1 */
 112:Src/usart.c   **** 
 113:Src/usart.c   ****   /* USER CODE END USART1_MspInit 1 */
ARM GAS  /tmp/ccmMAFV5.s 			page 7


 114:Src/usart.c   ****   }
 115:Src/usart.c   ****   else if(huart->Instance==USART3)
 116:Src/usart.c   ****   {
 117:Src/usart.c   ****   /* USER CODE BEGIN USART3_MspInit 0 */
 118:Src/usart.c   **** 
 119:Src/usart.c   ****   /* USER CODE END USART3_MspInit 0 */
 120:Src/usart.c   ****     /* Peripheral clock enable */
 121:Src/usart.c   ****     __USART3_CLK_ENABLE();
 122:Src/usart.c   ****   
 123:Src/usart.c   ****     /**USART3 GPIO Configuration    
 124:Src/usart.c   ****     PB10     ------> USART3_TX
 125:Src/usart.c   ****     PB11     ------> USART3_RX 
 126:Src/usart.c   ****     */
 127:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 128:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 129:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 130:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_LOW;
 131:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 132:Src/usart.c   ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 133:Src/usart.c   **** 
 134:Src/usart.c   ****     /* Peripheral interrupt init*/
 135:Src/usart.c   ****     HAL_NVIC_SetPriority(USART3_IRQn, 0, 0);
 136:Src/usart.c   ****     HAL_NVIC_EnableIRQ(USART3_IRQn);
 137:Src/usart.c   ****   /* USER CODE BEGIN USART3_MspInit 1 */
 138:Src/usart.c   **** 
 139:Src/usart.c   ****   /* USER CODE END USART3_MspInit 1 */
 140:Src/usart.c   ****   }
 141:Src/usart.c   **** }
 235              		.loc 1 141 0
 236 0052 23E0     		b	.L10
 237              	.L8:
 115:Src/usart.c   ****   {
 238              		.loc 1 115 0
 239 0054 7B68     		ldr	r3, [r7, #4]
 240 0056 1B68     		ldr	r3, [r3]
 241 0058 144A     		ldr	r2, .L11+8
 242 005a 9342     		cmp	r3, r2
 243 005c 1ED1     		bne	.L10
 121:Src/usart.c   ****   
 244              		.loc 1 121 0
 245 005e 124A     		ldr	r2, .L11+4
 246 0060 114B     		ldr	r3, .L11+4
 247 0062 DB69     		ldr	r3, [r3, #28]
 248 0064 43F48023 		orr	r3, r3, #262144
 249 0068 D361     		str	r3, [r2, #28]
 127:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 250              		.loc 1 127 0
 251 006a 4FF44063 		mov	r3, #3072
 252 006e FB60     		str	r3, [r7, #12]
 128:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 253              		.loc 1 128 0
 254 0070 0223     		movs	r3, #2
 255 0072 3B61     		str	r3, [r7, #16]
 129:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_LOW;
 256              		.loc 1 129 0
 257 0074 0123     		movs	r3, #1
 258 0076 7B61     		str	r3, [r7, #20]
ARM GAS  /tmp/ccmMAFV5.s 			page 8


 130:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 259              		.loc 1 130 0
 260 0078 0023     		movs	r3, #0
 261 007a BB61     		str	r3, [r7, #24]
 131:Src/usart.c   ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 262              		.loc 1 131 0
 263 007c 0723     		movs	r3, #7
 264 007e FB61     		str	r3, [r7, #28]
 132:Src/usart.c   **** 
 265              		.loc 1 132 0
 266 0080 07F10C03 		add	r3, r7, #12
 267 0084 1946     		mov	r1, r3
 268 0086 0A48     		ldr	r0, .L11+12
 269 0088 FFF7FEFF 		bl	HAL_GPIO_Init
 135:Src/usart.c   ****     HAL_NVIC_EnableIRQ(USART3_IRQn);
 270              		.loc 1 135 0
 271 008c 0022     		movs	r2, #0
 272 008e 0021     		movs	r1, #0
 273 0090 2720     		movs	r0, #39
 274 0092 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 136:Src/usart.c   ****   /* USER CODE BEGIN USART3_MspInit 1 */
 275              		.loc 1 136 0
 276 0096 2720     		movs	r0, #39
 277 0098 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 278              	.L10:
 279              		.loc 1 141 0
 280 009c 00BF     		nop
 281 009e 2037     		adds	r7, r7, #32
 282              	.LCFI7:
 283              		.cfi_def_cfa_offset 8
 284 00a0 BD46     		mov	sp, r7
 285              	.LCFI8:
 286              		.cfi_def_cfa_register 13
 287              		@ sp needed
 288 00a2 80BD     		pop	{r7, pc}
 289              	.L12:
 290              		.align	2
 291              	.L11:
 292 00a4 00380140 		.word	1073821696
 293 00a8 00100240 		.word	1073876992
 294 00ac 00480040 		.word	1073760256
 295 00b0 00040048 		.word	1207960576
 296              		.cfi_endproc
 297              	.LFE114:
 299              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 300              		.align	2
 301              		.global	HAL_UART_MspDeInit
 302              		.thumb
 303              		.thumb_func
 305              	HAL_UART_MspDeInit:
 306              	.LFB115:
 142:Src/usart.c   **** 
 143:Src/usart.c   **** void HAL_UART_MspDeInit(UART_HandleTypeDef* huart)
 144:Src/usart.c   **** {
 307              		.loc 1 144 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccmMAFV5.s 			page 9


 310              		@ frame_needed = 1, uses_anonymous_args = 0
 311 0000 80B5     		push	{r7, lr}
 312              	.LCFI9:
 313              		.cfi_def_cfa_offset 8
 314              		.cfi_offset 7, -8
 315              		.cfi_offset 14, -4
 316 0002 82B0     		sub	sp, sp, #8
 317              	.LCFI10:
 318              		.cfi_def_cfa_offset 16
 319 0004 00AF     		add	r7, sp, #0
 320              	.LCFI11:
 321              		.cfi_def_cfa_register 7
 322 0006 7860     		str	r0, [r7, #4]
 145:Src/usart.c   **** 
 146:Src/usart.c   ****   if(huart->Instance==USART1)
 323              		.loc 1 146 0
 324 0008 7B68     		ldr	r3, [r7, #4]
 325 000a 1B68     		ldr	r3, [r3]
 326 000c 144A     		ldr	r2, .L17
 327 000e 9342     		cmp	r3, r2
 328 0010 0FD1     		bne	.L14
 147:Src/usart.c   ****   {
 148:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 149:Src/usart.c   **** 
 150:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 0 */
 151:Src/usart.c   ****     /* Peripheral clock disable */
 152:Src/usart.c   ****     __USART1_CLK_DISABLE();
 329              		.loc 1 152 0
 330 0012 144A     		ldr	r2, .L17+4
 331 0014 134B     		ldr	r3, .L17+4
 332 0016 9B69     		ldr	r3, [r3, #24]
 333 0018 23F48043 		bic	r3, r3, #16384
 334 001c 9361     		str	r3, [r2, #24]
 153:Src/usart.c   ****   
 154:Src/usart.c   ****     /**USART1 GPIO Configuration    
 155:Src/usart.c   ****     PA9     ------> USART1_TX
 156:Src/usart.c   ****     PA10     ------> USART1_RX 
 157:Src/usart.c   ****     */
 158:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
 335              		.loc 1 158 0
 336 001e 4FF4C061 		mov	r1, #1536
 337 0022 4FF09040 		mov	r0, #1207959552
 338 0026 FFF7FEFF 		bl	HAL_GPIO_DeInit
 159:Src/usart.c   **** 
 160:Src/usart.c   ****     /* Peripheral interrupt Deinit*/
 161:Src/usart.c   ****     HAL_NVIC_DisableIRQ(USART1_IRQn);
 339              		.loc 1 161 0
 340 002a 2520     		movs	r0, #37
 341 002c FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 162:Src/usart.c   **** 
 163:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 164:Src/usart.c   **** 
 165:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 1 */
 166:Src/usart.c   ****   }
 167:Src/usart.c   ****   else if(huart->Instance==USART3)
 168:Src/usart.c   ****   {
 169:Src/usart.c   ****   /* USER CODE BEGIN USART3_MspDeInit 0 */
ARM GAS  /tmp/ccmMAFV5.s 			page 10


 170:Src/usart.c   **** 
 171:Src/usart.c   ****   /* USER CODE END USART3_MspDeInit 0 */
 172:Src/usart.c   ****     /* Peripheral clock disable */
 173:Src/usart.c   ****     __USART3_CLK_DISABLE();
 174:Src/usart.c   ****   
 175:Src/usart.c   ****     /**USART3 GPIO Configuration    
 176:Src/usart.c   ****     PB10     ------> USART3_TX
 177:Src/usart.c   ****     PB11     ------> USART3_RX 
 178:Src/usart.c   ****     */
 179:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_10|GPIO_PIN_11);
 180:Src/usart.c   **** 
 181:Src/usart.c   ****     /* Peripheral interrupt Deinit*/
 182:Src/usart.c   ****     HAL_NVIC_DisableIRQ(USART3_IRQn);
 183:Src/usart.c   **** 
 184:Src/usart.c   ****   /* USER CODE BEGIN USART3_MspDeInit 1 */
 185:Src/usart.c   **** 
 186:Src/usart.c   ****   /* USER CODE END USART3_MspDeInit 1 */
 187:Src/usart.c   ****   }
 188:Src/usart.c   **** } 
 342              		.loc 1 188 0
 343 0030 12E0     		b	.L16
 344              	.L14:
 167:Src/usart.c   ****   {
 345              		.loc 1 167 0
 346 0032 7B68     		ldr	r3, [r7, #4]
 347 0034 1B68     		ldr	r3, [r3]
 348 0036 0C4A     		ldr	r2, .L17+8
 349 0038 9342     		cmp	r3, r2
 350 003a 0DD1     		bne	.L16
 173:Src/usart.c   ****   
 351              		.loc 1 173 0
 352 003c 094A     		ldr	r2, .L17+4
 353 003e 094B     		ldr	r3, .L17+4
 354 0040 DB69     		ldr	r3, [r3, #28]
 355 0042 23F48023 		bic	r3, r3, #262144
 356 0046 D361     		str	r3, [r2, #28]
 179:Src/usart.c   **** 
 357              		.loc 1 179 0
 358 0048 4FF44061 		mov	r1, #3072
 359 004c 0748     		ldr	r0, .L17+12
 360 004e FFF7FEFF 		bl	HAL_GPIO_DeInit
 182:Src/usart.c   **** 
 361              		.loc 1 182 0
 362 0052 2720     		movs	r0, #39
 363 0054 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 364              	.L16:
 365              		.loc 1 188 0
 366 0058 00BF     		nop
 367 005a 0837     		adds	r7, r7, #8
 368              	.LCFI12:
 369              		.cfi_def_cfa_offset 8
 370 005c BD46     		mov	sp, r7
 371              	.LCFI13:
 372              		.cfi_def_cfa_register 13
 373              		@ sp needed
 374 005e 80BD     		pop	{r7, pc}
 375              	.L18:
ARM GAS  /tmp/ccmMAFV5.s 			page 11


 376              		.align	2
 377              	.L17:
 378 0060 00380140 		.word	1073821696
 379 0064 00100240 		.word	1073876992
 380 0068 00480040 		.word	1073760256
 381 006c 00040048 		.word	1207960576
 382              		.cfi_endproc
 383              	.LFE115:
 385              		.text
 386              	.Letext0:
 387              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 388              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 389              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 390              		.file 5 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 391              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 392              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 393              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 394              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/ccmMAFV5.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
                            *COM*:000000000000006c huart1
                            *COM*:000000000000006c huart3
     /tmp/ccmMAFV5.s:23     .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccmMAFV5.s:28     .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccmMAFV5.s:92     .text.MX_USART1_UART_Init:000000000000004c $d
     /tmp/ccmMAFV5.s:98     .text.MX_USART3_UART_Init:0000000000000000 $t
     /tmp/ccmMAFV5.s:103    .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
     /tmp/ccmMAFV5.s:166    .text.MX_USART3_UART_Init:000000000000004c $d
     /tmp/ccmMAFV5.s:172    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccmMAFV5.s:177    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccmMAFV5.s:292    .text.HAL_UART_MspInit:00000000000000a4 $d
     /tmp/ccmMAFV5.s:300    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccmMAFV5.s:305    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccmMAFV5.s:378    .text.HAL_UART_MspDeInit:0000000000000060 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_UART_Init
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
