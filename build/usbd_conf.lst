ARM GAS  /tmp/ccIr5YrL.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"usbd_conf.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.comm	hpcd_USB_FS,544,4
  21              		.global	remotewakeupon
  22              		.section	.bss.remotewakeupon,"aw",%nobits
  23              		.align	2
  26              	remotewakeupon:
  27 0000 00000000 		.space	4
  28              		.section	.text.HAL_PCD_MspInit,"ax",%progbits
  29              		.align	2
  30              		.global	HAL_PCD_MspInit
  31              		.thumb
  32              		.thumb_func
  34              	HAL_PCD_MspInit:
  35              	.LFB112:
  36              		.file 1 "Src/usbd_conf.c"
   1:Src/usbd_conf.c **** /**
   2:Src/usbd_conf.c ****   ******************************************************************************
   3:Src/usbd_conf.c ****   * @file           : usbd_conf.c
   4:Src/usbd_conf.c ****   * @date           : 26/05/2015 10:05:17   
   5:Src/usbd_conf.c ****   * @version        : v1.0_Cube
   6:Src/usbd_conf.c ****   * @brief          : This file implements the board support package for the USB device library
   7:Src/usbd_conf.c ****   ******************************************************************************
   8:Src/usbd_conf.c ****   *
   9:Src/usbd_conf.c ****   * COPYRIGHT(c) 2015 STMicroelectronics
  10:Src/usbd_conf.c ****   *
  11:Src/usbd_conf.c ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Src/usbd_conf.c ****   * are permitted provided that the following conditions are met:
  13:Src/usbd_conf.c ****   * 1. Redistributions of source code must retain the above copyright notice,
  14:Src/usbd_conf.c ****   * this list of conditions and the following disclaimer.
  15:Src/usbd_conf.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  16:Src/usbd_conf.c ****   * this list of conditions and the following disclaimer in the documentation
  17:Src/usbd_conf.c ****   * and/or other materials provided with the distribution.
  18:Src/usbd_conf.c ****   * 3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Src/usbd_conf.c ****   * may be used to endorse or promote products derived from this software
  20:Src/usbd_conf.c ****   * without specific prior written permission.
  21:Src/usbd_conf.c ****   *
  22:Src/usbd_conf.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Src/usbd_conf.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Src/usbd_conf.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
ARM GAS  /tmp/ccIr5YrL.s 			page 2


  25:Src/usbd_conf.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Src/usbd_conf.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Src/usbd_conf.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:Src/usbd_conf.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Src/usbd_conf.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Src/usbd_conf.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Src/usbd_conf.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:Src/usbd_conf.c ****   *
  33:Src/usbd_conf.c ****   ******************************************************************************
  34:Src/usbd_conf.c **** */
  35:Src/usbd_conf.c **** /* Includes ------------------------------------------------------------------*/
  36:Src/usbd_conf.c **** #include "stm32f3xx.h"
  37:Src/usbd_conf.c **** #include "stm32f3xx_hal.h"
  38:Src/usbd_conf.c **** #include "usbd_def.h"
  39:Src/usbd_conf.c **** #include "usbd_core.h"
  40:Src/usbd_conf.c **** #include "usbd_audio.h"
  41:Src/usbd_conf.c **** /* Private typedef -----------------------------------------------------------*/
  42:Src/usbd_conf.c **** /* Private define ------------------------------------------------------------*/
  43:Src/usbd_conf.c **** /* Private macro -------------------------------------------------------------*/
  44:Src/usbd_conf.c **** /* Private variables ---------------------------------------------------------*/
  45:Src/usbd_conf.c **** PCD_HandleTypeDef hpcd_USB_FS;
  46:Src/usbd_conf.c **** 
  47:Src/usbd_conf.c **** /* USER CODE BEGIN 0 */
  48:Src/usbd_conf.c **** __IO uint32_t remotewakeupon=0;
  49:Src/usbd_conf.c **** /* USER CODE END 0 */
  50:Src/usbd_conf.c **** 
  51:Src/usbd_conf.c **** /* Private function prototypes -----------------------------------------------*/
  52:Src/usbd_conf.c **** /* Private functions ---------------------------------------------------------*/
  53:Src/usbd_conf.c **** /* USER CODE BEGIN 1 */
  54:Src/usbd_conf.c **** static void SystemClockConfig_Resume(void);
  55:Src/usbd_conf.c **** /* USER CODE END 1 */
  56:Src/usbd_conf.c **** void HAL_PCDEx_SetConnectionState(PCD_HandleTypeDef *hpcd, uint8_t state);
  57:Src/usbd_conf.c **** extern void SystemClock_Config(void);
  58:Src/usbd_conf.c **** 
  59:Src/usbd_conf.c **** /*******************************************************************************
  60:Src/usbd_conf.c ****                        LL Driver Callbacks (PCD -> USB Device Library)
  61:Src/usbd_conf.c **** *******************************************************************************/
  62:Src/usbd_conf.c **** /* MSP Init */
  63:Src/usbd_conf.c **** 
  64:Src/usbd_conf.c **** void HAL_PCD_MspInit(PCD_HandleTypeDef* hpcd)
  65:Src/usbd_conf.c **** {
  37              		.loc 1 65 0
  38              		.cfi_startproc
  39              		@ args = 0, pretend = 0, frame = 32
  40              		@ frame_needed = 1, uses_anonymous_args = 0
  41 0000 80B5     		push	{r7, lr}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 8
  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  46 0002 88B0     		sub	sp, sp, #32
  47              	.LCFI1:
  48              		.cfi_def_cfa_offset 40
  49 0004 00AF     		add	r7, sp, #0
  50              	.LCFI2:
  51              		.cfi_def_cfa_register 7
  52 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccIr5YrL.s 			page 3


  66:Src/usbd_conf.c ****   GPIO_InitTypeDef GPIO_InitStruct;
  67:Src/usbd_conf.c ****   if(hpcd->Instance==USB)
  53              		.loc 1 67 0
  54 0008 7B68     		ldr	r3, [r7, #4]
  55 000a 1B68     		ldr	r3, [r3]
  56 000c 134A     		ldr	r2, .L4
  57 000e 9342     		cmp	r3, r2
  58 0010 1FD1     		bne	.L3
  68:Src/usbd_conf.c ****   {
  69:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_MspInit 0 */
  70:Src/usbd_conf.c **** 
  71:Src/usbd_conf.c ****   /* USER CODE END USB_MspInit 0 */
  72:Src/usbd_conf.c ****     /* Peripheral clock enable */
  73:Src/usbd_conf.c ****     __USB_CLK_ENABLE();
  59              		.loc 1 73 0
  60 0012 134A     		ldr	r2, .L4+4
  61 0014 124B     		ldr	r3, .L4+4
  62 0016 DB69     		ldr	r3, [r3, #28]
  63 0018 43F40003 		orr	r3, r3, #8388608
  64 001c D361     		str	r3, [r2, #28]
  74:Src/usbd_conf.c ****   
  75:Src/usbd_conf.c ****     /**USB GPIO Configuration    
  76:Src/usbd_conf.c ****     PA11     ------> USB_DM
  77:Src/usbd_conf.c ****     PA12     ------> USB_DP 
  78:Src/usbd_conf.c ****     */
  79:Src/usbd_conf.c ****     GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;
  65              		.loc 1 79 0
  66 001e 4FF4C053 		mov	r3, #6144
  67 0022 FB60     		str	r3, [r7, #12]
  80:Src/usbd_conf.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  68              		.loc 1 80 0
  69 0024 0223     		movs	r3, #2
  70 0026 3B61     		str	r3, [r7, #16]
  81:Src/usbd_conf.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  71              		.loc 1 81 0
  72 0028 0023     		movs	r3, #0
  73 002a 7B61     		str	r3, [r7, #20]
  82:Src/usbd_conf.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_LOW;
  74              		.loc 1 82 0
  75 002c 0023     		movs	r3, #0
  76 002e BB61     		str	r3, [r7, #24]
  83:Src/usbd_conf.c ****     GPIO_InitStruct.Alternate = GPIO_AF14_USB;
  77              		.loc 1 83 0
  78 0030 0E23     		movs	r3, #14
  79 0032 FB61     		str	r3, [r7, #28]
  84:Src/usbd_conf.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  80              		.loc 1 84 0
  81 0034 07F10C03 		add	r3, r7, #12
  82 0038 1946     		mov	r1, r3
  83 003a 4FF09040 		mov	r0, #1207959552
  84 003e FFF7FEFF 		bl	HAL_GPIO_Init
  85:Src/usbd_conf.c **** 
  86:Src/usbd_conf.c ****     HAL_NVIC_SetPriority(USB_LP_CAN_RX0_IRQn, 0, 0);
  85              		.loc 1 86 0
  86 0042 0022     		movs	r2, #0
  87 0044 0021     		movs	r1, #0
  88 0046 1420     		movs	r0, #20
ARM GAS  /tmp/ccIr5YrL.s 			page 4


  89 0048 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  87:Src/usbd_conf.c ****     HAL_NVIC_EnableIRQ(USB_LP_CAN_RX0_IRQn);
  90              		.loc 1 87 0
  91 004c 1420     		movs	r0, #20
  92 004e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  93              	.L3:
  88:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_MspInit 1 */
  89:Src/usbd_conf.c **** 
  90:Src/usbd_conf.c ****   /* USER CODE END USB_MspInit 1 */
  91:Src/usbd_conf.c ****   }
  92:Src/usbd_conf.c **** }
  94              		.loc 1 92 0
  95 0052 00BF     		nop
  96 0054 2037     		adds	r7, r7, #32
  97              	.LCFI3:
  98              		.cfi_def_cfa_offset 8
  99 0056 BD46     		mov	sp, r7
 100              	.LCFI4:
 101              		.cfi_def_cfa_register 13
 102              		@ sp needed
 103 0058 80BD     		pop	{r7, pc}
 104              	.L5:
 105 005a 00BF     		.align	2
 106              	.L4:
 107 005c 005C0040 		.word	1073765376
 108 0060 00100240 		.word	1073876992
 109              		.cfi_endproc
 110              	.LFE112:
 112              		.section	.text.HAL_PCD_MspDeInit,"ax",%progbits
 113              		.align	2
 114              		.global	HAL_PCD_MspDeInit
 115              		.thumb
 116              		.thumb_func
 118              	HAL_PCD_MspDeInit:
 119              	.LFB113:
  93:Src/usbd_conf.c **** 
  94:Src/usbd_conf.c **** void HAL_PCD_MspDeInit(PCD_HandleTypeDef* hpcd)
  95:Src/usbd_conf.c **** {
 120              		.loc 1 95 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 8
 123              		@ frame_needed = 1, uses_anonymous_args = 0
 124 0000 80B5     		push	{r7, lr}
 125              	.LCFI5:
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 7, -8
 128              		.cfi_offset 14, -4
 129 0002 82B0     		sub	sp, sp, #8
 130              	.LCFI6:
 131              		.cfi_def_cfa_offset 16
 132 0004 00AF     		add	r7, sp, #0
 133              	.LCFI7:
 134              		.cfi_def_cfa_register 7
 135 0006 7860     		str	r0, [r7, #4]
  96:Src/usbd_conf.c ****   if(hpcd->Instance==USB)
 136              		.loc 1 96 0
 137 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccIr5YrL.s 			page 5


 138 000a 1B68     		ldr	r3, [r3]
 139 000c 0A4A     		ldr	r2, .L9
 140 000e 9342     		cmp	r3, r2
 141 0010 0ED1     		bne	.L8
  97:Src/usbd_conf.c ****   {
  98:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_MspDeInit 0 */
  99:Src/usbd_conf.c **** 
 100:Src/usbd_conf.c ****   /* USER CODE END USB_MspDeInit 0 */
 101:Src/usbd_conf.c ****     /* Peripheral clock disable */
 102:Src/usbd_conf.c ****     __USB_CLK_DISABLE();
 142              		.loc 1 102 0
 143 0012 0A4A     		ldr	r2, .L9+4
 144 0014 094B     		ldr	r3, .L9+4
 145 0016 DB69     		ldr	r3, [r3, #28]
 146 0018 23F40003 		bic	r3, r3, #8388608
 147 001c D361     		str	r3, [r2, #28]
 103:Src/usbd_conf.c ****   
 104:Src/usbd_conf.c ****     /**USB GPIO Configuration    
 105:Src/usbd_conf.c ****     PA11     ------> USB_DM
 106:Src/usbd_conf.c ****     PA12     ------> USB_DP 
 107:Src/usbd_conf.c ****     */
 108:Src/usbd_conf.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_11|GPIO_PIN_12);
 148              		.loc 1 108 0
 149 001e 4FF4C051 		mov	r1, #6144
 150 0022 4FF09040 		mov	r0, #1207959552
 151 0026 FFF7FEFF 		bl	HAL_GPIO_DeInit
 109:Src/usbd_conf.c **** 
 110:Src/usbd_conf.c ****     /* Peripheral interrupt Deinit*/
 111:Src/usbd_conf.c ****     HAL_NVIC_DisableIRQ(USB_LP_CAN_RX0_IRQn);
 152              		.loc 1 111 0
 153 002a 1420     		movs	r0, #20
 154 002c FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 155              	.L8:
 112:Src/usbd_conf.c **** 
 113:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_MspDeInit 1 */
 114:Src/usbd_conf.c **** 
 115:Src/usbd_conf.c ****   /* USER CODE END USB_MspDeInit 1 */
 116:Src/usbd_conf.c ****   }
 117:Src/usbd_conf.c **** }
 156              		.loc 1 117 0
 157 0030 00BF     		nop
 158 0032 0837     		adds	r7, r7, #8
 159              	.LCFI8:
 160              		.cfi_def_cfa_offset 8
 161 0034 BD46     		mov	sp, r7
 162              	.LCFI9:
 163              		.cfi_def_cfa_register 13
 164              		@ sp needed
 165 0036 80BD     		pop	{r7, pc}
 166              	.L10:
 167              		.align	2
 168              	.L9:
 169 0038 005C0040 		.word	1073765376
 170 003c 00100240 		.word	1073876992
 171              		.cfi_endproc
 172              	.LFE113:
 174              		.section	.text.HAL_PCD_SetupStageCallback,"ax",%progbits
ARM GAS  /tmp/ccIr5YrL.s 			page 6


 175              		.align	2
 176              		.global	HAL_PCD_SetupStageCallback
 177              		.thumb
 178              		.thumb_func
 180              	HAL_PCD_SetupStageCallback:
 181              	.LFB114:
 118:Src/usbd_conf.c **** 
 119:Src/usbd_conf.c **** /**
 120:Src/usbd_conf.c ****   * @brief  Setup Stage callback
 121:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 122:Src/usbd_conf.c ****   * @retval None
 123:Src/usbd_conf.c ****   */
 124:Src/usbd_conf.c **** void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
 125:Src/usbd_conf.c **** {
 182              		.loc 1 125 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 8
 185              		@ frame_needed = 1, uses_anonymous_args = 0
 186 0000 80B5     		push	{r7, lr}
 187              	.LCFI10:
 188              		.cfi_def_cfa_offset 8
 189              		.cfi_offset 7, -8
 190              		.cfi_offset 14, -4
 191 0002 82B0     		sub	sp, sp, #8
 192              	.LCFI11:
 193              		.cfi_def_cfa_offset 16
 194 0004 00AF     		add	r7, sp, #0
 195              	.LCFI12:
 196              		.cfi_def_cfa_register 7
 197 0006 7860     		str	r0, [r7, #4]
 126:Src/usbd_conf.c ****   USBD_LL_SetupStage(hpcd->pData, (uint8_t *)hpcd->Setup);
 198              		.loc 1 126 0
 199 0008 7B68     		ldr	r3, [r7, #4]
 200 000a D3F81C22 		ldr	r2, [r3, #540]
 201 000e 7B68     		ldr	r3, [r7, #4]
 202 0010 03F5F673 		add	r3, r3, #492
 203 0014 1946     		mov	r1, r3
 204 0016 1046     		mov	r0, r2
 205 0018 FFF7FEFF 		bl	USBD_LL_SetupStage
 127:Src/usbd_conf.c **** }
 206              		.loc 1 127 0
 207 001c 00BF     		nop
 208 001e 0837     		adds	r7, r7, #8
 209              	.LCFI13:
 210              		.cfi_def_cfa_offset 8
 211 0020 BD46     		mov	sp, r7
 212              	.LCFI14:
 213              		.cfi_def_cfa_register 13
 214              		@ sp needed
 215 0022 80BD     		pop	{r7, pc}
 216              		.cfi_endproc
 217              	.LFE114:
 219              		.section	.text.HAL_PCD_DataOutStageCallback,"ax",%progbits
 220              		.align	2
 221              		.global	HAL_PCD_DataOutStageCallback
 222              		.thumb
 223              		.thumb_func
ARM GAS  /tmp/ccIr5YrL.s 			page 7


 225              	HAL_PCD_DataOutStageCallback:
 226              	.LFB115:
 128:Src/usbd_conf.c **** 
 129:Src/usbd_conf.c **** /**
 130:Src/usbd_conf.c ****   * @brief  Data Out Stage callback.
 131:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 132:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 133:Src/usbd_conf.c ****   * @retval None
 134:Src/usbd_conf.c ****   */
 135:Src/usbd_conf.c **** void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 136:Src/usbd_conf.c **** {
 227              		.loc 1 136 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 8
 230              		@ frame_needed = 1, uses_anonymous_args = 0
 231 0000 80B5     		push	{r7, lr}
 232              	.LCFI15:
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 7, -8
 235              		.cfi_offset 14, -4
 236 0002 82B0     		sub	sp, sp, #8
 237              	.LCFI16:
 238              		.cfi_def_cfa_offset 16
 239 0004 00AF     		add	r7, sp, #0
 240              	.LCFI17:
 241              		.cfi_def_cfa_register 7
 242 0006 7860     		str	r0, [r7, #4]
 243 0008 0B46     		mov	r3, r1
 244 000a FB70     		strb	r3, [r7, #3]
 137:Src/usbd_conf.c ****   USBD_LL_DataOutStage(hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 245              		.loc 1 137 0
 246 000c 7B68     		ldr	r3, [r7, #4]
 247 000e D3F81C02 		ldr	r0, [r3, #540]
 248 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 249 0014 7968     		ldr	r1, [r7, #4]
 250 0016 1346     		mov	r3, r2
 251 0018 DB00     		lsls	r3, r3, #3
 252 001a 9B1A     		subs	r3, r3, r2
 253 001c 9B00     		lsls	r3, r3, #2
 254 001e 0B44     		add	r3, r3, r1
 255 0020 03F58C73 		add	r3, r3, #280
 256 0024 1A68     		ldr	r2, [r3]
 257 0026 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 258 0028 1946     		mov	r1, r3
 259 002a FFF7FEFF 		bl	USBD_LL_DataOutStage
 138:Src/usbd_conf.c **** }
 260              		.loc 1 138 0
 261 002e 00BF     		nop
 262 0030 0837     		adds	r7, r7, #8
 263              	.LCFI18:
 264              		.cfi_def_cfa_offset 8
 265 0032 BD46     		mov	sp, r7
 266              	.LCFI19:
 267              		.cfi_def_cfa_register 13
 268              		@ sp needed
 269 0034 80BD     		pop	{r7, pc}
 270              		.cfi_endproc
ARM GAS  /tmp/ccIr5YrL.s 			page 8


 271              	.LFE115:
 273 0036 00BF     		.section	.text.HAL_PCD_DataInStageCallback,"ax",%progbits
 274              		.align	2
 275              		.global	HAL_PCD_DataInStageCallback
 276              		.thumb
 277              		.thumb_func
 279              	HAL_PCD_DataInStageCallback:
 280              	.LFB116:
 139:Src/usbd_conf.c **** 
 140:Src/usbd_conf.c **** /**
 141:Src/usbd_conf.c ****   * @brief  Data In Stage callback..
 142:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 143:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 144:Src/usbd_conf.c ****   * @retval None
 145:Src/usbd_conf.c ****   */
 146:Src/usbd_conf.c **** void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 147:Src/usbd_conf.c **** {
 281              		.loc 1 147 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 8
 284              		@ frame_needed = 1, uses_anonymous_args = 0
 285 0000 80B5     		push	{r7, lr}
 286              	.LCFI20:
 287              		.cfi_def_cfa_offset 8
 288              		.cfi_offset 7, -8
 289              		.cfi_offset 14, -4
 290 0002 82B0     		sub	sp, sp, #8
 291              	.LCFI21:
 292              		.cfi_def_cfa_offset 16
 293 0004 00AF     		add	r7, sp, #0
 294              	.LCFI22:
 295              		.cfi_def_cfa_register 7
 296 0006 7860     		str	r0, [r7, #4]
 297 0008 0B46     		mov	r3, r1
 298 000a FB70     		strb	r3, [r7, #3]
 148:Src/usbd_conf.c ****   USBD_LL_DataInStage(hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 299              		.loc 1 148 0
 300 000c 7B68     		ldr	r3, [r7, #4]
 301 000e D3F81C02 		ldr	r0, [r3, #540]
 302 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 303 0014 7968     		ldr	r1, [r7, #4]
 304 0016 1346     		mov	r3, r2
 305 0018 DB00     		lsls	r3, r3, #3
 306 001a 9B1A     		subs	r3, r3, r2
 307 001c 9B00     		lsls	r3, r3, #2
 308 001e 0B44     		add	r3, r3, r1
 309 0020 3833     		adds	r3, r3, #56
 310 0022 1A68     		ldr	r2, [r3]
 311 0024 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 312 0026 1946     		mov	r1, r3
 313 0028 FFF7FEFF 		bl	USBD_LL_DataInStage
 149:Src/usbd_conf.c **** }
 314              		.loc 1 149 0
 315 002c 00BF     		nop
 316 002e 0837     		adds	r7, r7, #8
 317              	.LCFI23:
 318              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccIr5YrL.s 			page 9


 319 0030 BD46     		mov	sp, r7
 320              	.LCFI24:
 321              		.cfi_def_cfa_register 13
 322              		@ sp needed
 323 0032 80BD     		pop	{r7, pc}
 324              		.cfi_endproc
 325              	.LFE116:
 327              		.section	.text.HAL_PCD_SOFCallback,"ax",%progbits
 328              		.align	2
 329              		.global	HAL_PCD_SOFCallback
 330              		.thumb
 331              		.thumb_func
 333              	HAL_PCD_SOFCallback:
 334              	.LFB117:
 150:Src/usbd_conf.c **** 
 151:Src/usbd_conf.c **** /**
 152:Src/usbd_conf.c ****   * @brief  SOF callback.
 153:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 154:Src/usbd_conf.c ****   * @retval None
 155:Src/usbd_conf.c ****   */
 156:Src/usbd_conf.c **** void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
 157:Src/usbd_conf.c **** {
 335              		.loc 1 157 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 8
 338              		@ frame_needed = 1, uses_anonymous_args = 0
 339 0000 80B5     		push	{r7, lr}
 340              	.LCFI25:
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 7, -8
 343              		.cfi_offset 14, -4
 344 0002 82B0     		sub	sp, sp, #8
 345              	.LCFI26:
 346              		.cfi_def_cfa_offset 16
 347 0004 00AF     		add	r7, sp, #0
 348              	.LCFI27:
 349              		.cfi_def_cfa_register 7
 350 0006 7860     		str	r0, [r7, #4]
 158:Src/usbd_conf.c ****   USBD_LL_SOF(hpcd->pData);
 351              		.loc 1 158 0
 352 0008 7B68     		ldr	r3, [r7, #4]
 353 000a D3F81C32 		ldr	r3, [r3, #540]
 354 000e 1846     		mov	r0, r3
 355 0010 FFF7FEFF 		bl	USBD_LL_SOF
 159:Src/usbd_conf.c **** }
 356              		.loc 1 159 0
 357 0014 00BF     		nop
 358 0016 0837     		adds	r7, r7, #8
 359              	.LCFI28:
 360              		.cfi_def_cfa_offset 8
 361 0018 BD46     		mov	sp, r7
 362              	.LCFI29:
 363              		.cfi_def_cfa_register 13
 364              		@ sp needed
 365 001a 80BD     		pop	{r7, pc}
 366              		.cfi_endproc
 367              	.LFE117:
ARM GAS  /tmp/ccIr5YrL.s 			page 10


 369              		.section	.text.HAL_PCD_ResetCallback,"ax",%progbits
 370              		.align	2
 371              		.global	HAL_PCD_ResetCallback
 372              		.thumb
 373              		.thumb_func
 375              	HAL_PCD_ResetCallback:
 376              	.LFB118:
 160:Src/usbd_conf.c **** 
 161:Src/usbd_conf.c **** /**
 162:Src/usbd_conf.c ****   * @brief  Reset callback.
 163:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 164:Src/usbd_conf.c ****   * @retval None
 165:Src/usbd_conf.c ****   */
 166:Src/usbd_conf.c **** void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
 167:Src/usbd_conf.c **** { 
 377              		.loc 1 167 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 16
 380              		@ frame_needed = 1, uses_anonymous_args = 0
 381 0000 80B5     		push	{r7, lr}
 382              	.LCFI30:
 383              		.cfi_def_cfa_offset 8
 384              		.cfi_offset 7, -8
 385              		.cfi_offset 14, -4
 386 0002 84B0     		sub	sp, sp, #16
 387              	.LCFI31:
 388              		.cfi_def_cfa_offset 24
 389 0004 00AF     		add	r7, sp, #0
 390              	.LCFI32:
 391              		.cfi_def_cfa_register 7
 392 0006 7860     		str	r0, [r7, #4]
 168:Src/usbd_conf.c ****   USBD_SpeedTypeDef speed = USBD_SPEED_FULL;
 393              		.loc 1 168 0
 394 0008 0123     		movs	r3, #1
 395 000a FB73     		strb	r3, [r7, #15]
 169:Src/usbd_conf.c **** 
 170:Src/usbd_conf.c ****   /*Set USB Current Speed*/
 171:Src/usbd_conf.c ****   switch (hpcd->Init.speed)
 396              		.loc 1 171 0
 397 000c 7B68     		ldr	r3, [r7, #4]
 398 000e 9B68     		ldr	r3, [r3, #8]
 399 0010 022B     		cmp	r3, #2
 400 0012 02D1     		bne	.L19
 172:Src/usbd_conf.c ****   {
 173:Src/usbd_conf.c ****   case PCD_SPEED_FULL:
 174:Src/usbd_conf.c ****     speed = USBD_SPEED_FULL;    
 401              		.loc 1 174 0
 402 0014 0123     		movs	r3, #1
 403 0016 FB73     		strb	r3, [r7, #15]
 175:Src/usbd_conf.c ****     break;
 404              		.loc 1 175 0
 405 0018 02E0     		b	.L18
 406              	.L19:
 176:Src/usbd_conf.c **** 	
 177:Src/usbd_conf.c ****   default:
 178:Src/usbd_conf.c ****     speed = USBD_SPEED_FULL;    
 407              		.loc 1 178 0
ARM GAS  /tmp/ccIr5YrL.s 			page 11


 408 001a 0123     		movs	r3, #1
 409 001c FB73     		strb	r3, [r7, #15]
 179:Src/usbd_conf.c ****     break;    
 410              		.loc 1 179 0
 411 001e 00BF     		nop
 412              	.L18:
 180:Src/usbd_conf.c ****   }
 181:Src/usbd_conf.c ****   USBD_LL_SetSpeed(hpcd->pData, speed);  
 413              		.loc 1 181 0
 414 0020 7B68     		ldr	r3, [r7, #4]
 415 0022 D3F81C32 		ldr	r3, [r3, #540]
 416 0026 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 417 0028 1146     		mov	r1, r2
 418 002a 1846     		mov	r0, r3
 419 002c FFF7FEFF 		bl	USBD_LL_SetSpeed
 182:Src/usbd_conf.c ****   
 183:Src/usbd_conf.c ****   /*Reset Device*/
 184:Src/usbd_conf.c ****   USBD_LL_Reset(hpcd->pData);
 420              		.loc 1 184 0
 421 0030 7B68     		ldr	r3, [r7, #4]
 422 0032 D3F81C32 		ldr	r3, [r3, #540]
 423 0036 1846     		mov	r0, r3
 424 0038 FFF7FEFF 		bl	USBD_LL_Reset
 185:Src/usbd_conf.c **** }
 425              		.loc 1 185 0
 426 003c 00BF     		nop
 427 003e 1037     		adds	r7, r7, #16
 428              	.LCFI33:
 429              		.cfi_def_cfa_offset 8
 430 0040 BD46     		mov	sp, r7
 431              	.LCFI34:
 432              		.cfi_def_cfa_register 13
 433              		@ sp needed
 434 0042 80BD     		pop	{r7, pc}
 435              		.cfi_endproc
 436              	.LFE118:
 438              		.section	.text.HAL_PCD_SuspendCallback,"ax",%progbits
 439              		.align	2
 440              		.global	HAL_PCD_SuspendCallback
 441              		.thumb
 442              		.thumb_func
 444              	HAL_PCD_SuspendCallback:
 445              	.LFB119:
 186:Src/usbd_conf.c **** 
 187:Src/usbd_conf.c **** /**
 188:Src/usbd_conf.c ****   * @brief  Suspend callback.
 189:Src/usbd_conf.c ****   * When Low power mode is enabled the debug cannot be used (IAR, Keil doesn't support it)
 190:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 191:Src/usbd_conf.c ****   * @retval None
 192:Src/usbd_conf.c ****   */
 193:Src/usbd_conf.c **** void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
 194:Src/usbd_conf.c **** {
 446              		.loc 1 194 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 8
 449              		@ frame_needed = 1, uses_anonymous_args = 0
 450 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/ccIr5YrL.s 			page 12


 451              	.LCFI35:
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 7, -8
 454              		.cfi_offset 14, -4
 455 0002 82B0     		sub	sp, sp, #8
 456              	.LCFI36:
 457              		.cfi_def_cfa_offset 16
 458 0004 00AF     		add	r7, sp, #0
 459              	.LCFI37:
 460              		.cfi_def_cfa_register 7
 461 0006 7860     		str	r0, [r7, #4]
 195:Src/usbd_conf.c ****   /* Inform USB library that core enters in suspend Mode */
 196:Src/usbd_conf.c ****   USBD_LL_Suspend(hpcd->pData);
 462              		.loc 1 196 0
 463 0008 7B68     		ldr	r3, [r7, #4]
 464 000a D3F81C32 		ldr	r3, [r3, #540]
 465 000e 1846     		mov	r0, r3
 466 0010 FFF7FEFF 		bl	USBD_LL_Suspend
 197:Src/usbd_conf.c ****   /*Enter in STOP mode */
 198:Src/usbd_conf.c ****   /* USER CODE BEGIN 2 */
 199:Src/usbd_conf.c ****   if (hpcd->Init.low_power_enable)
 200:Src/usbd_conf.c ****   {
 201:Src/usbd_conf.c ****     /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register */
 202:Src/usbd_conf.c ****     //SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 203:Src/usbd_conf.c ****   }
 204:Src/usbd_conf.c ****   /* USER CODE END 2 */
 205:Src/usbd_conf.c **** }
 467              		.loc 1 205 0
 468 0014 00BF     		nop
 469 0016 0837     		adds	r7, r7, #8
 470              	.LCFI38:
 471              		.cfi_def_cfa_offset 8
 472 0018 BD46     		mov	sp, r7
 473              	.LCFI39:
 474              		.cfi_def_cfa_register 13
 475              		@ sp needed
 476 001a 80BD     		pop	{r7, pc}
 477              		.cfi_endproc
 478              	.LFE119:
 480              		.section	.text.HAL_PCD_ResumeCallback,"ax",%progbits
 481              		.align	2
 482              		.global	HAL_PCD_ResumeCallback
 483              		.thumb
 484              		.thumb_func
 486              	HAL_PCD_ResumeCallback:
 487              	.LFB120:
 206:Src/usbd_conf.c **** 
 207:Src/usbd_conf.c **** /**
 208:Src/usbd_conf.c ****   * @brief  Resume callback.
 209:Src/usbd_conf.c ****   * When Low power mode is enabled the debug cannot be used (IAR, Keil doesn't support it)
 210:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 211:Src/usbd_conf.c ****   * @retval None
 212:Src/usbd_conf.c ****   */
 213:Src/usbd_conf.c **** void HAL_PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
 214:Src/usbd_conf.c **** {
 488              		.loc 1 214 0
 489              		.cfi_startproc
ARM GAS  /tmp/ccIr5YrL.s 			page 13


 490              		@ args = 0, pretend = 0, frame = 8
 491              		@ frame_needed = 1, uses_anonymous_args = 0
 492 0000 80B5     		push	{r7, lr}
 493              	.LCFI40:
 494              		.cfi_def_cfa_offset 8
 495              		.cfi_offset 7, -8
 496              		.cfi_offset 14, -4
 497 0002 82B0     		sub	sp, sp, #8
 498              	.LCFI41:
 499              		.cfi_def_cfa_offset 16
 500 0004 00AF     		add	r7, sp, #0
 501              	.LCFI42:
 502              		.cfi_def_cfa_register 7
 503 0006 7860     		str	r0, [r7, #4]
 215:Src/usbd_conf.c ****   /* USER CODE BEGIN 3 */
 216:Src/usbd_conf.c ****   if ((hpcd->Init.low_power_enable)&&(remotewakeupon == 0))
 504              		.loc 1 216 0
 505 0008 7B68     		ldr	r3, [r7, #4]
 506 000a 9B69     		ldr	r3, [r3, #24]
 507 000c 002B     		cmp	r3, #0
 508 000e 05D0     		beq	.L22
 509              		.loc 1 216 0 is_stmt 0 discriminator 1
 510 0010 094B     		ldr	r3, .L23
 511 0012 1B68     		ldr	r3, [r3]
 512 0014 002B     		cmp	r3, #0
 513 0016 01D1     		bne	.L22
 217:Src/usbd_conf.c ****   {
 218:Src/usbd_conf.c ****     SystemClockConfig_Resume();
 514              		.loc 1 218 0 is_stmt 1
 515 0018 FFF7FEFF 		bl	SystemClockConfig_Resume
 516              	.L22:
 219:Src/usbd_conf.c ****     /* Reset SLEEPDEEP bit of Cortex System Control Register */
 220:Src/usbd_conf.c ****     //SCB->SCR &= (uint32_t)~((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));    
 221:Src/usbd_conf.c ****   }
 222:Src/usbd_conf.c ****   remotewakeupon=0;
 517              		.loc 1 222 0
 518 001c 064B     		ldr	r3, .L23
 519 001e 0022     		movs	r2, #0
 520 0020 1A60     		str	r2, [r3]
 223:Src/usbd_conf.c ****   /* USER CODE END 3 */
 224:Src/usbd_conf.c ****   USBD_LL_Resume(hpcd->pData);
 521              		.loc 1 224 0
 522 0022 7B68     		ldr	r3, [r7, #4]
 523 0024 D3F81C32 		ldr	r3, [r3, #540]
 524 0028 1846     		mov	r0, r3
 525 002a FFF7FEFF 		bl	USBD_LL_Resume
 225:Src/usbd_conf.c ****   
 226:Src/usbd_conf.c **** }
 526              		.loc 1 226 0
 527 002e 00BF     		nop
 528 0030 0837     		adds	r7, r7, #8
 529              	.LCFI43:
 530              		.cfi_def_cfa_offset 8
 531 0032 BD46     		mov	sp, r7
 532              	.LCFI44:
 533              		.cfi_def_cfa_register 13
 534              		@ sp needed
ARM GAS  /tmp/ccIr5YrL.s 			page 14


 535 0034 80BD     		pop	{r7, pc}
 536              	.L24:
 537 0036 00BF     		.align	2
 538              	.L23:
 539 0038 00000000 		.word	remotewakeupon
 540              		.cfi_endproc
 541              	.LFE120:
 543              		.section	.text.HAL_PCD_ISOOUTIncompleteCallback,"ax",%progbits
 544              		.align	2
 545              		.global	HAL_PCD_ISOOUTIncompleteCallback
 546              		.thumb
 547              		.thumb_func
 549              	HAL_PCD_ISOOUTIncompleteCallback:
 550              	.LFB121:
 227:Src/usbd_conf.c **** 
 228:Src/usbd_conf.c **** /**
 229:Src/usbd_conf.c ****   * @brief  ISOOUTIncomplete callback.
 230:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 231:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 232:Src/usbd_conf.c ****   * @retval None
 233:Src/usbd_conf.c ****   */
 234:Src/usbd_conf.c **** void HAL_PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 235:Src/usbd_conf.c **** {
 551              		.loc 1 235 0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 8
 554              		@ frame_needed = 1, uses_anonymous_args = 0
 555 0000 80B5     		push	{r7, lr}
 556              	.LCFI45:
 557              		.cfi_def_cfa_offset 8
 558              		.cfi_offset 7, -8
 559              		.cfi_offset 14, -4
 560 0002 82B0     		sub	sp, sp, #8
 561              	.LCFI46:
 562              		.cfi_def_cfa_offset 16
 563 0004 00AF     		add	r7, sp, #0
 564              	.LCFI47:
 565              		.cfi_def_cfa_register 7
 566 0006 7860     		str	r0, [r7, #4]
 567 0008 0B46     		mov	r3, r1
 568 000a FB70     		strb	r3, [r7, #3]
 236:Src/usbd_conf.c ****   USBD_LL_IsoOUTIncomplete(hpcd->pData, epnum);
 569              		.loc 1 236 0
 570 000c 7B68     		ldr	r3, [r7, #4]
 571 000e D3F81C32 		ldr	r3, [r3, #540]
 572 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 573 0014 1146     		mov	r1, r2
 574 0016 1846     		mov	r0, r3
 575 0018 FFF7FEFF 		bl	USBD_LL_IsoOUTIncomplete
 237:Src/usbd_conf.c **** }
 576              		.loc 1 237 0
 577 001c 00BF     		nop
 578 001e 0837     		adds	r7, r7, #8
 579              	.LCFI48:
 580              		.cfi_def_cfa_offset 8
 581 0020 BD46     		mov	sp, r7
 582              	.LCFI49:
ARM GAS  /tmp/ccIr5YrL.s 			page 15


 583              		.cfi_def_cfa_register 13
 584              		@ sp needed
 585 0022 80BD     		pop	{r7, pc}
 586              		.cfi_endproc
 587              	.LFE121:
 589              		.section	.text.HAL_PCD_ISOINIncompleteCallback,"ax",%progbits
 590              		.align	2
 591              		.global	HAL_PCD_ISOINIncompleteCallback
 592              		.thumb
 593              		.thumb_func
 595              	HAL_PCD_ISOINIncompleteCallback:
 596              	.LFB122:
 238:Src/usbd_conf.c **** 
 239:Src/usbd_conf.c **** /**
 240:Src/usbd_conf.c ****   * @brief  ISOINIncomplete callback.
 241:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 242:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 243:Src/usbd_conf.c ****   * @retval None
 244:Src/usbd_conf.c ****   */
 245:Src/usbd_conf.c **** void HAL_PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 246:Src/usbd_conf.c **** {
 597              		.loc 1 246 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 8
 600              		@ frame_needed = 1, uses_anonymous_args = 0
 601 0000 80B5     		push	{r7, lr}
 602              	.LCFI50:
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 7, -8
 605              		.cfi_offset 14, -4
 606 0002 82B0     		sub	sp, sp, #8
 607              	.LCFI51:
 608              		.cfi_def_cfa_offset 16
 609 0004 00AF     		add	r7, sp, #0
 610              	.LCFI52:
 611              		.cfi_def_cfa_register 7
 612 0006 7860     		str	r0, [r7, #4]
 613 0008 0B46     		mov	r3, r1
 614 000a FB70     		strb	r3, [r7, #3]
 247:Src/usbd_conf.c ****   USBD_LL_IsoINIncomplete(hpcd->pData, epnum);
 615              		.loc 1 247 0
 616 000c 7B68     		ldr	r3, [r7, #4]
 617 000e D3F81C32 		ldr	r3, [r3, #540]
 618 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 619 0014 1146     		mov	r1, r2
 620 0016 1846     		mov	r0, r3
 621 0018 FFF7FEFF 		bl	USBD_LL_IsoINIncomplete
 248:Src/usbd_conf.c **** }
 622              		.loc 1 248 0
 623 001c 00BF     		nop
 624 001e 0837     		adds	r7, r7, #8
 625              	.LCFI53:
 626              		.cfi_def_cfa_offset 8
 627 0020 BD46     		mov	sp, r7
 628              	.LCFI54:
 629              		.cfi_def_cfa_register 13
 630              		@ sp needed
ARM GAS  /tmp/ccIr5YrL.s 			page 16


 631 0022 80BD     		pop	{r7, pc}
 632              		.cfi_endproc
 633              	.LFE122:
 635              		.section	.text.HAL_PCD_ConnectCallback,"ax",%progbits
 636              		.align	2
 637              		.global	HAL_PCD_ConnectCallback
 638              		.thumb
 639              		.thumb_func
 641              	HAL_PCD_ConnectCallback:
 642              	.LFB123:
 249:Src/usbd_conf.c **** 
 250:Src/usbd_conf.c **** /**
 251:Src/usbd_conf.c ****   * @brief  ConnectCallback callback.
 252:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 253:Src/usbd_conf.c ****   * @retval None
 254:Src/usbd_conf.c ****   */
 255:Src/usbd_conf.c **** void HAL_PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
 256:Src/usbd_conf.c **** {
 643              		.loc 1 256 0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 8
 646              		@ frame_needed = 1, uses_anonymous_args = 0
 647 0000 80B5     		push	{r7, lr}
 648              	.LCFI55:
 649              		.cfi_def_cfa_offset 8
 650              		.cfi_offset 7, -8
 651              		.cfi_offset 14, -4
 652 0002 82B0     		sub	sp, sp, #8
 653              	.LCFI56:
 654              		.cfi_def_cfa_offset 16
 655 0004 00AF     		add	r7, sp, #0
 656              	.LCFI57:
 657              		.cfi_def_cfa_register 7
 658 0006 7860     		str	r0, [r7, #4]
 257:Src/usbd_conf.c ****   USBD_LL_DevConnected(hpcd->pData);
 659              		.loc 1 257 0
 660 0008 7B68     		ldr	r3, [r7, #4]
 661 000a D3F81C32 		ldr	r3, [r3, #540]
 662 000e 1846     		mov	r0, r3
 663 0010 FFF7FEFF 		bl	USBD_LL_DevConnected
 258:Src/usbd_conf.c **** }
 664              		.loc 1 258 0
 665 0014 00BF     		nop
 666 0016 0837     		adds	r7, r7, #8
 667              	.LCFI58:
 668              		.cfi_def_cfa_offset 8
 669 0018 BD46     		mov	sp, r7
 670              	.LCFI59:
 671              		.cfi_def_cfa_register 13
 672              		@ sp needed
 673 001a 80BD     		pop	{r7, pc}
 674              		.cfi_endproc
 675              	.LFE123:
 677              		.section	.text.HAL_PCD_DisconnectCallback,"ax",%progbits
 678              		.align	2
 679              		.global	HAL_PCD_DisconnectCallback
 680              		.thumb
ARM GAS  /tmp/ccIr5YrL.s 			page 17


 681              		.thumb_func
 683              	HAL_PCD_DisconnectCallback:
 684              	.LFB124:
 259:Src/usbd_conf.c **** 
 260:Src/usbd_conf.c **** /**
 261:Src/usbd_conf.c ****   * @brief  Disconnect callback.
 262:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 263:Src/usbd_conf.c ****   * @retval None
 264:Src/usbd_conf.c ****   */
 265:Src/usbd_conf.c **** void HAL_PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
 266:Src/usbd_conf.c **** {
 685              		.loc 1 266 0
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 8
 688              		@ frame_needed = 1, uses_anonymous_args = 0
 689 0000 80B5     		push	{r7, lr}
 690              	.LCFI60:
 691              		.cfi_def_cfa_offset 8
 692              		.cfi_offset 7, -8
 693              		.cfi_offset 14, -4
 694 0002 82B0     		sub	sp, sp, #8
 695              	.LCFI61:
 696              		.cfi_def_cfa_offset 16
 697 0004 00AF     		add	r7, sp, #0
 698              	.LCFI62:
 699              		.cfi_def_cfa_register 7
 700 0006 7860     		str	r0, [r7, #4]
 267:Src/usbd_conf.c ****   USBD_LL_DevDisconnected(hpcd->pData);
 701              		.loc 1 267 0
 702 0008 7B68     		ldr	r3, [r7, #4]
 703 000a D3F81C32 		ldr	r3, [r3, #540]
 704 000e 1846     		mov	r0, r3
 705 0010 FFF7FEFF 		bl	USBD_LL_DevDisconnected
 268:Src/usbd_conf.c **** }
 706              		.loc 1 268 0
 707 0014 00BF     		nop
 708 0016 0837     		adds	r7, r7, #8
 709              	.LCFI63:
 710              		.cfi_def_cfa_offset 8
 711 0018 BD46     		mov	sp, r7
 712              	.LCFI64:
 713              		.cfi_def_cfa_register 13
 714              		@ sp needed
 715 001a 80BD     		pop	{r7, pc}
 716              		.cfi_endproc
 717              	.LFE124:
 719              		.section	.text.USBD_LL_Init,"ax",%progbits
 720              		.align	2
 721              		.global	USBD_LL_Init
 722              		.thumb
 723              		.thumb_func
 725              	USBD_LL_Init:
 726              	.LFB125:
 269:Src/usbd_conf.c **** 
 270:Src/usbd_conf.c **** /*******************************************************************************
 271:Src/usbd_conf.c ****                        LL Driver Interface (USB Device Library --> PCD)
 272:Src/usbd_conf.c **** *******************************************************************************/
ARM GAS  /tmp/ccIr5YrL.s 			page 18


 273:Src/usbd_conf.c **** /**
 274:Src/usbd_conf.c ****   * @brief  Initializes the Low Level portion of the Device driver.
 275:Src/usbd_conf.c ****   * @param  pdev: Device handle
 276:Src/usbd_conf.c ****   * @retval USBD Status
 277:Src/usbd_conf.c ****   */
 278:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_Init (USBD_HandleTypeDef *pdev)
 279:Src/usbd_conf.c **** { 
 727              		.loc 1 279 0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 8
 730              		@ frame_needed = 1, uses_anonymous_args = 0
 731 0000 80B5     		push	{r7, lr}
 732              	.LCFI65:
 733              		.cfi_def_cfa_offset 8
 734              		.cfi_offset 7, -8
 735              		.cfi_offset 14, -4
 736 0002 82B0     		sub	sp, sp, #8
 737              	.LCFI66:
 738              		.cfi_def_cfa_offset 16
 739 0004 00AF     		add	r7, sp, #0
 740              	.LCFI67:
 741              		.cfi_def_cfa_register 7
 742 0006 7860     		str	r0, [r7, #4]
 280:Src/usbd_conf.c ****   /* Init USB_IP */
 281:Src/usbd_conf.c ****   /* Link The driver to the stack */
 282:Src/usbd_conf.c ****   hpcd_USB_FS.pData = pdev;
 743              		.loc 1 282 0
 744 0008 1B4A     		ldr	r2, .L31
 745 000a 7B68     		ldr	r3, [r7, #4]
 746 000c C2F81C32 		str	r3, [r2, #540]
 283:Src/usbd_conf.c ****   pdev->pData = &hpcd_USB_FS;
 747              		.loc 1 283 0
 748 0010 7B68     		ldr	r3, [r7, #4]
 749 0012 194A     		ldr	r2, .L31
 750 0014 C3F82022 		str	r2, [r3, #544]
 284:Src/usbd_conf.c **** 
 285:Src/usbd_conf.c ****   hpcd_USB_FS.Instance = USB;
 751              		.loc 1 285 0
 752 0018 174B     		ldr	r3, .L31
 753 001a 184A     		ldr	r2, .L31+4
 754 001c 1A60     		str	r2, [r3]
 286:Src/usbd_conf.c ****   hpcd_USB_FS.Init.dev_endpoints = 8;
 755              		.loc 1 286 0
 756 001e 164B     		ldr	r3, .L31
 757 0020 0822     		movs	r2, #8
 758 0022 5A60     		str	r2, [r3, #4]
 287:Src/usbd_conf.c ****   hpcd_USB_FS.Init.speed = PCD_SPEED_FULL;
 759              		.loc 1 287 0
 760 0024 144B     		ldr	r3, .L31
 761 0026 0222     		movs	r2, #2
 762 0028 9A60     		str	r2, [r3, #8]
 288:Src/usbd_conf.c ****   hpcd_USB_FS.Init.ep0_mps = DEP0CTL_MPS_64;
 763              		.loc 1 288 0
 764 002a 134B     		ldr	r3, .L31
 765 002c 0022     		movs	r2, #0
 766 002e DA60     		str	r2, [r3, #12]
 289:Src/usbd_conf.c ****   hpcd_USB_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
ARM GAS  /tmp/ccIr5YrL.s 			page 19


 767              		.loc 1 289 0
 768 0030 114B     		ldr	r3, .L31
 769 0032 0222     		movs	r2, #2
 770 0034 1A61     		str	r2, [r3, #16]
 290:Src/usbd_conf.c ****   hpcd_USB_FS.Init.Sof_enable = DISABLE;
 771              		.loc 1 290 0
 772 0036 104B     		ldr	r3, .L31
 773 0038 0022     		movs	r2, #0
 774 003a 5A61     		str	r2, [r3, #20]
 291:Src/usbd_conf.c ****   hpcd_USB_FS.Init.low_power_enable = DISABLE;
 775              		.loc 1 291 0
 776 003c 0E4B     		ldr	r3, .L31
 777 003e 0022     		movs	r2, #0
 778 0040 9A61     		str	r2, [r3, #24]
 292:Src/usbd_conf.c ****   hpcd_USB_FS.Init.battery_charging_enable = DISABLE;
 779              		.loc 1 292 0
 780 0042 0D4B     		ldr	r3, .L31
 781 0044 0022     		movs	r2, #0
 782 0046 1A62     		str	r2, [r3, #32]
 293:Src/usbd_conf.c ****   HAL_PCD_Init(&hpcd_USB_FS);
 783              		.loc 1 293 0
 784 0048 0B48     		ldr	r0, .L31
 785 004a FFF7FEFF 		bl	HAL_PCD_Init
 294:Src/usbd_conf.c **** 
 295:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig(pdev->pData , 0x00 , PCD_SNG_BUF, 0x18);
 786              		.loc 1 295 0
 787 004e 7B68     		ldr	r3, [r7, #4]
 788 0050 D3F82002 		ldr	r0, [r3, #544]
 789 0054 1823     		movs	r3, #24
 790 0056 0022     		movs	r2, #0
 791 0058 0021     		movs	r1, #0
 792 005a FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 296:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig(pdev->pData , 0x80 , PCD_SNG_BUF, 0x58);
 793              		.loc 1 296 0
 794 005e 7B68     		ldr	r3, [r7, #4]
 795 0060 D3F82002 		ldr	r0, [r3, #544]
 796 0064 5823     		movs	r3, #88
 797 0066 0022     		movs	r2, #0
 798 0068 8021     		movs	r1, #128
 799 006a FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 297:Src/usbd_conf.c ****   return USBD_OK;
 800              		.loc 1 297 0
 801 006e 0023     		movs	r3, #0
 298:Src/usbd_conf.c **** }
 802              		.loc 1 298 0
 803 0070 1846     		mov	r0, r3
 804 0072 0837     		adds	r7, r7, #8
 805              	.LCFI68:
 806              		.cfi_def_cfa_offset 8
 807 0074 BD46     		mov	sp, r7
 808              	.LCFI69:
 809              		.cfi_def_cfa_register 13
 810              		@ sp needed
 811 0076 80BD     		pop	{r7, pc}
 812              	.L32:
 813              		.align	2
 814              	.L31:
ARM GAS  /tmp/ccIr5YrL.s 			page 20


 815 0078 00000000 		.word	hpcd_USB_FS
 816 007c 005C0040 		.word	1073765376
 817              		.cfi_endproc
 818              	.LFE125:
 820              		.section	.text.USBD_LL_DeInit,"ax",%progbits
 821              		.align	2
 822              		.global	USBD_LL_DeInit
 823              		.thumb
 824              		.thumb_func
 826              	USBD_LL_DeInit:
 827              	.LFB126:
 299:Src/usbd_conf.c **** 
 300:Src/usbd_conf.c **** /**
 301:Src/usbd_conf.c ****   * @brief  De-Initializes the Low Level portion of the Device driver.
 302:Src/usbd_conf.c ****   * @param  pdev: Device handle
 303:Src/usbd_conf.c ****   * @retval USBD Status
 304:Src/usbd_conf.c ****   */
 305:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_DeInit (USBD_HandleTypeDef *pdev)
 306:Src/usbd_conf.c **** {
 828              		.loc 1 306 0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 8
 831              		@ frame_needed = 1, uses_anonymous_args = 0
 832 0000 80B5     		push	{r7, lr}
 833              	.LCFI70:
 834              		.cfi_def_cfa_offset 8
 835              		.cfi_offset 7, -8
 836              		.cfi_offset 14, -4
 837 0002 82B0     		sub	sp, sp, #8
 838              	.LCFI71:
 839              		.cfi_def_cfa_offset 16
 840 0004 00AF     		add	r7, sp, #0
 841              	.LCFI72:
 842              		.cfi_def_cfa_register 7
 843 0006 7860     		str	r0, [r7, #4]
 307:Src/usbd_conf.c ****   HAL_PCD_DeInit(pdev->pData);
 844              		.loc 1 307 0
 845 0008 7B68     		ldr	r3, [r7, #4]
 846 000a D3F82032 		ldr	r3, [r3, #544]
 847 000e 1846     		mov	r0, r3
 848 0010 FFF7FEFF 		bl	HAL_PCD_DeInit
 308:Src/usbd_conf.c ****   return USBD_OK; 
 849              		.loc 1 308 0
 850 0014 0023     		movs	r3, #0
 309:Src/usbd_conf.c **** }
 851              		.loc 1 309 0
 852 0016 1846     		mov	r0, r3
 853 0018 0837     		adds	r7, r7, #8
 854              	.LCFI73:
 855              		.cfi_def_cfa_offset 8
 856 001a BD46     		mov	sp, r7
 857              	.LCFI74:
 858              		.cfi_def_cfa_register 13
 859              		@ sp needed
 860 001c 80BD     		pop	{r7, pc}
 861              		.cfi_endproc
 862              	.LFE126:
ARM GAS  /tmp/ccIr5YrL.s 			page 21


 864 001e 00BF     		.section	.text.USBD_LL_Start,"ax",%progbits
 865              		.align	2
 866              		.global	USBD_LL_Start
 867              		.thumb
 868              		.thumb_func
 870              	USBD_LL_Start:
 871              	.LFB127:
 310:Src/usbd_conf.c **** 
 311:Src/usbd_conf.c **** /**
 312:Src/usbd_conf.c ****   * @brief  Starts the Low Level portion of the Device driver. 
 313:Src/usbd_conf.c ****   * @param  pdev: Device handle
 314:Src/usbd_conf.c ****   * @retval USBD Status
 315:Src/usbd_conf.c ****   */
 316:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_Start(USBD_HandleTypeDef *pdev)
 317:Src/usbd_conf.c **** {
 872              		.loc 1 317 0
 873              		.cfi_startproc
 874              		@ args = 0, pretend = 0, frame = 8
 875              		@ frame_needed = 1, uses_anonymous_args = 0
 876 0000 80B5     		push	{r7, lr}
 877              	.LCFI75:
 878              		.cfi_def_cfa_offset 8
 879              		.cfi_offset 7, -8
 880              		.cfi_offset 14, -4
 881 0002 82B0     		sub	sp, sp, #8
 882              	.LCFI76:
 883              		.cfi_def_cfa_offset 16
 884 0004 00AF     		add	r7, sp, #0
 885              	.LCFI77:
 886              		.cfi_def_cfa_register 7
 887 0006 7860     		str	r0, [r7, #4]
 318:Src/usbd_conf.c ****   HAL_PCD_Start(pdev->pData);
 888              		.loc 1 318 0
 889 0008 7B68     		ldr	r3, [r7, #4]
 890 000a D3F82032 		ldr	r3, [r3, #544]
 891 000e 1846     		mov	r0, r3
 892 0010 FFF7FEFF 		bl	HAL_PCD_Start
 319:Src/usbd_conf.c ****   return USBD_OK; 
 893              		.loc 1 319 0
 894 0014 0023     		movs	r3, #0
 320:Src/usbd_conf.c **** }
 895              		.loc 1 320 0
 896 0016 1846     		mov	r0, r3
 897 0018 0837     		adds	r7, r7, #8
 898              	.LCFI78:
 899              		.cfi_def_cfa_offset 8
 900 001a BD46     		mov	sp, r7
 901              	.LCFI79:
 902              		.cfi_def_cfa_register 13
 903              		@ sp needed
 904 001c 80BD     		pop	{r7, pc}
 905              		.cfi_endproc
 906              	.LFE127:
 908 001e 00BF     		.section	.text.USBD_LL_Stop,"ax",%progbits
 909              		.align	2
 910              		.global	USBD_LL_Stop
 911              		.thumb
ARM GAS  /tmp/ccIr5YrL.s 			page 22


 912              		.thumb_func
 914              	USBD_LL_Stop:
 915              	.LFB128:
 321:Src/usbd_conf.c **** 
 322:Src/usbd_conf.c **** /**
 323:Src/usbd_conf.c ****   * @brief  Stops the Low Level portion of the Device driver.
 324:Src/usbd_conf.c ****   * @param  pdev: Device handle
 325:Src/usbd_conf.c ****   * @retval USBD Status
 326:Src/usbd_conf.c ****   */
 327:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_Stop (USBD_HandleTypeDef *pdev)
 328:Src/usbd_conf.c **** {
 916              		.loc 1 328 0
 917              		.cfi_startproc
 918              		@ args = 0, pretend = 0, frame = 8
 919              		@ frame_needed = 1, uses_anonymous_args = 0
 920 0000 80B5     		push	{r7, lr}
 921              	.LCFI80:
 922              		.cfi_def_cfa_offset 8
 923              		.cfi_offset 7, -8
 924              		.cfi_offset 14, -4
 925 0002 82B0     		sub	sp, sp, #8
 926              	.LCFI81:
 927              		.cfi_def_cfa_offset 16
 928 0004 00AF     		add	r7, sp, #0
 929              	.LCFI82:
 930              		.cfi_def_cfa_register 7
 931 0006 7860     		str	r0, [r7, #4]
 329:Src/usbd_conf.c ****   HAL_PCD_Stop(pdev->pData);
 932              		.loc 1 329 0
 933 0008 7B68     		ldr	r3, [r7, #4]
 934 000a D3F82032 		ldr	r3, [r3, #544]
 935 000e 1846     		mov	r0, r3
 936 0010 FFF7FEFF 		bl	HAL_PCD_Stop
 330:Src/usbd_conf.c ****   return USBD_OK; 
 937              		.loc 1 330 0
 938 0014 0023     		movs	r3, #0
 331:Src/usbd_conf.c **** }
 939              		.loc 1 331 0
 940 0016 1846     		mov	r0, r3
 941 0018 0837     		adds	r7, r7, #8
 942              	.LCFI83:
 943              		.cfi_def_cfa_offset 8
 944 001a BD46     		mov	sp, r7
 945              	.LCFI84:
 946              		.cfi_def_cfa_register 13
 947              		@ sp needed
 948 001c 80BD     		pop	{r7, pc}
 949              		.cfi_endproc
 950              	.LFE128:
 952 001e 00BF     		.section	.text.USBD_LL_OpenEP,"ax",%progbits
 953              		.align	2
 954              		.global	USBD_LL_OpenEP
 955              		.thumb
 956              		.thumb_func
 958              	USBD_LL_OpenEP:
 959              	.LFB129:
 332:Src/usbd_conf.c **** 
ARM GAS  /tmp/ccIr5YrL.s 			page 23


 333:Src/usbd_conf.c **** /**
 334:Src/usbd_conf.c ****   * @brief  Opens an endpoint of the Low Level Driver.
 335:Src/usbd_conf.c ****   * @param  pdev: Device handle
 336:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 337:Src/usbd_conf.c ****   * @param  ep_type: Endpoint Type
 338:Src/usbd_conf.c ****   * @param  ep_mps: Endpoint Max Packet Size
 339:Src/usbd_conf.c ****   * @retval USBD Status
 340:Src/usbd_conf.c ****   */
 341:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_OpenEP  (USBD_HandleTypeDef *pdev, 
 342:Src/usbd_conf.c ****                                       uint8_t  ep_addr,                                      
 343:Src/usbd_conf.c ****                                       uint8_t  ep_type,
 344:Src/usbd_conf.c ****                                       uint16_t ep_mps)
 345:Src/usbd_conf.c **** {
 960              		.loc 1 345 0
 961              		.cfi_startproc
 962              		@ args = 0, pretend = 0, frame = 8
 963              		@ frame_needed = 1, uses_anonymous_args = 0
 964 0000 80B5     		push	{r7, lr}
 965              	.LCFI85:
 966              		.cfi_def_cfa_offset 8
 967              		.cfi_offset 7, -8
 968              		.cfi_offset 14, -4
 969 0002 82B0     		sub	sp, sp, #8
 970              	.LCFI86:
 971              		.cfi_def_cfa_offset 16
 972 0004 00AF     		add	r7, sp, #0
 973              	.LCFI87:
 974              		.cfi_def_cfa_register 7
 975 0006 7860     		str	r0, [r7, #4]
 976 0008 0846     		mov	r0, r1
 977 000a 1146     		mov	r1, r2
 978 000c 1A46     		mov	r2, r3
 979 000e 0346     		mov	r3, r0
 980 0010 FB70     		strb	r3, [r7, #3]
 981 0012 0B46     		mov	r3, r1
 982 0014 BB70     		strb	r3, [r7, #2]
 983 0016 1346     		mov	r3, r2	@ movhi
 984 0018 3B80     		strh	r3, [r7]	@ movhi
 346:Src/usbd_conf.c **** 
 347:Src/usbd_conf.c ****   HAL_PCD_EP_Open(pdev->pData, 
 985              		.loc 1 347 0
 986 001a 7B68     		ldr	r3, [r7, #4]
 987 001c D3F82002 		ldr	r0, [r3, #544]
 988 0020 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 989 0022 3A88     		ldrh	r2, [r7]
 990 0024 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 991 0026 FFF7FEFF 		bl	HAL_PCD_EP_Open
 348:Src/usbd_conf.c ****                   ep_addr, 
 349:Src/usbd_conf.c ****                   ep_mps, 
 350:Src/usbd_conf.c ****                   ep_type);
 351:Src/usbd_conf.c ****   
 352:Src/usbd_conf.c ****   return USBD_OK; 
 992              		.loc 1 352 0
 993 002a 0023     		movs	r3, #0
 353:Src/usbd_conf.c **** }
 994              		.loc 1 353 0
 995 002c 1846     		mov	r0, r3
ARM GAS  /tmp/ccIr5YrL.s 			page 24


 996 002e 0837     		adds	r7, r7, #8
 997              	.LCFI88:
 998              		.cfi_def_cfa_offset 8
 999 0030 BD46     		mov	sp, r7
 1000              	.LCFI89:
 1001              		.cfi_def_cfa_register 13
 1002              		@ sp needed
 1003 0032 80BD     		pop	{r7, pc}
 1004              		.cfi_endproc
 1005              	.LFE129:
 1007              		.section	.text.USBD_LL_CloseEP,"ax",%progbits
 1008              		.align	2
 1009              		.global	USBD_LL_CloseEP
 1010              		.thumb
 1011              		.thumb_func
 1013              	USBD_LL_CloseEP:
 1014              	.LFB130:
 354:Src/usbd_conf.c **** 
 355:Src/usbd_conf.c **** /**
 356:Src/usbd_conf.c ****   * @brief  Closes an endpoint of the Low Level Driver.
 357:Src/usbd_conf.c ****   * @param  pdev: Device handle
 358:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 359:Src/usbd_conf.c ****   * @retval USBD Status
 360:Src/usbd_conf.c ****   */
 361:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_CloseEP (USBD_HandleTypeDef *pdev, uint8_t ep_addr)   
 362:Src/usbd_conf.c **** {
 1015              		.loc 1 362 0
 1016              		.cfi_startproc
 1017              		@ args = 0, pretend = 0, frame = 8
 1018              		@ frame_needed = 1, uses_anonymous_args = 0
 1019 0000 80B5     		push	{r7, lr}
 1020              	.LCFI90:
 1021              		.cfi_def_cfa_offset 8
 1022              		.cfi_offset 7, -8
 1023              		.cfi_offset 14, -4
 1024 0002 82B0     		sub	sp, sp, #8
 1025              	.LCFI91:
 1026              		.cfi_def_cfa_offset 16
 1027 0004 00AF     		add	r7, sp, #0
 1028              	.LCFI92:
 1029              		.cfi_def_cfa_register 7
 1030 0006 7860     		str	r0, [r7, #4]
 1031 0008 0B46     		mov	r3, r1
 1032 000a FB70     		strb	r3, [r7, #3]
 363:Src/usbd_conf.c ****   
 364:Src/usbd_conf.c ****   HAL_PCD_EP_Close(pdev->pData, ep_addr);
 1033              		.loc 1 364 0
 1034 000c 7B68     		ldr	r3, [r7, #4]
 1035 000e D3F82032 		ldr	r3, [r3, #544]
 1036 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1037 0014 1146     		mov	r1, r2
 1038 0016 1846     		mov	r0, r3
 1039 0018 FFF7FEFF 		bl	HAL_PCD_EP_Close
 365:Src/usbd_conf.c ****   return USBD_OK; 
 1040              		.loc 1 365 0
 1041 001c 0023     		movs	r3, #0
 366:Src/usbd_conf.c **** }
ARM GAS  /tmp/ccIr5YrL.s 			page 25


 1042              		.loc 1 366 0
 1043 001e 1846     		mov	r0, r3
 1044 0020 0837     		adds	r7, r7, #8
 1045              	.LCFI93:
 1046              		.cfi_def_cfa_offset 8
 1047 0022 BD46     		mov	sp, r7
 1048              	.LCFI94:
 1049              		.cfi_def_cfa_register 13
 1050              		@ sp needed
 1051 0024 80BD     		pop	{r7, pc}
 1052              		.cfi_endproc
 1053              	.LFE130:
 1055 0026 00BF     		.section	.text.USBD_LL_FlushEP,"ax",%progbits
 1056              		.align	2
 1057              		.global	USBD_LL_FlushEP
 1058              		.thumb
 1059              		.thumb_func
 1061              	USBD_LL_FlushEP:
 1062              	.LFB131:
 367:Src/usbd_conf.c **** 
 368:Src/usbd_conf.c **** /**
 369:Src/usbd_conf.c ****   * @brief  Flushes an endpoint of the Low Level Driver.
 370:Src/usbd_conf.c ****   * @param  pdev: Device handle
 371:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 372:Src/usbd_conf.c ****   * @retval USBD Status
 373:Src/usbd_conf.c ****   */
 374:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_FlushEP (USBD_HandleTypeDef *pdev, uint8_t ep_addr)   
 375:Src/usbd_conf.c **** {
 1063              		.loc 1 375 0
 1064              		.cfi_startproc
 1065              		@ args = 0, pretend = 0, frame = 8
 1066              		@ frame_needed = 1, uses_anonymous_args = 0
 1067 0000 80B5     		push	{r7, lr}
 1068              	.LCFI95:
 1069              		.cfi_def_cfa_offset 8
 1070              		.cfi_offset 7, -8
 1071              		.cfi_offset 14, -4
 1072 0002 82B0     		sub	sp, sp, #8
 1073              	.LCFI96:
 1074              		.cfi_def_cfa_offset 16
 1075 0004 00AF     		add	r7, sp, #0
 1076              	.LCFI97:
 1077              		.cfi_def_cfa_register 7
 1078 0006 7860     		str	r0, [r7, #4]
 1079 0008 0B46     		mov	r3, r1
 1080 000a FB70     		strb	r3, [r7, #3]
 376:Src/usbd_conf.c ****   
 377:Src/usbd_conf.c ****   HAL_PCD_EP_Flush(pdev->pData, ep_addr);
 1081              		.loc 1 377 0
 1082 000c 7B68     		ldr	r3, [r7, #4]
 1083 000e D3F82032 		ldr	r3, [r3, #544]
 1084 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1085 0014 1146     		mov	r1, r2
 1086 0016 1846     		mov	r0, r3
 1087 0018 FFF7FEFF 		bl	HAL_PCD_EP_Flush
 378:Src/usbd_conf.c ****   return USBD_OK; 
 1088              		.loc 1 378 0
ARM GAS  /tmp/ccIr5YrL.s 			page 26


 1089 001c 0023     		movs	r3, #0
 379:Src/usbd_conf.c **** }
 1090              		.loc 1 379 0
 1091 001e 1846     		mov	r0, r3
 1092 0020 0837     		adds	r7, r7, #8
 1093              	.LCFI98:
 1094              		.cfi_def_cfa_offset 8
 1095 0022 BD46     		mov	sp, r7
 1096              	.LCFI99:
 1097              		.cfi_def_cfa_register 13
 1098              		@ sp needed
 1099 0024 80BD     		pop	{r7, pc}
 1100              		.cfi_endproc
 1101              	.LFE131:
 1103 0026 00BF     		.section	.text.USBD_LL_StallEP,"ax",%progbits
 1104              		.align	2
 1105              		.global	USBD_LL_StallEP
 1106              		.thumb
 1107              		.thumb_func
 1109              	USBD_LL_StallEP:
 1110              	.LFB132:
 380:Src/usbd_conf.c **** 
 381:Src/usbd_conf.c **** /**
 382:Src/usbd_conf.c ****   * @brief  Sets a Stall condition on an endpoint of the Low Level Driver.
 383:Src/usbd_conf.c ****   * @param  pdev: Device handle
 384:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 385:Src/usbd_conf.c ****   * @retval USBD Status
 386:Src/usbd_conf.c ****   */
 387:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_StallEP (USBD_HandleTypeDef *pdev, uint8_t ep_addr)   
 388:Src/usbd_conf.c **** {
 1111              		.loc 1 388 0
 1112              		.cfi_startproc
 1113              		@ args = 0, pretend = 0, frame = 8
 1114              		@ frame_needed = 1, uses_anonymous_args = 0
 1115 0000 80B5     		push	{r7, lr}
 1116              	.LCFI100:
 1117              		.cfi_def_cfa_offset 8
 1118              		.cfi_offset 7, -8
 1119              		.cfi_offset 14, -4
 1120 0002 82B0     		sub	sp, sp, #8
 1121              	.LCFI101:
 1122              		.cfi_def_cfa_offset 16
 1123 0004 00AF     		add	r7, sp, #0
 1124              	.LCFI102:
 1125              		.cfi_def_cfa_register 7
 1126 0006 7860     		str	r0, [r7, #4]
 1127 0008 0B46     		mov	r3, r1
 1128 000a FB70     		strb	r3, [r7, #3]
 389:Src/usbd_conf.c ****   
 390:Src/usbd_conf.c ****   HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 1129              		.loc 1 390 0
 1130 000c 7B68     		ldr	r3, [r7, #4]
 1131 000e D3F82032 		ldr	r3, [r3, #544]
 1132 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1133 0014 1146     		mov	r1, r2
 1134 0016 1846     		mov	r0, r3
 1135 0018 FFF7FEFF 		bl	HAL_PCD_EP_SetStall
ARM GAS  /tmp/ccIr5YrL.s 			page 27


 391:Src/usbd_conf.c ****   return USBD_OK; 
 1136              		.loc 1 391 0
 1137 001c 0023     		movs	r3, #0
 392:Src/usbd_conf.c **** }
 1138              		.loc 1 392 0
 1139 001e 1846     		mov	r0, r3
 1140 0020 0837     		adds	r7, r7, #8
 1141              	.LCFI103:
 1142              		.cfi_def_cfa_offset 8
 1143 0022 BD46     		mov	sp, r7
 1144              	.LCFI104:
 1145              		.cfi_def_cfa_register 13
 1146              		@ sp needed
 1147 0024 80BD     		pop	{r7, pc}
 1148              		.cfi_endproc
 1149              	.LFE132:
 1151 0026 00BF     		.section	.text.USBD_LL_ClearStallEP,"ax",%progbits
 1152              		.align	2
 1153              		.global	USBD_LL_ClearStallEP
 1154              		.thumb
 1155              		.thumb_func
 1157              	USBD_LL_ClearStallEP:
 1158              	.LFB133:
 393:Src/usbd_conf.c **** 
 394:Src/usbd_conf.c **** /**
 395:Src/usbd_conf.c ****   * @brief  Clears a Stall condition on an endpoint of the Low Level Driver.
 396:Src/usbd_conf.c ****   * @param  pdev: Device handle
 397:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 398:Src/usbd_conf.c ****   * @retval USBD Status
 399:Src/usbd_conf.c ****   */
 400:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_ClearStallEP (USBD_HandleTypeDef *pdev, uint8_t ep_addr)   
 401:Src/usbd_conf.c **** {
 1159              		.loc 1 401 0
 1160              		.cfi_startproc
 1161              		@ args = 0, pretend = 0, frame = 8
 1162              		@ frame_needed = 1, uses_anonymous_args = 0
 1163 0000 80B5     		push	{r7, lr}
 1164              	.LCFI105:
 1165              		.cfi_def_cfa_offset 8
 1166              		.cfi_offset 7, -8
 1167              		.cfi_offset 14, -4
 1168 0002 82B0     		sub	sp, sp, #8
 1169              	.LCFI106:
 1170              		.cfi_def_cfa_offset 16
 1171 0004 00AF     		add	r7, sp, #0
 1172              	.LCFI107:
 1173              		.cfi_def_cfa_register 7
 1174 0006 7860     		str	r0, [r7, #4]
 1175 0008 0B46     		mov	r3, r1
 1176 000a FB70     		strb	r3, [r7, #3]
 402:Src/usbd_conf.c ****   
 403:Src/usbd_conf.c ****   HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);  
 1177              		.loc 1 403 0
 1178 000c 7B68     		ldr	r3, [r7, #4]
 1179 000e D3F82032 		ldr	r3, [r3, #544]
 1180 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1181 0014 1146     		mov	r1, r2
ARM GAS  /tmp/ccIr5YrL.s 			page 28


 1182 0016 1846     		mov	r0, r3
 1183 0018 FFF7FEFF 		bl	HAL_PCD_EP_ClrStall
 404:Src/usbd_conf.c ****   return USBD_OK; 
 1184              		.loc 1 404 0
 1185 001c 0023     		movs	r3, #0
 405:Src/usbd_conf.c **** }
 1186              		.loc 1 405 0
 1187 001e 1846     		mov	r0, r3
 1188 0020 0837     		adds	r7, r7, #8
 1189              	.LCFI108:
 1190              		.cfi_def_cfa_offset 8
 1191 0022 BD46     		mov	sp, r7
 1192              	.LCFI109:
 1193              		.cfi_def_cfa_register 13
 1194              		@ sp needed
 1195 0024 80BD     		pop	{r7, pc}
 1196              		.cfi_endproc
 1197              	.LFE133:
 1199 0026 00BF     		.section	.text.USBD_LL_IsStallEP,"ax",%progbits
 1200              		.align	2
 1201              		.global	USBD_LL_IsStallEP
 1202              		.thumb
 1203              		.thumb_func
 1205              	USBD_LL_IsStallEP:
 1206              	.LFB134:
 406:Src/usbd_conf.c **** 
 407:Src/usbd_conf.c **** /**
 408:Src/usbd_conf.c ****   * @brief  Returns Stall condition.
 409:Src/usbd_conf.c ****   * @param  pdev: Device handle
 410:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 411:Src/usbd_conf.c ****   * @retval Stall (1: Yes, 0: No)
 412:Src/usbd_conf.c ****   */
 413:Src/usbd_conf.c **** uint8_t USBD_LL_IsStallEP (USBD_HandleTypeDef *pdev, uint8_t ep_addr)   
 414:Src/usbd_conf.c **** {
 1207              		.loc 1 414 0
 1208              		.cfi_startproc
 1209              		@ args = 0, pretend = 0, frame = 16
 1210              		@ frame_needed = 1, uses_anonymous_args = 0
 1211              		@ link register save eliminated.
 1212 0000 80B4     		push	{r7}
 1213              	.LCFI110:
 1214              		.cfi_def_cfa_offset 4
 1215              		.cfi_offset 7, -4
 1216 0002 85B0     		sub	sp, sp, #20
 1217              	.LCFI111:
 1218              		.cfi_def_cfa_offset 24
 1219 0004 00AF     		add	r7, sp, #0
 1220              	.LCFI112:
 1221              		.cfi_def_cfa_register 7
 1222 0006 7860     		str	r0, [r7, #4]
 1223 0008 0B46     		mov	r3, r1
 1224 000a FB70     		strb	r3, [r7, #3]
 415:Src/usbd_conf.c ****   PCD_HandleTypeDef *hpcd = pdev->pData; 
 1225              		.loc 1 415 0
 1226 000c 7B68     		ldr	r3, [r7, #4]
 1227 000e D3F82032 		ldr	r3, [r3, #544]
 1228 0012 FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccIr5YrL.s 			page 29


 416:Src/usbd_conf.c ****   
 417:Src/usbd_conf.c ****   if((ep_addr & 0x80) == 0x80)
 1229              		.loc 1 417 0
 1230 0014 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1231 0016 5BB2     		sxtb	r3, r3
 1232 0018 002B     		cmp	r3, #0
 1233 001a 0BDA     		bge	.L50
 418:Src/usbd_conf.c ****   {
 419:Src/usbd_conf.c ****     return hpcd->IN_ep[ep_addr & 0x7F].is_stall; 
 1234              		.loc 1 419 0
 1235 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1236 001e 03F07F02 		and	r2, r3, #127
 1237 0022 F968     		ldr	r1, [r7, #12]
 1238 0024 1346     		mov	r3, r2
 1239 0026 DB00     		lsls	r3, r3, #3
 1240 0028 9B1A     		subs	r3, r3, r2
 1241 002a 9B00     		lsls	r3, r3, #2
 1242 002c 0B44     		add	r3, r3, r1
 1243 002e 2A33     		adds	r3, r3, #42
 1244 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1245 0032 0BE0     		b	.L51
 1246              	.L50:
 420:Src/usbd_conf.c ****   }
 421:Src/usbd_conf.c ****   else
 422:Src/usbd_conf.c ****   {
 423:Src/usbd_conf.c ****     return hpcd->OUT_ep[ep_addr & 0x7F].is_stall; 
 1247              		.loc 1 423 0
 1248 0034 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1249 0036 03F07F02 		and	r2, r3, #127
 1250 003a F968     		ldr	r1, [r7, #12]
 1251 003c 1346     		mov	r3, r2
 1252 003e DB00     		lsls	r3, r3, #3
 1253 0040 9B1A     		subs	r3, r3, r2
 1254 0042 9B00     		lsls	r3, r3, #2
 1255 0044 0B44     		add	r3, r3, r1
 1256 0046 03F58573 		add	r3, r3, #266
 1257 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1258              	.L51:
 424:Src/usbd_conf.c ****   }
 425:Src/usbd_conf.c **** }
 1259              		.loc 1 425 0
 1260 004c 1846     		mov	r0, r3
 1261 004e 1437     		adds	r7, r7, #20
 1262              	.LCFI113:
 1263              		.cfi_def_cfa_offset 4
 1264 0050 BD46     		mov	sp, r7
 1265              	.LCFI114:
 1266              		.cfi_def_cfa_register 13
 1267              		@ sp needed
 1268 0052 5DF8047B 		ldr	r7, [sp], #4
 1269              	.LCFI115:
 1270              		.cfi_restore 7
 1271              		.cfi_def_cfa_offset 0
 1272 0056 7047     		bx	lr
 1273              		.cfi_endproc
 1274              	.LFE134:
 1276              		.section	.text.USBD_LL_SetUSBAddress,"ax",%progbits
ARM GAS  /tmp/ccIr5YrL.s 			page 30


 1277              		.align	2
 1278              		.global	USBD_LL_SetUSBAddress
 1279              		.thumb
 1280              		.thumb_func
 1282              	USBD_LL_SetUSBAddress:
 1283              	.LFB135:
 426:Src/usbd_conf.c **** /**
 427:Src/usbd_conf.c ****   * @brief  Assigns a USB address to the device.
 428:Src/usbd_conf.c ****   * @param  pdev: Device handle
 429:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 430:Src/usbd_conf.c ****   * @retval USBD Status
 431:Src/usbd_conf.c ****   */
 432:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_SetUSBAddress (USBD_HandleTypeDef *pdev, uint8_t dev_addr)   
 433:Src/usbd_conf.c **** {
 1284              		.loc 1 433 0
 1285              		.cfi_startproc
 1286              		@ args = 0, pretend = 0, frame = 8
 1287              		@ frame_needed = 1, uses_anonymous_args = 0
 1288 0000 80B5     		push	{r7, lr}
 1289              	.LCFI116:
 1290              		.cfi_def_cfa_offset 8
 1291              		.cfi_offset 7, -8
 1292              		.cfi_offset 14, -4
 1293 0002 82B0     		sub	sp, sp, #8
 1294              	.LCFI117:
 1295              		.cfi_def_cfa_offset 16
 1296 0004 00AF     		add	r7, sp, #0
 1297              	.LCFI118:
 1298              		.cfi_def_cfa_register 7
 1299 0006 7860     		str	r0, [r7, #4]
 1300 0008 0B46     		mov	r3, r1
 1301 000a FB70     		strb	r3, [r7, #3]
 434:Src/usbd_conf.c ****   
 435:Src/usbd_conf.c ****   HAL_PCD_SetAddress(pdev->pData, dev_addr);
 1302              		.loc 1 435 0
 1303 000c 7B68     		ldr	r3, [r7, #4]
 1304 000e D3F82032 		ldr	r3, [r3, #544]
 1305 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1306 0014 1146     		mov	r1, r2
 1307 0016 1846     		mov	r0, r3
 1308 0018 FFF7FEFF 		bl	HAL_PCD_SetAddress
 436:Src/usbd_conf.c ****   return USBD_OK; 
 1309              		.loc 1 436 0
 1310 001c 0023     		movs	r3, #0
 437:Src/usbd_conf.c **** }
 1311              		.loc 1 437 0
 1312 001e 1846     		mov	r0, r3
 1313 0020 0837     		adds	r7, r7, #8
 1314              	.LCFI119:
 1315              		.cfi_def_cfa_offset 8
 1316 0022 BD46     		mov	sp, r7
 1317              	.LCFI120:
 1318              		.cfi_def_cfa_register 13
 1319              		@ sp needed
 1320 0024 80BD     		pop	{r7, pc}
 1321              		.cfi_endproc
 1322              	.LFE135:
ARM GAS  /tmp/ccIr5YrL.s 			page 31


 1324 0026 00BF     		.section	.text.USBD_LL_Transmit,"ax",%progbits
 1325              		.align	2
 1326              		.global	USBD_LL_Transmit
 1327              		.thumb
 1328              		.thumb_func
 1330              	USBD_LL_Transmit:
 1331              	.LFB136:
 438:Src/usbd_conf.c **** 
 439:Src/usbd_conf.c **** /**
 440:Src/usbd_conf.c ****   * @brief  Transmits data over an endpoint.
 441:Src/usbd_conf.c ****   * @param  pdev: Device handle
 442:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 443:Src/usbd_conf.c ****   * @param  pbuf: Pointer to data to be sent
 444:Src/usbd_conf.c ****   * @param  size: Data size    
 445:Src/usbd_conf.c ****   * @retval USBD Status
 446:Src/usbd_conf.c ****   */
 447:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_Transmit (USBD_HandleTypeDef *pdev, 
 448:Src/usbd_conf.c ****                                       uint8_t  ep_addr,                                      
 449:Src/usbd_conf.c ****                                       uint8_t  *pbuf,
 450:Src/usbd_conf.c ****                                       uint16_t  size)
 451:Src/usbd_conf.c **** {
 1332              		.loc 1 451 0
 1333              		.cfi_startproc
 1334              		@ args = 0, pretend = 0, frame = 16
 1335              		@ frame_needed = 1, uses_anonymous_args = 0
 1336 0000 80B5     		push	{r7, lr}
 1337              	.LCFI121:
 1338              		.cfi_def_cfa_offset 8
 1339              		.cfi_offset 7, -8
 1340              		.cfi_offset 14, -4
 1341 0002 84B0     		sub	sp, sp, #16
 1342              	.LCFI122:
 1343              		.cfi_def_cfa_offset 24
 1344 0004 00AF     		add	r7, sp, #0
 1345              	.LCFI123:
 1346              		.cfi_def_cfa_register 7
 1347 0006 F860     		str	r0, [r7, #12]
 1348 0008 7A60     		str	r2, [r7, #4]
 1349 000a 1A46     		mov	r2, r3
 1350 000c 0B46     		mov	r3, r1
 1351 000e FB72     		strb	r3, [r7, #11]
 1352 0010 1346     		mov	r3, r2	@ movhi
 1353 0012 3B81     		strh	r3, [r7, #8]	@ movhi
 452:Src/usbd_conf.c **** 
 453:Src/usbd_conf.c ****   HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 1354              		.loc 1 453 0
 1355 0014 FB68     		ldr	r3, [r7, #12]
 1356 0016 D3F82002 		ldr	r0, [r3, #544]
 1357 001a 3B89     		ldrh	r3, [r7, #8]
 1358 001c F97A     		ldrb	r1, [r7, #11]	@ zero_extendqisi2
 1359 001e 7A68     		ldr	r2, [r7, #4]
 1360 0020 FFF7FEFF 		bl	HAL_PCD_EP_Transmit
 454:Src/usbd_conf.c ****   return USBD_OK;   
 1361              		.loc 1 454 0
 1362 0024 0023     		movs	r3, #0
 455:Src/usbd_conf.c **** }
 1363              		.loc 1 455 0
ARM GAS  /tmp/ccIr5YrL.s 			page 32


 1364 0026 1846     		mov	r0, r3
 1365 0028 1037     		adds	r7, r7, #16
 1366              	.LCFI124:
 1367              		.cfi_def_cfa_offset 8
 1368 002a BD46     		mov	sp, r7
 1369              	.LCFI125:
 1370              		.cfi_def_cfa_register 13
 1371              		@ sp needed
 1372 002c 80BD     		pop	{r7, pc}
 1373              		.cfi_endproc
 1374              	.LFE136:
 1376 002e 00BF     		.section	.text.USBD_LL_PrepareReceive,"ax",%progbits
 1377              		.align	2
 1378              		.global	USBD_LL_PrepareReceive
 1379              		.thumb
 1380              		.thumb_func
 1382              	USBD_LL_PrepareReceive:
 1383              	.LFB137:
 456:Src/usbd_conf.c **** 
 457:Src/usbd_conf.c **** /**
 458:Src/usbd_conf.c ****   * @brief  Prepares an endpoint for reception.
 459:Src/usbd_conf.c ****   * @param  pdev: Device handle
 460:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 461:Src/usbd_conf.c ****   * @param  pbuf: Pointer to data to be received
 462:Src/usbd_conf.c ****   * @param  size: Data size
 463:Src/usbd_conf.c ****   * @retval USBD Status
 464:Src/usbd_conf.c ****   */
 465:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_PrepareReceive(USBD_HandleTypeDef *pdev, 
 466:Src/usbd_conf.c ****                                            uint8_t  ep_addr,                                      
 467:Src/usbd_conf.c ****                                            uint8_t  *pbuf,
 468:Src/usbd_conf.c ****                                            uint16_t  size)
 469:Src/usbd_conf.c **** {
 1384              		.loc 1 469 0
 1385              		.cfi_startproc
 1386              		@ args = 0, pretend = 0, frame = 16
 1387              		@ frame_needed = 1, uses_anonymous_args = 0
 1388 0000 80B5     		push	{r7, lr}
 1389              	.LCFI126:
 1390              		.cfi_def_cfa_offset 8
 1391              		.cfi_offset 7, -8
 1392              		.cfi_offset 14, -4
 1393 0002 84B0     		sub	sp, sp, #16
 1394              	.LCFI127:
 1395              		.cfi_def_cfa_offset 24
 1396 0004 00AF     		add	r7, sp, #0
 1397              	.LCFI128:
 1398              		.cfi_def_cfa_register 7
 1399 0006 F860     		str	r0, [r7, #12]
 1400 0008 7A60     		str	r2, [r7, #4]
 1401 000a 1A46     		mov	r2, r3
 1402 000c 0B46     		mov	r3, r1
 1403 000e FB72     		strb	r3, [r7, #11]
 1404 0010 1346     		mov	r3, r2	@ movhi
 1405 0012 3B81     		strh	r3, [r7, #8]	@ movhi
 470:Src/usbd_conf.c **** 
 471:Src/usbd_conf.c ****   HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 1406              		.loc 1 471 0
ARM GAS  /tmp/ccIr5YrL.s 			page 33


 1407 0014 FB68     		ldr	r3, [r7, #12]
 1408 0016 D3F82002 		ldr	r0, [r3, #544]
 1409 001a 3B89     		ldrh	r3, [r7, #8]
 1410 001c F97A     		ldrb	r1, [r7, #11]	@ zero_extendqisi2
 1411 001e 7A68     		ldr	r2, [r7, #4]
 1412 0020 FFF7FEFF 		bl	HAL_PCD_EP_Receive
 472:Src/usbd_conf.c ****   return USBD_OK;   
 1413              		.loc 1 472 0
 1414 0024 0023     		movs	r3, #0
 473:Src/usbd_conf.c **** }
 1415              		.loc 1 473 0
 1416 0026 1846     		mov	r0, r3
 1417 0028 1037     		adds	r7, r7, #16
 1418              	.LCFI129:
 1419              		.cfi_def_cfa_offset 8
 1420 002a BD46     		mov	sp, r7
 1421              	.LCFI130:
 1422              		.cfi_def_cfa_register 13
 1423              		@ sp needed
 1424 002c 80BD     		pop	{r7, pc}
 1425              		.cfi_endproc
 1426              	.LFE137:
 1428 002e 00BF     		.section	.text.USBD_LL_GetRxDataSize,"ax",%progbits
 1429              		.align	2
 1430              		.global	USBD_LL_GetRxDataSize
 1431              		.thumb
 1432              		.thumb_func
 1434              	USBD_LL_GetRxDataSize:
 1435              	.LFB138:
 474:Src/usbd_conf.c **** 
 475:Src/usbd_conf.c **** /**
 476:Src/usbd_conf.c ****   * @brief  Returns the last transfered packet size.
 477:Src/usbd_conf.c ****   * @param  pdev: Device handle
 478:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 479:Src/usbd_conf.c ****   * @retval Recived Data Size
 480:Src/usbd_conf.c ****   */
 481:Src/usbd_conf.c **** uint32_t USBD_LL_GetRxDataSize  (USBD_HandleTypeDef *pdev, uint8_t  ep_addr)  
 482:Src/usbd_conf.c **** {
 1436              		.loc 1 482 0
 1437              		.cfi_startproc
 1438              		@ args = 0, pretend = 0, frame = 8
 1439              		@ frame_needed = 1, uses_anonymous_args = 0
 1440 0000 80B5     		push	{r7, lr}
 1441              	.LCFI131:
 1442              		.cfi_def_cfa_offset 8
 1443              		.cfi_offset 7, -8
 1444              		.cfi_offset 14, -4
 1445 0002 82B0     		sub	sp, sp, #8
 1446              	.LCFI132:
 1447              		.cfi_def_cfa_offset 16
 1448 0004 00AF     		add	r7, sp, #0
 1449              	.LCFI133:
 1450              		.cfi_def_cfa_register 7
 1451 0006 7860     		str	r0, [r7, #4]
 1452 0008 0B46     		mov	r3, r1
 1453 000a FB70     		strb	r3, [r7, #3]
 483:Src/usbd_conf.c ****   return HAL_PCD_EP_GetRxCount(pdev->pData, ep_addr);
ARM GAS  /tmp/ccIr5YrL.s 			page 34


 1454              		.loc 1 483 0
 1455 000c 7B68     		ldr	r3, [r7, #4]
 1456 000e D3F82032 		ldr	r3, [r3, #544]
 1457 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1458 0014 1146     		mov	r1, r2
 1459 0016 1846     		mov	r0, r3
 1460 0018 FFF7FEFF 		bl	HAL_PCD_EP_GetRxCount
 1461 001c 0346     		mov	r3, r0
 484:Src/usbd_conf.c **** }
 1462              		.loc 1 484 0
 1463 001e 1846     		mov	r0, r3
 1464 0020 0837     		adds	r7, r7, #8
 1465              	.LCFI134:
 1466              		.cfi_def_cfa_offset 8
 1467 0022 BD46     		mov	sp, r7
 1468              	.LCFI135:
 1469              		.cfi_def_cfa_register 13
 1470              		@ sp needed
 1471 0024 80BD     		pop	{r7, pc}
 1472              		.cfi_endproc
 1473              	.LFE138:
 1475 0026 00BF     		.section	.text.USBD_LL_Delay,"ax",%progbits
 1476              		.align	2
 1477              		.global	USBD_LL_Delay
 1478              		.thumb
 1479              		.thumb_func
 1481              	USBD_LL_Delay:
 1482              	.LFB139:
 485:Src/usbd_conf.c **** 
 486:Src/usbd_conf.c **** /**
 487:Src/usbd_conf.c ****   * @brief  Delays routine for the USB Device Library.
 488:Src/usbd_conf.c ****   * @param  Delay: Delay in ms
 489:Src/usbd_conf.c ****   * @retval None
 490:Src/usbd_conf.c ****   */
 491:Src/usbd_conf.c **** void  USBD_LL_Delay (uint32_t Delay)
 492:Src/usbd_conf.c **** {
 1483              		.loc 1 492 0
 1484              		.cfi_startproc
 1485              		@ args = 0, pretend = 0, frame = 8
 1486              		@ frame_needed = 1, uses_anonymous_args = 0
 1487 0000 80B5     		push	{r7, lr}
 1488              	.LCFI136:
 1489              		.cfi_def_cfa_offset 8
 1490              		.cfi_offset 7, -8
 1491              		.cfi_offset 14, -4
 1492 0002 82B0     		sub	sp, sp, #8
 1493              	.LCFI137:
 1494              		.cfi_def_cfa_offset 16
 1495 0004 00AF     		add	r7, sp, #0
 1496              	.LCFI138:
 1497              		.cfi_def_cfa_register 7
 1498 0006 7860     		str	r0, [r7, #4]
 493:Src/usbd_conf.c ****   HAL_Delay(Delay);  
 1499              		.loc 1 493 0
 1500 0008 7868     		ldr	r0, [r7, #4]
 1501 000a FFF7FEFF 		bl	HAL_Delay
 494:Src/usbd_conf.c **** }
ARM GAS  /tmp/ccIr5YrL.s 			page 35


 1502              		.loc 1 494 0
 1503 000e 00BF     		nop
 1504 0010 0837     		adds	r7, r7, #8
 1505              	.LCFI139:
 1506              		.cfi_def_cfa_offset 8
 1507 0012 BD46     		mov	sp, r7
 1508              	.LCFI140:
 1509              		.cfi_def_cfa_register 13
 1510              		@ sp needed
 1511 0014 80BD     		pop	{r7, pc}
 1512              		.cfi_endproc
 1513              	.LFE139:
 1515              		.section	.text.USBD_static_malloc,"ax",%progbits
 1516              		.align	2
 1517              		.global	USBD_static_malloc
 1518              		.thumb
 1519              		.thumb_func
 1521              	USBD_static_malloc:
 1522              	.LFB140:
 495:Src/usbd_conf.c **** 
 496:Src/usbd_conf.c **** /**
 497:Src/usbd_conf.c ****   * @brief  static single allocation.
 498:Src/usbd_conf.c ****   * @param  size: size of allocated memory
 499:Src/usbd_conf.c ****   * @retval None
 500:Src/usbd_conf.c ****   */
 501:Src/usbd_conf.c **** void *USBD_static_malloc(uint32_t size)
 502:Src/usbd_conf.c **** {
 1523              		.loc 1 502 0
 1524              		.cfi_startproc
 1525              		@ args = 0, pretend = 0, frame = 8
 1526              		@ frame_needed = 1, uses_anonymous_args = 0
 1527              		@ link register save eliminated.
 1528 0000 80B4     		push	{r7}
 1529              	.LCFI141:
 1530              		.cfi_def_cfa_offset 4
 1531              		.cfi_offset 7, -4
 1532 0002 83B0     		sub	sp, sp, #12
 1533              	.LCFI142:
 1534              		.cfi_def_cfa_offset 16
 1535 0004 00AF     		add	r7, sp, #0
 1536              	.LCFI143:
 1537              		.cfi_def_cfa_register 7
 1538 0006 7860     		str	r0, [r7, #4]
 503:Src/usbd_conf.c ****   static uint8_t mem[sizeof(USBD_AUDIO_HandleTypeDef)];
 504:Src/usbd_conf.c ****   return mem;
 1539              		.loc 1 504 0
 1540 0008 034B     		ldr	r3, .L63
 505:Src/usbd_conf.c **** }
 1541              		.loc 1 505 0
 1542 000a 1846     		mov	r0, r3
 1543 000c 0C37     		adds	r7, r7, #12
 1544              	.LCFI144:
 1545              		.cfi_def_cfa_offset 4
 1546 000e BD46     		mov	sp, r7
 1547              	.LCFI145:
 1548              		.cfi_def_cfa_register 13
 1549              		@ sp needed
ARM GAS  /tmp/ccIr5YrL.s 			page 36


 1550 0010 5DF8047B 		ldr	r7, [sp], #4
 1551              	.LCFI146:
 1552              		.cfi_restore 7
 1553              		.cfi_def_cfa_offset 0
 1554 0014 7047     		bx	lr
 1555              	.L64:
 1556 0016 00BF     		.align	2
 1557              	.L63:
 1558 0018 00000000 		.word	mem.8789
 1559              		.cfi_endproc
 1560              	.LFE140:
 1562              		.section	.text.USBD_static_free,"ax",%progbits
 1563              		.align	2
 1564              		.global	USBD_static_free
 1565              		.thumb
 1566              		.thumb_func
 1568              	USBD_static_free:
 1569              	.LFB141:
 506:Src/usbd_conf.c **** 
 507:Src/usbd_conf.c **** /**
 508:Src/usbd_conf.c ****   * @brief  Dummy memory free
 509:Src/usbd_conf.c ****   * @param  *p pointer to allocated  memory address
 510:Src/usbd_conf.c ****   * @retval None
 511:Src/usbd_conf.c ****   */
 512:Src/usbd_conf.c **** void USBD_static_free(void *p)
 513:Src/usbd_conf.c **** {
 1570              		.loc 1 513 0
 1571              		.cfi_startproc
 1572              		@ args = 0, pretend = 0, frame = 8
 1573              		@ frame_needed = 1, uses_anonymous_args = 0
 1574 0000 80B5     		push	{r7, lr}
 1575              	.LCFI147:
 1576              		.cfi_def_cfa_offset 8
 1577              		.cfi_offset 7, -8
 1578              		.cfi_offset 14, -4
 1579 0002 82B0     		sub	sp, sp, #8
 1580              	.LCFI148:
 1581              		.cfi_def_cfa_offset 16
 1582 0004 00AF     		add	r7, sp, #0
 1583              	.LCFI149:
 1584              		.cfi_def_cfa_register 7
 1585 0006 7860     		str	r0, [r7, #4]
 514:Src/usbd_conf.c ****   free(p);
 1586              		.loc 1 514 0
 1587 0008 7868     		ldr	r0, [r7, #4]
 1588 000a FFF7FEFF 		bl	free
 515:Src/usbd_conf.c **** }
 1589              		.loc 1 515 0
 1590 000e 00BF     		nop
 1591 0010 0837     		adds	r7, r7, #8
 1592              	.LCFI150:
 1593              		.cfi_def_cfa_offset 8
 1594 0012 BD46     		mov	sp, r7
 1595              	.LCFI151:
 1596              		.cfi_def_cfa_register 13
 1597              		@ sp needed
 1598 0014 80BD     		pop	{r7, pc}
ARM GAS  /tmp/ccIr5YrL.s 			page 37


 1599              		.cfi_endproc
 1600              	.LFE141:
 1602              		.section	.text.SystemClockConfig_Resume,"ax",%progbits
 1603              		.align	2
 1604              		.thumb
 1605              		.thumb_func
 1607              	SystemClockConfig_Resume:
 1608              	.LFB142:
 516:Src/usbd_conf.c **** 
 517:Src/usbd_conf.c **** /* USER CODE BEGIN 4 */
 518:Src/usbd_conf.c **** /**
 519:Src/usbd_conf.c ****   * @brief  Configures system clock after wake-up from USB Resume CallBack: 
 520:Src/usbd_conf.c ****   *         enable HSI, PLL and select PLL as system clock source.
 521:Src/usbd_conf.c ****   * @param  None
 522:Src/usbd_conf.c ****   * @retval None
 523:Src/usbd_conf.c ****   */
 524:Src/usbd_conf.c **** static void SystemClockConfig_Resume(void)
 525:Src/usbd_conf.c **** {
 1609              		.loc 1 525 0
 1610              		.cfi_startproc
 1611              		@ args = 0, pretend = 0, frame = 0
 1612              		@ frame_needed = 1, uses_anonymous_args = 0
 1613 0000 80B5     		push	{r7, lr}
 1614              	.LCFI152:
 1615              		.cfi_def_cfa_offset 8
 1616              		.cfi_offset 7, -8
 1617              		.cfi_offset 14, -4
 1618 0002 00AF     		add	r7, sp, #0
 1619              	.LCFI153:
 1620              		.cfi_def_cfa_register 7
 526:Src/usbd_conf.c **** 	SystemClock_Config();
 1621              		.loc 1 526 0
 1622 0004 FFF7FEFF 		bl	SystemClock_Config
 527:Src/usbd_conf.c **** }
 1623              		.loc 1 527 0
 1624 0008 00BF     		nop
 1625 000a 80BD     		pop	{r7, pc}
 1626              		.cfi_endproc
 1627              	.LFE142:
 1629              		.section	.text.HAL_PCDEx_SetConnectionState,"ax",%progbits
 1630              		.align	2
 1631              		.weak	HAL_PCDEx_SetConnectionState
 1632              		.thumb
 1633              		.thumb_func
 1635              	HAL_PCDEx_SetConnectionState:
 1636              	.LFB143:
 528:Src/usbd_conf.c **** /* USER CODE END 4 */
 529:Src/usbd_conf.c **** 
 530:Src/usbd_conf.c **** /**
 531:Src/usbd_conf.c **** * @brief Software Device Connection
 532:Src/usbd_conf.c **** * @param hpcd: PCD handle
 533:Src/usbd_conf.c **** * @param state: connection state (0 : disconnected / 1: connected) 
 534:Src/usbd_conf.c **** * @retval None
 535:Src/usbd_conf.c **** */
 536:Src/usbd_conf.c **** void HAL_PCDEx_SetConnectionState(PCD_HandleTypeDef *hpcd, uint8_t state)
 537:Src/usbd_conf.c **** {
 1637              		.loc 1 537 0
ARM GAS  /tmp/ccIr5YrL.s 			page 38


 1638              		.cfi_startproc
 1639              		@ args = 0, pretend = 0, frame = 8
 1640              		@ frame_needed = 1, uses_anonymous_args = 0
 1641              		@ link register save eliminated.
 1642 0000 80B4     		push	{r7}
 1643              	.LCFI154:
 1644              		.cfi_def_cfa_offset 4
 1645              		.cfi_offset 7, -4
 1646 0002 83B0     		sub	sp, sp, #12
 1647              	.LCFI155:
 1648              		.cfi_def_cfa_offset 16
 1649 0004 00AF     		add	r7, sp, #0
 1650              	.LCFI156:
 1651              		.cfi_def_cfa_register 7
 1652 0006 7860     		str	r0, [r7, #4]
 1653 0008 0B46     		mov	r3, r1
 1654 000a FB70     		strb	r3, [r7, #3]
 538:Src/usbd_conf.c **** /* USER CODE BEGIN 5 */
 539:Src/usbd_conf.c ****   if (state == 1)
 540:Src/usbd_conf.c ****   {
 541:Src/usbd_conf.c ****     /* Configure Low Connection State */
 542:Src/usbd_conf.c **** 	
 543:Src/usbd_conf.c ****   }
 544:Src/usbd_conf.c ****   else
 545:Src/usbd_conf.c ****   {
 546:Src/usbd_conf.c ****     /* Configure High Connection State */
 547:Src/usbd_conf.c ****    
 548:Src/usbd_conf.c ****   } 
 549:Src/usbd_conf.c **** /* USER CODE END 5 */
 550:Src/usbd_conf.c **** }
 1655              		.loc 1 550 0
 1656 000c 00BF     		nop
 1657 000e 0C37     		adds	r7, r7, #12
 1658              	.LCFI157:
 1659              		.cfi_def_cfa_offset 4
 1660 0010 BD46     		mov	sp, r7
 1661              	.LCFI158:
 1662              		.cfi_def_cfa_register 13
 1663              		@ sp needed
 1664 0012 5DF8047B 		ldr	r7, [sp], #4
 1665              	.LCFI159:
 1666              		.cfi_restore 7
 1667              		.cfi_def_cfa_offset 0
 1668 0016 7047     		bx	lr
 1669              		.cfi_endproc
 1670              	.LFE143:
 1672              		.section	.bss.mem.8789,"aw",%nobits
 1673              		.align	2
 1676              	mem.8789:
 1677 0000 00000000 		.space	7120
 1677      00000000 
 1677      00000000 
 1677      00000000 
 1677      00000000 
 1678              		.text
 1679              	.Letext0:
 1680              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
ARM GAS  /tmp/ccIr5YrL.s 			page 39


 1681              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1682              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 1683              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 1684              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1685              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1686              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_pcd.h"
 1687              		.file 9 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 1688              		.file 10 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/ccIr5YrL.s 			page 40


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_conf.c
                            *COM*:0000000000000220 hpcd_USB_FS
     /tmp/ccIr5YrL.s:26     .bss.remotewakeupon:0000000000000000 remotewakeupon
     /tmp/ccIr5YrL.s:23     .bss.remotewakeupon:0000000000000000 $d
     /tmp/ccIr5YrL.s:29     .text.HAL_PCD_MspInit:0000000000000000 $t
     /tmp/ccIr5YrL.s:34     .text.HAL_PCD_MspInit:0000000000000000 HAL_PCD_MspInit
     /tmp/ccIr5YrL.s:107    .text.HAL_PCD_MspInit:000000000000005c $d
     /tmp/ccIr5YrL.s:113    .text.HAL_PCD_MspDeInit:0000000000000000 $t
     /tmp/ccIr5YrL.s:118    .text.HAL_PCD_MspDeInit:0000000000000000 HAL_PCD_MspDeInit
     /tmp/ccIr5YrL.s:169    .text.HAL_PCD_MspDeInit:0000000000000038 $d
     /tmp/ccIr5YrL.s:175    .text.HAL_PCD_SetupStageCallback:0000000000000000 $t
     /tmp/ccIr5YrL.s:180    .text.HAL_PCD_SetupStageCallback:0000000000000000 HAL_PCD_SetupStageCallback
     /tmp/ccIr5YrL.s:220    .text.HAL_PCD_DataOutStageCallback:0000000000000000 $t
     /tmp/ccIr5YrL.s:225    .text.HAL_PCD_DataOutStageCallback:0000000000000000 HAL_PCD_DataOutStageCallback
     /tmp/ccIr5YrL.s:274    .text.HAL_PCD_DataInStageCallback:0000000000000000 $t
     /tmp/ccIr5YrL.s:279    .text.HAL_PCD_DataInStageCallback:0000000000000000 HAL_PCD_DataInStageCallback
     /tmp/ccIr5YrL.s:328    .text.HAL_PCD_SOFCallback:0000000000000000 $t
     /tmp/ccIr5YrL.s:333    .text.HAL_PCD_SOFCallback:0000000000000000 HAL_PCD_SOFCallback
     /tmp/ccIr5YrL.s:370    .text.HAL_PCD_ResetCallback:0000000000000000 $t
     /tmp/ccIr5YrL.s:375    .text.HAL_PCD_ResetCallback:0000000000000000 HAL_PCD_ResetCallback
     /tmp/ccIr5YrL.s:439    .text.HAL_PCD_SuspendCallback:0000000000000000 $t
     /tmp/ccIr5YrL.s:444    .text.HAL_PCD_SuspendCallback:0000000000000000 HAL_PCD_SuspendCallback
     /tmp/ccIr5YrL.s:481    .text.HAL_PCD_ResumeCallback:0000000000000000 $t
     /tmp/ccIr5YrL.s:486    .text.HAL_PCD_ResumeCallback:0000000000000000 HAL_PCD_ResumeCallback
     /tmp/ccIr5YrL.s:1607   .text.SystemClockConfig_Resume:0000000000000000 SystemClockConfig_Resume
     /tmp/ccIr5YrL.s:539    .text.HAL_PCD_ResumeCallback:0000000000000038 $d
     /tmp/ccIr5YrL.s:544    .text.HAL_PCD_ISOOUTIncompleteCallback:0000000000000000 $t
     /tmp/ccIr5YrL.s:549    .text.HAL_PCD_ISOOUTIncompleteCallback:0000000000000000 HAL_PCD_ISOOUTIncompleteCallback
     /tmp/ccIr5YrL.s:590    .text.HAL_PCD_ISOINIncompleteCallback:0000000000000000 $t
     /tmp/ccIr5YrL.s:595    .text.HAL_PCD_ISOINIncompleteCallback:0000000000000000 HAL_PCD_ISOINIncompleteCallback
     /tmp/ccIr5YrL.s:636    .text.HAL_PCD_ConnectCallback:0000000000000000 $t
     /tmp/ccIr5YrL.s:641    .text.HAL_PCD_ConnectCallback:0000000000000000 HAL_PCD_ConnectCallback
     /tmp/ccIr5YrL.s:678    .text.HAL_PCD_DisconnectCallback:0000000000000000 $t
     /tmp/ccIr5YrL.s:683    .text.HAL_PCD_DisconnectCallback:0000000000000000 HAL_PCD_DisconnectCallback
     /tmp/ccIr5YrL.s:720    .text.USBD_LL_Init:0000000000000000 $t
     /tmp/ccIr5YrL.s:725    .text.USBD_LL_Init:0000000000000000 USBD_LL_Init
     /tmp/ccIr5YrL.s:815    .text.USBD_LL_Init:0000000000000078 $d
     /tmp/ccIr5YrL.s:821    .text.USBD_LL_DeInit:0000000000000000 $t
     /tmp/ccIr5YrL.s:826    .text.USBD_LL_DeInit:0000000000000000 USBD_LL_DeInit
     /tmp/ccIr5YrL.s:865    .text.USBD_LL_Start:0000000000000000 $t
     /tmp/ccIr5YrL.s:870    .text.USBD_LL_Start:0000000000000000 USBD_LL_Start
     /tmp/ccIr5YrL.s:909    .text.USBD_LL_Stop:0000000000000000 $t
     /tmp/ccIr5YrL.s:914    .text.USBD_LL_Stop:0000000000000000 USBD_LL_Stop
     /tmp/ccIr5YrL.s:953    .text.USBD_LL_OpenEP:0000000000000000 $t
     /tmp/ccIr5YrL.s:958    .text.USBD_LL_OpenEP:0000000000000000 USBD_LL_OpenEP
     /tmp/ccIr5YrL.s:1008   .text.USBD_LL_CloseEP:0000000000000000 $t
     /tmp/ccIr5YrL.s:1013   .text.USBD_LL_CloseEP:0000000000000000 USBD_LL_CloseEP
     /tmp/ccIr5YrL.s:1056   .text.USBD_LL_FlushEP:0000000000000000 $t
     /tmp/ccIr5YrL.s:1061   .text.USBD_LL_FlushEP:0000000000000000 USBD_LL_FlushEP
     /tmp/ccIr5YrL.s:1104   .text.USBD_LL_StallEP:0000000000000000 $t
     /tmp/ccIr5YrL.s:1109   .text.USBD_LL_StallEP:0000000000000000 USBD_LL_StallEP
     /tmp/ccIr5YrL.s:1152   .text.USBD_LL_ClearStallEP:0000000000000000 $t
     /tmp/ccIr5YrL.s:1157   .text.USBD_LL_ClearStallEP:0000000000000000 USBD_LL_ClearStallEP
     /tmp/ccIr5YrL.s:1200   .text.USBD_LL_IsStallEP:0000000000000000 $t
     /tmp/ccIr5YrL.s:1205   .text.USBD_LL_IsStallEP:0000000000000000 USBD_LL_IsStallEP
     /tmp/ccIr5YrL.s:1277   .text.USBD_LL_SetUSBAddress:0000000000000000 $t
ARM GAS  /tmp/ccIr5YrL.s 			page 41


     /tmp/ccIr5YrL.s:1282   .text.USBD_LL_SetUSBAddress:0000000000000000 USBD_LL_SetUSBAddress
     /tmp/ccIr5YrL.s:1325   .text.USBD_LL_Transmit:0000000000000000 $t
     /tmp/ccIr5YrL.s:1330   .text.USBD_LL_Transmit:0000000000000000 USBD_LL_Transmit
     /tmp/ccIr5YrL.s:1377   .text.USBD_LL_PrepareReceive:0000000000000000 $t
     /tmp/ccIr5YrL.s:1382   .text.USBD_LL_PrepareReceive:0000000000000000 USBD_LL_PrepareReceive
     /tmp/ccIr5YrL.s:1429   .text.USBD_LL_GetRxDataSize:0000000000000000 $t
     /tmp/ccIr5YrL.s:1434   .text.USBD_LL_GetRxDataSize:0000000000000000 USBD_LL_GetRxDataSize
     /tmp/ccIr5YrL.s:1476   .text.USBD_LL_Delay:0000000000000000 $t
     /tmp/ccIr5YrL.s:1481   .text.USBD_LL_Delay:0000000000000000 USBD_LL_Delay
     /tmp/ccIr5YrL.s:1516   .text.USBD_static_malloc:0000000000000000 $t
     /tmp/ccIr5YrL.s:1521   .text.USBD_static_malloc:0000000000000000 USBD_static_malloc
     /tmp/ccIr5YrL.s:1558   .text.USBD_static_malloc:0000000000000018 $d
     /tmp/ccIr5YrL.s:1676   .bss.mem.8789:0000000000000000 mem.8789
     /tmp/ccIr5YrL.s:1563   .text.USBD_static_free:0000000000000000 $t
     /tmp/ccIr5YrL.s:1568   .text.USBD_static_free:0000000000000000 USBD_static_free
     /tmp/ccIr5YrL.s:1603   .text.SystemClockConfig_Resume:0000000000000000 $t
     /tmp/ccIr5YrL.s:1630   .text.HAL_PCDEx_SetConnectionState:0000000000000000 $t
     /tmp/ccIr5YrL.s:1635   .text.HAL_PCDEx_SetConnectionState:0000000000000000 HAL_PCDEx_SetConnectionState
     /tmp/ccIr5YrL.s:1673   .bss.mem.8789:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
USBD_LL_SetupStage
USBD_LL_DataOutStage
USBD_LL_DataInStage
USBD_LL_SOF
USBD_LL_SetSpeed
USBD_LL_Reset
USBD_LL_Suspend
USBD_LL_Resume
USBD_LL_IsoOUTIncomplete
USBD_LL_IsoINIncomplete
USBD_LL_DevConnected
USBD_LL_DevDisconnected
HAL_PCD_Init
HAL_PCDEx_PMAConfig
HAL_PCD_DeInit
HAL_PCD_Start
HAL_PCD_Stop
HAL_PCD_EP_Open
HAL_PCD_EP_Close
HAL_PCD_EP_Flush
HAL_PCD_EP_SetStall
HAL_PCD_EP_ClrStall
HAL_PCD_SetAddress
HAL_PCD_EP_Transmit
HAL_PCD_EP_Receive
HAL_PCD_EP_GetRxCount
HAL_Delay
free
SystemClock_Config
