ARM GAS  /tmp/cckWdj4u.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"stm32f3xx_hal_uart.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.HAL_UART_Init,"ax",%progbits
  21              		.align	2
  22              		.global	HAL_UART_Init
  23              		.thumb
  24              		.thumb_func
  26              	HAL_UART_Init:
  27              	.LFB112:
  28              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @file    stm32f3xx_hal_uart.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @version V1.1.0
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @date    12-Sept-2014
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief   UART HAL module driver.
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Initialization and de-initialization functions
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + IO operation functions
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Peripheral Control functions
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   @verbatim       
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                         ##### How to use this driver #####
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit ()API:
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (##) UART pins configuration:
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+) Enable the clock for the UART GPIOs.
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+) Configure these UART pins as alternate function pull-up.
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
ARM GAS  /tmp/cckWdj4u.s 			page 2


  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+) Configure the USARTx interrupt priority.
  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+) Enable the NVIC USART IRQ handle.
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (@) The specific UART interrupts (Transmission complete interrupt, 
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                 RXNE interrupt and Error Interrupts) will be managed using the macros
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                 __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit and receive 
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+) Declare a DMA handle structure for the Tx/Rx channel.
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+) Enable the DMAx interface clock.
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+) Configure the declared DMA handle structure with the required Tx/Rx parameters.    
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+) Configure the DMA Tx/Rx channel.
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+) Associate the initilalized DMA handle to the UART DMA Tx/Rx handle.
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+) Configure the priority and enable the NVIC for the transfer complete interrupt on t
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length , Stop Bit, Parity, Hardware 
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the huart Init structure.
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         in the huart AdvancedInit structure.
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         the HAL_UART_Init() API.
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling 
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers 
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_LIN_Init() API. 
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers 
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API. 
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers 
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.                                  
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (@) These API's(HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Init
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         also configure also the low level Hardware GPIO, CLOCK, CORTEX...etc) by 
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   @endverbatim
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @attention
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2014 STMicroelectronics</center></h2>
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      without specific prior written permission.
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
ARM GAS  /tmp/cckWdj4u.s 			page 3


  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************  
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #include "stm32f3xx_hal.h"
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @addtogroup STM32F3xx_HAL_Driver
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART UART HAL module driver
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART HAL module driver
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #define HAL_UART_TXDMA_TIMEOUTVALUE                      22000
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8))
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma); 
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions 
ARM GAS  /tmp/cckWdj4u.s 			page 4


 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim    
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** ===============================================================================
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================  
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy 
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     in asynchronous mode.
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured: 
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Baud Rate
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Word Length 
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Stop Bit
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits)
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              or by the M1 and M0 bits (7-bit, 8-bit or 9-bit),
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              the possible UART frame formats are as listed in the following table:
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    +---------------------------------------------------------------+     
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    |    M bit  |  PCE bit  |            UART frame                 |
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    |-----------|-----------|---------------------------------------|             
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    |     0     |     0     |    | SB | 8-bit data | STB |          |
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    |-----------|-----------|---------------------------------------|  
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    |     0     |     1     |    | SB | 7-bit data | PB | STB |     |
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    |-----------|-----------|---------------------------------------|  
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    |     1     |     0     |    | SB | 9-bit data | STB |          |
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    |-----------|-----------|---------------------------------------|  
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    |     1     |     1     |    | SB | 8-bit data | PB | STB |     |
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    +---------------------------------------------------------------+     
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    | M1M0 bits |  PCE bit  |            UART frame                 |
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    |-----------------------|---------------------------------------|             
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    |     10    |     0     |    | SB | 7-bit data | STB |          |
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    |-----------|-----------|---------------------------------------|  
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    |     10    |     1     |    | SB | 6-bit data | PB | STB |     |   
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    +---------------------------------------------------------------+            
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Hardware flow control
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Receiver/transmitter modes
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Over Sampling Method
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) One-Bit Sampling Method
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) data logical level inversion
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) RX and TX pins swap
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) RX overrun detection disabling
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) DMA disabling on RX error
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) MSB first on communication line
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) auto Baud rate detection
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() 
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     API follow respectively the UART asynchronous, UART Half duplex, UART LIN mode and 
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     multiprocessor configuration procedures (details for the procedures are available in reference 
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initializes the UART mode according to the specified
ARM GAS  /tmp/cckWdj4u.s 			page 5


 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle .
 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: uart handle
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
  29              		.loc 1 207 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
  45              		.loc 1 209 0
  46 0008 7B68     		ldr	r3, [r7, #4]
  47 000a 002B     		cmp	r3, #0
  48 000c 01D1     		bne	.L2
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
  49              		.loc 1 211 0
  50 000e 0123     		movs	r3, #1
  51 0010 3EE0     		b	.L3
  52              	.L2:
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check the parameters */
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check the parameters */
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_RESET)
  53              		.loc 1 225 0
  54 0012 7B68     		ldr	r3, [r7, #4]
  55 0014 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
  56 0018 002B     		cmp	r3, #0
  57 001a 02D1     		bne	.L4
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {   
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  58              		.loc 1 228 0
ARM GAS  /tmp/cckWdj4u.s 			page 6


  59 001c 7868     		ldr	r0, [r7, #4]
  60 001e FFF7FEFF 		bl	HAL_UART_MspInit
  61              	.L4:
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
  62              		.loc 1 231 0
  63 0022 7B68     		ldr	r3, [r7, #4]
  64 0024 0222     		movs	r2, #2
  65 0026 83F86920 		strb	r2, [r3, #105]
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  66              		.loc 1 234 0
  67 002a 7B68     		ldr	r3, [r7, #4]
  68 002c 1B68     		ldr	r3, [r3]
  69 002e 7A68     		ldr	r2, [r7, #4]
  70 0030 1268     		ldr	r2, [r2]
  71 0032 1268     		ldr	r2, [r2]
  72 0034 22F00102 		bic	r2, r2, #1
  73 0038 1A60     		str	r2, [r3]
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
  74              		.loc 1 237 0
  75 003a 7868     		ldr	r0, [r7, #4]
  76 003c FFF7FEFF 		bl	UART_SetConfig
  77 0040 0346     		mov	r3, r0
  78 0042 012B     		cmp	r3, #1
  79 0044 01D1     		bne	.L5
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
  80              		.loc 1 239 0
  81 0046 0123     		movs	r3, #1
  82 0048 22E0     		b	.L3
  83              	.L5:
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }  
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
  84              		.loc 1 242 0
  85 004a 7B68     		ldr	r3, [r7, #4]
  86 004c 5B6A     		ldr	r3, [r3, #36]
  87 004e 002B     		cmp	r3, #0
  88 0050 02D0     		beq	.L6
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
  89              		.loc 1 244 0
  90 0052 7868     		ldr	r0, [r7, #4]
  91 0054 FFF7FEFF 		bl	UART_AdvFeatureConfig
  92              	.L6:
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared: 
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR2 &= ~(USART_CR2_LINEN | USART_CR2_CLKEN); 
  93              		.loc 1 250 0
ARM GAS  /tmp/cckWdj4u.s 			page 7


  94 0058 7B68     		ldr	r3, [r7, #4]
  95 005a 1B68     		ldr	r3, [r3]
  96 005c 7A68     		ldr	r2, [r7, #4]
  97 005e 1268     		ldr	r2, [r2]
  98 0060 5268     		ldr	r2, [r2, #4]
  99 0062 22F49042 		bic	r2, r2, #18432
 100 0066 5A60     		str	r2, [r3, #4]
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 &= ~(USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN); 
 101              		.loc 1 251 0
 102 0068 7B68     		ldr	r3, [r7, #4]
 103 006a 1B68     		ldr	r3, [r3]
 104 006c 7A68     		ldr	r2, [r7, #4]
 105 006e 1268     		ldr	r2, [r2]
 106 0070 9268     		ldr	r2, [r2, #8]
 107 0072 22F02A02 		bic	r2, r2, #42
 108 0076 9A60     		str	r2, [r3, #8]
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 109              		.loc 1 254 0
 110 0078 7B68     		ldr	r3, [r7, #4]
 111 007a 1B68     		ldr	r3, [r3]
 112 007c 7A68     		ldr	r2, [r7, #4]
 113 007e 1268     		ldr	r2, [r2]
 114 0080 1268     		ldr	r2, [r2]
 115 0082 42F00102 		orr	r2, r2, #1
 116 0086 1A60     		str	r2, [r3]
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->State to Ready */
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 117              		.loc 1 257 0
 118 0088 7868     		ldr	r0, [r7, #4]
 119 008a FFF7FEFF 		bl	UART_CheckIdleState
 120 008e 0346     		mov	r3, r0
 121              	.L3:
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 122              		.loc 1 258 0
 123 0090 1846     		mov	r0, r3
 124 0092 0837     		adds	r7, r7, #8
 125              	.LCFI3:
 126              		.cfi_def_cfa_offset 8
 127 0094 BD46     		mov	sp, r7
 128              	.LCFI4:
 129              		.cfi_def_cfa_register 13
 130              		@ sp needed
 131 0096 80BD     		pop	{r7, pc}
 132              		.cfi_endproc
 133              	.LFE112:
 135              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 136              		.align	2
 137              		.global	HAL_HalfDuplex_Init
 138              		.thumb
 139              		.thumb_func
 141              	HAL_HalfDuplex_Init:
 142              	.LFB113:
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
ARM GAS  /tmp/cckWdj4u.s 			page 8


 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initializes the half-duplex mode according to the specified
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle .
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: uart handle
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 143              		.loc 1 267 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 8
 146              		@ frame_needed = 1, uses_anonymous_args = 0
 147 0000 80B5     		push	{r7, lr}
 148              	.LCFI5:
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 7, -8
 151              		.cfi_offset 14, -4
 152 0002 82B0     		sub	sp, sp, #8
 153              	.LCFI6:
 154              		.cfi_def_cfa_offset 16
 155 0004 00AF     		add	r7, sp, #0
 156              	.LCFI7:
 157              		.cfi_def_cfa_register 7
 158 0006 7860     		str	r0, [r7, #4]
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 159              		.loc 1 269 0
 160 0008 7B68     		ldr	r3, [r7, #4]
 161 000a 002B     		cmp	r3, #0
 162 000c 01D1     		bne	.L8
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 163              		.loc 1 271 0
 164 000e 0123     		movs	r3, #1
 165 0010 46E0     		b	.L9
 166              	.L8:
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check UART instance */
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_RESET)
 167              		.loc 1 277 0
 168 0012 7B68     		ldr	r3, [r7, #4]
 169 0014 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 170 0018 002B     		cmp	r3, #0
 171 001a 02D1     		bne	.L10
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {   
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 172              		.loc 1 280 0
 173 001c 7868     		ldr	r0, [r7, #4]
 174 001e FFF7FEFF 		bl	HAL_UART_MspInit
 175              	.L10:
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 176              		.loc 1 283 0
ARM GAS  /tmp/cckWdj4u.s 			page 9


 177 0022 7B68     		ldr	r3, [r7, #4]
 178 0024 0222     		movs	r2, #2
 179 0026 83F86920 		strb	r2, [r3, #105]
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 180              		.loc 1 286 0
 181 002a 7B68     		ldr	r3, [r7, #4]
 182 002c 1B68     		ldr	r3, [r3]
 183 002e 7A68     		ldr	r2, [r7, #4]
 184 0030 1268     		ldr	r2, [r2]
 185 0032 1268     		ldr	r2, [r2]
 186 0034 22F00102 		bic	r2, r2, #1
 187 0038 1A60     		str	r2, [r3]
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 188              		.loc 1 289 0
 189 003a 7868     		ldr	r0, [r7, #4]
 190 003c FFF7FEFF 		bl	UART_SetConfig
 191 0040 0346     		mov	r3, r0
 192 0042 012B     		cmp	r3, #1
 193 0044 01D1     		bne	.L11
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 194              		.loc 1 291 0
 195 0046 0123     		movs	r3, #1
 196 0048 2AE0     		b	.L9
 197              	.L11:
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   } 
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 198              		.loc 1 294 0
 199 004a 7B68     		ldr	r3, [r7, #4]
 200 004c 5B6A     		ldr	r3, [r3, #36]
 201 004e 002B     		cmp	r3, #0
 202 0050 02D0     		beq	.L12
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 203              		.loc 1 296 0
 204 0052 7868     		ldr	r0, [r7, #4]
 205 0054 FFF7FEFF 		bl	UART_AdvFeatureConfig
 206              	.L12:
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared: 
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR2 &= ~(USART_CR2_LINEN | USART_CR2_CLKEN);
 207              		.loc 1 302 0
 208 0058 7B68     		ldr	r3, [r7, #4]
 209 005a 1B68     		ldr	r3, [r3]
 210 005c 7A68     		ldr	r2, [r7, #4]
 211 005e 1268     		ldr	r2, [r2]
 212 0060 5268     		ldr	r2, [r2, #4]
 213 0062 22F49042 		bic	r2, r2, #18432
 214 0066 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/cckWdj4u.s 			page 10


 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 &= ~(USART_CR3_IREN | USART_CR3_SCEN);
 215              		.loc 1 303 0
 216 0068 7B68     		ldr	r3, [r7, #4]
 217 006a 1B68     		ldr	r3, [r3]
 218 006c 7A68     		ldr	r2, [r7, #4]
 219 006e 1268     		ldr	r2, [r2]
 220 0070 9268     		ldr	r2, [r2, #8]
 221 0072 22F02202 		bic	r2, r2, #34
 222 0076 9A60     		str	r2, [r3, #8]
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 |= USART_CR3_HDSEL;
 223              		.loc 1 306 0
 224 0078 7B68     		ldr	r3, [r7, #4]
 225 007a 1B68     		ldr	r3, [r3]
 226 007c 7A68     		ldr	r2, [r7, #4]
 227 007e 1268     		ldr	r2, [r2]
 228 0080 9268     		ldr	r2, [r2, #8]
 229 0082 42F00802 		orr	r2, r2, #8
 230 0086 9A60     		str	r2, [r3, #8]
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 231              		.loc 1 309 0
 232 0088 7B68     		ldr	r3, [r7, #4]
 233 008a 1B68     		ldr	r3, [r3]
 234 008c 7A68     		ldr	r2, [r7, #4]
 235 008e 1268     		ldr	r2, [r2]
 236 0090 1268     		ldr	r2, [r2]
 237 0092 42F00102 		orr	r2, r2, #1
 238 0096 1A60     		str	r2, [r3]
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->State to Ready */
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 239              		.loc 1 312 0
 240 0098 7868     		ldr	r0, [r7, #4]
 241 009a FFF7FEFF 		bl	UART_CheckIdleState
 242 009e 0346     		mov	r3, r0
 243              	.L9:
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 244              		.loc 1 313 0
 245 00a0 1846     		mov	r0, r3
 246 00a2 0837     		adds	r7, r7, #8
 247              	.LCFI8:
 248              		.cfi_def_cfa_offset 8
 249 00a4 BD46     		mov	sp, r7
 250              	.LCFI9:
 251              		.cfi_def_cfa_register 13
 252              		@ sp needed
 253 00a6 80BD     		pop	{r7, pc}
 254              		.cfi_endproc
 255              	.LFE113:
 257              		.section	.text.HAL_LIN_Init,"ax",%progbits
 258              		.align	2
 259              		.global	HAL_LIN_Init
 260              		.thumb
 261              		.thumb_func
ARM GAS  /tmp/cckWdj4u.s 			page 11


 263              	HAL_LIN_Init:
 264              	.LFB114:
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initializes the LIN mode according to the specified
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle .
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: uart handle
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param BreakDetectLength: specifies the LIN break detection length.
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        This parameter can be one of the following values:
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 265              		.loc 1 327 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 8
 268              		@ frame_needed = 1, uses_anonymous_args = 0
 269 0000 80B5     		push	{r7, lr}
 270              	.LCFI10:
 271              		.cfi_def_cfa_offset 8
 272              		.cfi_offset 7, -8
 273              		.cfi_offset 14, -4
 274 0002 82B0     		sub	sp, sp, #8
 275              	.LCFI11:
 276              		.cfi_def_cfa_offset 16
 277 0004 00AF     		add	r7, sp, #0
 278              	.LCFI12:
 279              		.cfi_def_cfa_register 7
 280 0006 7860     		str	r0, [r7, #4]
 281 0008 3960     		str	r1, [r7]
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 282              		.loc 1 329 0
 283 000a 7B68     		ldr	r3, [r7, #4]
 284 000c 002B     		cmp	r3, #0
 285 000e 01D1     		bne	.L14
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 286              		.loc 1 331 0
 287 0010 0123     		movs	r3, #1
 288 0012 57E0     		b	.L15
 289              	.L14:
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the LIN UART instance */  
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the Break detection length parameter */
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 290              		.loc 1 340 0
 291 0014 7B68     		ldr	r3, [r7, #4]
 292 0016 DB69     		ldr	r3, [r3, #28]
ARM GAS  /tmp/cckWdj4u.s 			page 12


 293 0018 B3F5004F 		cmp	r3, #32768
 294 001c 01D1     		bne	.L16
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 295              		.loc 1 342 0
 296 001e 0123     		movs	r3, #1
 297 0020 50E0     		b	.L15
 298              	.L16:
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_RESET)
 299              		.loc 1 345 0
 300 0022 7B68     		ldr	r3, [r7, #4]
 301 0024 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 302 0028 002B     		cmp	r3, #0
 303 002a 02D1     		bne	.L17
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {   
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 304              		.loc 1 348 0
 305 002c 7868     		ldr	r0, [r7, #4]
 306 002e FFF7FEFF 		bl	HAL_UART_MspInit
 307              	.L17:
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 308              		.loc 1 351 0
 309 0032 7B68     		ldr	r3, [r7, #4]
 310 0034 0222     		movs	r2, #2
 311 0036 83F86920 		strb	r2, [r3, #105]
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 312              		.loc 1 354 0
 313 003a 7B68     		ldr	r3, [r7, #4]
 314 003c 1B68     		ldr	r3, [r3]
 315 003e 7A68     		ldr	r2, [r7, #4]
 316 0040 1268     		ldr	r2, [r2]
 317 0042 1268     		ldr	r2, [r2]
 318 0044 22F00102 		bic	r2, r2, #1
 319 0048 1A60     		str	r2, [r3]
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 320              		.loc 1 357 0
 321 004a 7868     		ldr	r0, [r7, #4]
 322 004c FFF7FEFF 		bl	UART_SetConfig
 323 0050 0346     		mov	r3, r0
 324 0052 012B     		cmp	r3, #1
 325 0054 01D1     		bne	.L18
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 326              		.loc 1 359 0
 327 0056 0123     		movs	r3, #1
 328 0058 34E0     		b	.L15
 329              	.L18:
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   } 
ARM GAS  /tmp/cckWdj4u.s 			page 13


 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 330              		.loc 1 362 0
 331 005a 7B68     		ldr	r3, [r7, #4]
 332 005c 5B6A     		ldr	r3, [r3, #36]
 333 005e 002B     		cmp	r3, #0
 334 0060 02D0     		beq	.L19
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 335              		.loc 1 364 0
 336 0062 7868     		ldr	r0, [r7, #4]
 337 0064 FFF7FEFF 		bl	UART_AdvFeatureConfig
 338              	.L19:
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared: 
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR2 &= ~(USART_CR2_CLKEN);
 339              		.loc 1 370 0
 340 0068 7B68     		ldr	r3, [r7, #4]
 341 006a 1B68     		ldr	r3, [r3]
 342 006c 7A68     		ldr	r2, [r7, #4]
 343 006e 1268     		ldr	r2, [r2]
 344 0070 5268     		ldr	r2, [r2, #4]
 345 0072 22F40062 		bic	r2, r2, #2048
 346 0076 5A60     		str	r2, [r3, #4]
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 &= ~(USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN);
 347              		.loc 1 371 0
 348 0078 7B68     		ldr	r3, [r7, #4]
 349 007a 1B68     		ldr	r3, [r3]
 350 007c 7A68     		ldr	r2, [r7, #4]
 351 007e 1268     		ldr	r2, [r2]
 352 0080 9268     		ldr	r2, [r2, #8]
 353 0082 22F02A02 		bic	r2, r2, #42
 354 0086 9A60     		str	r2, [r3, #8]
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR2 |= USART_CR2_LINEN;
 355              		.loc 1 374 0
 356 0088 7B68     		ldr	r3, [r7, #4]
 357 008a 1B68     		ldr	r3, [r3]
 358 008c 7A68     		ldr	r2, [r7, #4]
 359 008e 1268     		ldr	r2, [r2]
 360 0090 5268     		ldr	r2, [r2, #4]
 361 0092 42F48042 		orr	r2, r2, #16384
 362 0096 5A60     		str	r2, [r3, #4]
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 363              		.loc 1 377 0
 364 0098 7B68     		ldr	r3, [r7, #4]
 365 009a 1B68     		ldr	r3, [r3]
 366 009c 7A68     		ldr	r2, [r7, #4]
 367 009e 1268     		ldr	r2, [r2]
 368 00a0 5268     		ldr	r2, [r2, #4]
 369 00a2 22F02001 		bic	r1, r2, #32
ARM GAS  /tmp/cckWdj4u.s 			page 14


 370 00a6 3A68     		ldr	r2, [r7]
 371 00a8 0A43     		orrs	r2, r2, r1
 372 00aa 5A60     		str	r2, [r3, #4]
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the Peripheral */
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 373              		.loc 1 380 0
 374 00ac 7B68     		ldr	r3, [r7, #4]
 375 00ae 1B68     		ldr	r3, [r3]
 376 00b0 7A68     		ldr	r2, [r7, #4]
 377 00b2 1268     		ldr	r2, [r2]
 378 00b4 1268     		ldr	r2, [r2]
 379 00b6 42F00102 		orr	r2, r2, #1
 380 00ba 1A60     		str	r2, [r3]
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->State to Ready */
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 381              		.loc 1 383 0
 382 00bc 7868     		ldr	r0, [r7, #4]
 383 00be FFF7FEFF 		bl	UART_CheckIdleState
 384 00c2 0346     		mov	r3, r0
 385              	.L15:
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 386              		.loc 1 384 0
 387 00c4 1846     		mov	r0, r3
 388 00c6 0837     		adds	r7, r7, #8
 389              	.LCFI13:
 390              		.cfi_def_cfa_offset 8
 391 00c8 BD46     		mov	sp, r7
 392              	.LCFI14:
 393              		.cfi_def_cfa_register 13
 394              		@ sp needed
 395 00ca 80BD     		pop	{r7, pc}
 396              		.cfi_endproc
 397              	.LFE114:
 399              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 400              		.align	2
 401              		.global	HAL_MultiProcessor_Init
 402              		.thumb
 403              		.thumb_func
 405              	HAL_MultiProcessor_Init:
 406              	.LFB115:
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initializes the multiprocessor mode according to the specified
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle.
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: UART handle   
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Address: UART node address (4-, 6-, 7- or 8-bit long)
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param WakeUpMethod: specifies the UART wakeup method.
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        This parameter can be one of the following values:
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg UART_WAKEUPMETHOD_IDLELINE: WakeUp by an idle line detection
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg UART_WAKEUPMETHOD_ADDRESSMARK: WakeUp by an address mark
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        is useless and ignored by the initialization function.               
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection 
ARM GAS  /tmp/cckWdj4u.s 			page 15


 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to 
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after 
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().                      
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 407              		.loc 1 407 0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 16
 410              		@ frame_needed = 1, uses_anonymous_args = 0
 411 0000 80B5     		push	{r7, lr}
 412              	.LCFI15:
 413              		.cfi_def_cfa_offset 8
 414              		.cfi_offset 7, -8
 415              		.cfi_offset 14, -4
 416 0002 84B0     		sub	sp, sp, #16
 417              	.LCFI16:
 418              		.cfi_def_cfa_offset 24
 419 0004 00AF     		add	r7, sp, #0
 420              	.LCFI17:
 421              		.cfi_def_cfa_register 7
 422 0006 F860     		str	r0, [r7, #12]
 423 0008 0B46     		mov	r3, r1
 424 000a 7A60     		str	r2, [r7, #4]
 425 000c FB72     		strb	r3, [r7, #11]
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 426              		.loc 1 409 0
 427 000e FB68     		ldr	r3, [r7, #12]
 428 0010 002B     		cmp	r3, #0
 429 0012 01D1     		bne	.L21
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 430              		.loc 1 411 0
 431 0014 0123     		movs	r3, #1
 432 0016 57E0     		b	.L22
 433              	.L21:
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the wake up method parameter */
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_RESET)
 434              		.loc 1 417 0
 435 0018 FB68     		ldr	r3, [r7, #12]
 436 001a 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 437 001e 002B     		cmp	r3, #0
 438 0020 02D1     		bne	.L23
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {   
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 439              		.loc 1 420 0
 440 0022 F868     		ldr	r0, [r7, #12]
 441 0024 FFF7FEFF 		bl	HAL_UART_MspInit
 442              	.L23:
ARM GAS  /tmp/cckWdj4u.s 			page 16


 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 443              		.loc 1 423 0
 444 0028 FB68     		ldr	r3, [r7, #12]
 445 002a 0222     		movs	r2, #2
 446 002c 83F86920 		strb	r2, [r3, #105]
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 447              		.loc 1 426 0
 448 0030 FB68     		ldr	r3, [r7, #12]
 449 0032 1B68     		ldr	r3, [r3]
 450 0034 FA68     		ldr	r2, [r7, #12]
 451 0036 1268     		ldr	r2, [r2]
 452 0038 1268     		ldr	r2, [r2]
 453 003a 22F00102 		bic	r2, r2, #1
 454 003e 1A60     		str	r2, [r3]
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 455              		.loc 1 429 0
 456 0040 F868     		ldr	r0, [r7, #12]
 457 0042 FFF7FEFF 		bl	UART_SetConfig
 458 0046 0346     		mov	r3, r0
 459 0048 012B     		cmp	r3, #1
 460 004a 01D1     		bne	.L24
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 461              		.loc 1 431 0
 462 004c 0123     		movs	r3, #1
 463 004e 3BE0     		b	.L22
 464              	.L24:
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   } 
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 465              		.loc 1 434 0
 466 0050 FB68     		ldr	r3, [r7, #12]
 467 0052 5B6A     		ldr	r3, [r3, #36]
 468 0054 002B     		cmp	r3, #0
 469 0056 02D0     		beq	.L25
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 470              		.loc 1 436 0
 471 0058 F868     		ldr	r0, [r7, #12]
 472 005a FFF7FEFF 		bl	UART_AdvFeatureConfig
 473              	.L25:
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared: 
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR2 &= ~(USART_CR2_LINEN | USART_CR2_CLKEN);
 474              		.loc 1 442 0
 475 005e FB68     		ldr	r3, [r7, #12]
 476 0060 1B68     		ldr	r3, [r3]
 477 0062 FA68     		ldr	r2, [r7, #12]
ARM GAS  /tmp/cckWdj4u.s 			page 17


 478 0064 1268     		ldr	r2, [r2]
 479 0066 5268     		ldr	r2, [r2, #4]
 480 0068 22F49042 		bic	r2, r2, #18432
 481 006c 5A60     		str	r2, [r3, #4]
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 &= ~(USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN);
 482              		.loc 1 443 0
 483 006e FB68     		ldr	r3, [r7, #12]
 484 0070 1B68     		ldr	r3, [r3]
 485 0072 FA68     		ldr	r2, [r7, #12]
 486 0074 1268     		ldr	r2, [r2]
 487 0076 9268     		ldr	r2, [r2, #8]
 488 0078 22F02A02 		bic	r2, r2, #42
 489 007c 9A60     		str	r2, [r3, #8]
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 490              		.loc 1 445 0
 491 007e 7B68     		ldr	r3, [r7, #4]
 492 0080 B3F5006F 		cmp	r3, #2048
 493 0084 0AD1     		bne	.L26
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 494              		.loc 1 448 0
 495 0086 FB68     		ldr	r3, [r7, #12]
 496 0088 1B68     		ldr	r3, [r3]
 497 008a FA68     		ldr	r2, [r7, #12]
 498 008c 1268     		ldr	r2, [r2]
 499 008e 5268     		ldr	r2, [r2, #4]
 500 0090 22F07F41 		bic	r1, r2, #-16777216
 501 0094 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 502 0096 1206     		lsls	r2, r2, #24
 503 0098 0A43     		orrs	r2, r2, r1
 504 009a 5A60     		str	r2, [r3, #4]
 505              	.L26:
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 506              		.loc 1 452 0
 507 009c FB68     		ldr	r3, [r7, #12]
 508 009e 1B68     		ldr	r3, [r3]
 509 00a0 FA68     		ldr	r2, [r7, #12]
 510 00a2 1268     		ldr	r2, [r2]
 511 00a4 1268     		ldr	r2, [r2]
 512 00a6 22F40061 		bic	r1, r2, #2048
 513 00aa 7A68     		ldr	r2, [r7, #4]
 514 00ac 0A43     		orrs	r2, r2, r1
 515 00ae 1A60     		str	r2, [r3]
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart); 
 516              		.loc 1 455 0
 517 00b0 FB68     		ldr	r3, [r7, #12]
 518 00b2 1B68     		ldr	r3, [r3]
 519 00b4 FA68     		ldr	r2, [r7, #12]
 520 00b6 1268     		ldr	r2, [r2]
 521 00b8 1268     		ldr	r2, [r2]
ARM GAS  /tmp/cckWdj4u.s 			page 18


 522 00ba 42F00102 		orr	r2, r2, #1
 523 00be 1A60     		str	r2, [r3]
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->State to Ready */
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 524              		.loc 1 458 0
 525 00c0 F868     		ldr	r0, [r7, #12]
 526 00c2 FFF7FEFF 		bl	UART_CheckIdleState
 527 00c6 0346     		mov	r3, r0
 528              	.L22:
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 529              		.loc 1 459 0
 530 00c8 1846     		mov	r0, r3
 531 00ca 1037     		adds	r7, r7, #16
 532              	.LCFI18:
 533              		.cfi_def_cfa_offset 8
 534 00cc BD46     		mov	sp, r7
 535              	.LCFI19:
 536              		.cfi_def_cfa_register 13
 537              		@ sp needed
 538 00ce 80BD     		pop	{r7, pc}
 539              		.cfi_endproc
 540              	.LFE115:
 542              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 543              		.align	2
 544              		.global	HAL_UART_DeInit
 545              		.thumb
 546              		.thumb_func
 548              	HAL_UART_DeInit:
 549              	.LFB116:
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DeInitializes the UART peripheral 
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: uart handle
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 550              		.loc 1 470 0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 8
 553              		@ frame_needed = 1, uses_anonymous_args = 0
 554 0000 80B5     		push	{r7, lr}
 555              	.LCFI20:
 556              		.cfi_def_cfa_offset 8
 557              		.cfi_offset 7, -8
 558              		.cfi_offset 14, -4
 559 0002 82B0     		sub	sp, sp, #8
 560              	.LCFI21:
 561              		.cfi_def_cfa_offset 16
 562 0004 00AF     		add	r7, sp, #0
 563              	.LCFI22:
 564              		.cfi_def_cfa_register 7
 565 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/cckWdj4u.s 			page 19


 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 566              		.loc 1 472 0
 567 0008 7B68     		ldr	r3, [r7, #4]
 568 000a 002B     		cmp	r3, #0
 569 000c 01D1     		bne	.L28
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 570              		.loc 1 474 0
 571 000e 0123     		movs	r3, #1
 572 0010 27E0     		b	.L29
 573              	.L28:
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 574              		.loc 1 480 0
 575 0012 7B68     		ldr	r3, [r7, #4]
 576 0014 0222     		movs	r2, #2
 577 0016 83F86920 		strb	r2, [r3, #105]
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 578              		.loc 1 483 0
 579 001a 7B68     		ldr	r3, [r7, #4]
 580 001c 1B68     		ldr	r3, [r3]
 581 001e 7A68     		ldr	r2, [r7, #4]
 582 0020 1268     		ldr	r2, [r2]
 583 0022 1268     		ldr	r2, [r2]
 584 0024 22F00102 		bic	r2, r2, #1
 585 0028 1A60     		str	r2, [r3]
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR1 = 0x0;
 586              		.loc 1 485 0
 587 002a 7B68     		ldr	r3, [r7, #4]
 588 002c 1B68     		ldr	r3, [r3]
 589 002e 0022     		movs	r2, #0
 590 0030 1A60     		str	r2, [r3]
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR2 = 0x0;
 591              		.loc 1 486 0
 592 0032 7B68     		ldr	r3, [r7, #4]
 593 0034 1B68     		ldr	r3, [r3]
 594 0036 0022     		movs	r2, #0
 595 0038 5A60     		str	r2, [r3, #4]
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 = 0x0;
 596              		.loc 1 487 0
 597 003a 7B68     		ldr	r3, [r7, #4]
 598 003c 1B68     		ldr	r3, [r3]
 599 003e 0022     		movs	r2, #0
 600 0040 9A60     		str	r2, [r3, #8]
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DeInit the low level hardware */
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 601              		.loc 1 490 0
 602 0042 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/cckWdj4u.s 			page 20


 603 0044 FFF7FEFF 		bl	HAL_UART_MspDeInit
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 604              		.loc 1 492 0
 605 0048 7B68     		ldr	r3, [r7, #4]
 606 004a 0022     		movs	r2, #0
 607 004c 83F86A20 		strb	r2, [r3, #106]
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->State = HAL_UART_STATE_RESET;
 608              		.loc 1 493 0
 609 0050 7B68     		ldr	r3, [r7, #4]
 610 0052 0022     		movs	r2, #0
 611 0054 83F86920 		strb	r2, [r3, #105]
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlock */
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 612              		.loc 1 496 0
 613 0058 7B68     		ldr	r3, [r7, #4]
 614 005a 0022     		movs	r2, #0
 615 005c 83F86820 		strb	r2, [r3, #104]
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 616              		.loc 1 498 0
 617 0060 0023     		movs	r3, #0
 618              	.L29:
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 619              		.loc 1 499 0
 620 0062 1846     		mov	r0, r3
 621 0064 0837     		adds	r7, r7, #8
 622              	.LCFI23:
 623              		.cfi_def_cfa_offset 8
 624 0066 BD46     		mov	sp, r7
 625              	.LCFI24:
 626              		.cfi_def_cfa_register 13
 627              		@ sp needed
 628 0068 80BD     		pop	{r7, pc}
 629              		.cfi_endproc
 630              	.LFE116:
 632 006a 00BF     		.section	.text.HAL_UART_MspInit,"ax",%progbits
 633              		.align	2
 634              		.weak	HAL_UART_MspInit
 635              		.thumb
 636              		.thumb_func
 638              	HAL_UART_MspInit:
 639              	.LFB117:
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART MSP Init
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: uart handle
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 640              		.loc 1 507 0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 8
 643              		@ frame_needed = 1, uses_anonymous_args = 0
 644              		@ link register save eliminated.
ARM GAS  /tmp/cckWdj4u.s 			page 21


 645 0000 80B4     		push	{r7}
 646              	.LCFI25:
 647              		.cfi_def_cfa_offset 4
 648              		.cfi_offset 7, -4
 649 0002 83B0     		sub	sp, sp, #12
 650              	.LCFI26:
 651              		.cfi_def_cfa_offset 16
 652 0004 00AF     		add	r7, sp, #0
 653              	.LCFI27:
 654              		.cfi_def_cfa_register 7
 655 0006 7860     		str	r0, [r7, #4]
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */ 
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 656              		.loc 1 511 0
 657 0008 00BF     		nop
 658 000a 0C37     		adds	r7, r7, #12
 659              	.LCFI28:
 660              		.cfi_def_cfa_offset 4
 661 000c BD46     		mov	sp, r7
 662              	.LCFI29:
 663              		.cfi_def_cfa_register 13
 664              		@ sp needed
 665 000e 5DF8047B 		ldr	r7, [sp], #4
 666              	.LCFI30:
 667              		.cfi_restore 7
 668              		.cfi_def_cfa_offset 0
 669 0012 7047     		bx	lr
 670              		.cfi_endproc
 671              	.LFE117:
 673              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 674              		.align	2
 675              		.weak	HAL_UART_MspDeInit
 676              		.thumb
 677              		.thumb_func
 679              	HAL_UART_MspDeInit:
 680              	.LFB118:
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART MSP DeInit
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: uart handle
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 681              		.loc 1 519 0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 8
 684              		@ frame_needed = 1, uses_anonymous_args = 0
 685              		@ link register save eliminated.
 686 0000 80B4     		push	{r7}
 687              	.LCFI31:
 688              		.cfi_def_cfa_offset 4
 689              		.cfi_offset 7, -4
 690 0002 83B0     		sub	sp, sp, #12
 691              	.LCFI32:
ARM GAS  /tmp/cckWdj4u.s 			page 22


 692              		.cfi_def_cfa_offset 16
 693 0004 00AF     		add	r7, sp, #0
 694              	.LCFI33:
 695              		.cfi_def_cfa_register 7
 696 0006 7860     		str	r0, [r7, #4]
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */ 
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 697              		.loc 1 523 0
 698 0008 00BF     		nop
 699 000a 0C37     		adds	r7, r7, #12
 700              	.LCFI34:
 701              		.cfi_def_cfa_offset 4
 702 000c BD46     		mov	sp, r7
 703              	.LCFI35:
 704              		.cfi_def_cfa_register 13
 705              		@ sp needed
 706 000e 5DF8047B 		ldr	r7, [sp], #4
 707              	.LCFI36:
 708              		.cfi_restore 7
 709              		.cfi_def_cfa_offset 0
 710 0012 7047     		bx	lr
 711              		.cfi_endproc
 712              	.LFE118:
 714              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 715              		.align	2
 716              		.global	HAL_UART_Transmit
 717              		.thumb
 718              		.thumb_func
 720              	HAL_UART_Transmit:
 721              	.LFB119:
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 Input and Output operation functions 
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  @brief UART Transmit/Receive functions 
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim   
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                       ##### I/O operation functions #####
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================  
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     and Half duplex data transfers.
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) There are two mode of transfer:
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode. 
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             The HAL status of all data processing is returned by the same function 
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             after finishing transfer.  
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) No-Blocking mode: The communication is performed using Interrupts 
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The end of the data processing will be indicated through the 
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when 
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            using DMA mode.
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks 
ARM GAS  /tmp/cckWdj4u.s 			page 23


 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            will be executed respectivelly at the end of the transmit or Receive process
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Blocking mode API's are :
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Receive() 
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) No-Blocking mode API's with DMA are :
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in No_Blocking mode:
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit 
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode 
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: uart handle
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData: pointer to data buffer
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size: amount of data to be sent
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Timeout : Timeout duration
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 722              		.loc 1 592 0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 24
 725              		@ frame_needed = 1, uses_anonymous_args = 0
 726 0000 80B5     		push	{r7, lr}
 727              	.LCFI37:
 728              		.cfi_def_cfa_offset 8
 729              		.cfi_offset 7, -8
 730              		.cfi_offset 14, -4
 731 0002 86B0     		sub	sp, sp, #24
 732              	.LCFI38:
 733              		.cfi_def_cfa_offset 32
 734 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/cckWdj4u.s 			page 24


 735              	.LCFI39:
 736              		.cfi_def_cfa_register 7
 737 0006 F860     		str	r0, [r7, #12]
 738 0008 B960     		str	r1, [r7, #8]
 739 000a 3B60     		str	r3, [r7]
 740 000c 1346     		mov	r3, r2	@ movhi
 741 000e FB80     		strh	r3, [r7, #6]	@ movhi
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    uint16_t* tmp; 
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((huart->State == HAL_UART_STATE_READY) || (huart->State == HAL_UART_STATE_BUSY_RX))
 742              		.loc 1 595 0
 743 0010 FB68     		ldr	r3, [r7, #12]
 744 0012 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 745 0016 012B     		cmp	r3, #1
 746 0018 05D0     		beq	.L33
 747              		.loc 1 595 0 is_stmt 0 discriminator 1
 748 001a FB68     		ldr	r3, [r7, #12]
 749 001c 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 750 0020 222B     		cmp	r3, #34
 751 0022 40F08480 		bne	.L34
 752              	.L33:
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 753              		.loc 1 597 0 is_stmt 1
 754 0026 BB68     		ldr	r3, [r7, #8]
 755 0028 002B     		cmp	r3, #0
 756 002a 02D0     		beq	.L35
 757              		.loc 1 597 0 is_stmt 0 discriminator 1
 758 002c FB88     		ldrh	r3, [r7, #6]
 759 002e 002B     		cmp	r3, #0
 760 0030 01D1     		bne	.L36
 761              	.L35:
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return  HAL_ERROR;
 762              		.loc 1 599 0 is_stmt 1
 763 0032 0123     		movs	r3, #1
 764 0034 7CE0     		b	.L37
 765              	.L36:
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 766              		.loc 1 603 0
 767 0036 FB68     		ldr	r3, [r7, #12]
 768 0038 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 769 003c 012B     		cmp	r3, #1
 770 003e 01D1     		bne	.L38
 771              		.loc 1 603 0 is_stmt 0 discriminator 1
 772 0040 0223     		movs	r3, #2
 773 0042 75E0     		b	.L37
 774              	.L38:
 775              		.loc 1 603 0 discriminator 2
 776 0044 FB68     		ldr	r3, [r7, #12]
 777 0046 0122     		movs	r2, #1
 778 0048 83F86820 		strb	r2, [r3, #104]
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  /tmp/cckWdj4u.s 			page 25


 779              		.loc 1 605 0 is_stmt 1 discriminator 2
 780 004c FB68     		ldr	r3, [r7, #12]
 781 004e 0022     		movs	r2, #0
 782 0050 83F86A20 		strb	r2, [r3, #106]
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check if a non-blocking receive process is ongoing or not */
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_RX) 
 783              		.loc 1 607 0 discriminator 2
 784 0054 FB68     		ldr	r3, [r7, #12]
 785 0056 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 786 005a 222B     		cmp	r3, #34
 787 005c 04D1     		bne	.L39
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX_RX;
 788              		.loc 1 609 0
 789 005e FB68     		ldr	r3, [r7, #12]
 790 0060 3222     		movs	r2, #50
 791 0062 83F86920 		strb	r2, [r3, #105]
 792 0066 03E0     		b	.L40
 793              	.L39:
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX;
 794              		.loc 1 613 0
 795 0068 FB68     		ldr	r3, [r7, #12]
 796 006a 1222     		movs	r2, #18
 797 006c 83F86920 		strb	r2, [r3, #105]
 798              	.L40:
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 799              		.loc 1 616 0
 800 0070 FB68     		ldr	r3, [r7, #12]
 801 0072 FA88     		ldrh	r2, [r7, #6]	@ movhi
 802 0074 A3F85020 		strh	r2, [r3, #80]	@ movhi
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 803              		.loc 1 617 0
 804 0078 FB68     		ldr	r3, [r7, #12]
 805 007a FA88     		ldrh	r2, [r7, #6]	@ movhi
 806 007c A3F85220 		strh	r2, [r3, #82]	@ movhi
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while(huart->TxXferCount > 0)
 807              		.loc 1 618 0
 808 0080 31E0     		b	.L41
 809              	.L44:
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount--;
 810              		.loc 1 620 0
 811 0082 FB68     		ldr	r3, [r7, #12]
 812 0084 B3F85230 		ldrh	r3, [r3, #82]
 813 0088 013B     		subs	r3, r3, #1
 814 008a 9AB2     		uxth	r2, r3
 815 008c FB68     		ldr	r3, [r7, #12]
 816 008e A3F85220 		strh	r2, [r3, #82]	@ movhi
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, Timeout) != HAL_OK)  
 817              		.loc 1 621 0
 818 0092 3B68     		ldr	r3, [r7]
 819 0094 0022     		movs	r2, #0
ARM GAS  /tmp/cckWdj4u.s 			page 26


 820 0096 8021     		movs	r1, #128
 821 0098 F868     		ldr	r0, [r7, #12]
 822 009a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 823 009e 0346     		mov	r3, r0
 824 00a0 002B     		cmp	r3, #0
 825 00a2 01D0     		beq	.L42
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       { 
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
 826              		.loc 1 623 0
 827 00a4 0323     		movs	r3, #3
 828 00a6 43E0     		b	.L37
 829              	.L42:
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }      
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 830              		.loc 1 625 0
 831 00a8 FB68     		ldr	r3, [r7, #12]
 832 00aa 9B68     		ldr	r3, [r3, #8]
 833 00ac B3F5805F 		cmp	r3, #4096
 834 00b0 11D1     		bne	.L43
 835              		.loc 1 625 0 is_stmt 0 discriminator 1
 836 00b2 FB68     		ldr	r3, [r7, #12]
 837 00b4 1B69     		ldr	r3, [r3, #16]
 838 00b6 002B     		cmp	r3, #0
 839 00b8 0DD1     		bne	.L43
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 840              		.loc 1 627 0 is_stmt 1
 841 00ba BB68     		ldr	r3, [r7, #8]
 842 00bc 7B61     		str	r3, [r7, #20]
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FF);
 843              		.loc 1 628 0
 844 00be FB68     		ldr	r3, [r7, #12]
 845 00c0 1B68     		ldr	r3, [r3]
 846 00c2 7A69     		ldr	r2, [r7, #20]
 847 00c4 1288     		ldrh	r2, [r2]
 848 00c6 C2F30802 		ubfx	r2, r2, #0, #9
 849 00ca 92B2     		uxth	r2, r2
 850 00cc 1A85     		strh	r2, [r3, #40]	@ movhi
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData += 2;
 851              		.loc 1 629 0
 852 00ce BB68     		ldr	r3, [r7, #8]
 853 00d0 0233     		adds	r3, r3, #2
 854 00d2 BB60     		str	r3, [r7, #8]
 855 00d4 07E0     		b	.L41
 856              	.L43:
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       } 
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFF);
 857              		.loc 1 633 0
 858 00d6 FB68     		ldr	r3, [r7, #12]
 859 00d8 1A68     		ldr	r2, [r3]
 860 00da BB68     		ldr	r3, [r7, #8]
 861 00dc 591C     		adds	r1, r3, #1
 862 00de B960     		str	r1, [r7, #8]
 863 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 864 00e2 9BB2     		uxth	r3, r3
ARM GAS  /tmp/cckWdj4u.s 			page 27


 865 00e4 1385     		strh	r3, [r2, #40]	@ movhi
 866              	.L41:
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 867              		.loc 1 618 0
 868 00e6 FB68     		ldr	r3, [r7, #12]
 869 00e8 B3F85230 		ldrh	r3, [r3, #82]
 870 00ec 002B     		cmp	r3, #0
 871 00ee C8D1     		bne	.L44
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, Timeout) != HAL_OK)  
 872              		.loc 1 636 0
 873 00f0 3B68     		ldr	r3, [r7]
 874 00f2 0022     		movs	r2, #0
 875 00f4 4021     		movs	r1, #64
 876 00f6 F868     		ldr	r0, [r7, #12]
 877 00f8 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 878 00fc 0346     		mov	r3, r0
 879 00fe 002B     		cmp	r3, #0
 880 0100 01D0     		beq	.L45
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     { 
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
 881              		.loc 1 638 0
 882 0102 0323     		movs	r3, #3
 883 0104 14E0     		b	.L37
 884              	.L45:
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check if a non-blocking receive Process is ongoing or not */
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
 885              		.loc 1 641 0
 886 0106 FB68     		ldr	r3, [r7, #12]
 887 0108 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 888 010c 322B     		cmp	r3, #50
 889 010e 04D1     		bne	.L46
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_RX;
 890              		.loc 1 643 0
 891 0110 FB68     		ldr	r3, [r7, #12]
 892 0112 2222     		movs	r2, #34
 893 0114 83F86920 		strb	r2, [r3, #105]
 894 0118 03E0     		b	.L47
 895              	.L46:
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->State = HAL_UART_STATE_READY;
 896              		.loc 1 647 0
 897 011a FB68     		ldr	r3, [r7, #12]
 898 011c 0122     		movs	r2, #1
 899 011e 83F86920 		strb	r2, [r3, #105]
 900              	.L47:
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 901              		.loc 1 651 0
 902 0122 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cckWdj4u.s 			page 28


 903 0124 0022     		movs	r2, #0
 904 0126 83F86820 		strb	r2, [r3, #104]
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 905              		.loc 1 653 0
 906 012a 0023     		movs	r3, #0
 907 012c 00E0     		b	.L37
 908              	.L34:
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 909              		.loc 1 657 0
 910 012e 0223     		movs	r3, #2
 911              	.L37:
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 912              		.loc 1 659 0
 913 0130 1846     		mov	r0, r3
 914 0132 1837     		adds	r7, r7, #24
 915              	.LCFI40:
 916              		.cfi_def_cfa_offset 8
 917 0134 BD46     		mov	sp, r7
 918              	.LCFI41:
 919              		.cfi_def_cfa_register 13
 920              		@ sp needed
 921 0136 80BD     		pop	{r7, pc}
 922              		.cfi_endproc
 923              	.LFE119:
 925              		.section	.text.HAL_UART_Receive,"ax",%progbits
 926              		.align	2
 927              		.global	HAL_UART_Receive
 928              		.thumb
 929              		.thumb_func
 931              	HAL_UART_Receive:
 932              	.LFB120:
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode 
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: uart handle
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData: pointer to data buffer
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size: amount of data to be received
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Timeout : Timeout duration
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** { 
 933              		.loc 1 670 0
 934              		.cfi_startproc
 935              		@ args = 0, pretend = 0, frame = 24
 936              		@ frame_needed = 1, uses_anonymous_args = 0
 937 0000 80B5     		push	{r7, lr}
 938              	.LCFI42:
 939              		.cfi_def_cfa_offset 8
 940              		.cfi_offset 7, -8
 941              		.cfi_offset 14, -4
 942 0002 86B0     		sub	sp, sp, #24
ARM GAS  /tmp/cckWdj4u.s 			page 29


 943              	.LCFI43:
 944              		.cfi_def_cfa_offset 32
 945 0004 00AF     		add	r7, sp, #0
 946              	.LCFI44:
 947              		.cfi_def_cfa_register 7
 948 0006 F860     		str	r0, [r7, #12]
 949 0008 B960     		str	r1, [r7, #8]
 950 000a 3B60     		str	r3, [r7]
 951 000c 1346     		mov	r3, r2	@ movhi
 952 000e FB80     		strh	r3, [r7, #6]	@ movhi
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;         
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t uhMask;
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((huart->State == HAL_UART_STATE_READY) || (huart->State == HAL_UART_STATE_BUSY_TX))
 953              		.loc 1 674 0
 954 0010 FB68     		ldr	r3, [r7, #12]
 955 0012 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 956 0016 012B     		cmp	r3, #1
 957 0018 05D0     		beq	.L49
 958              		.loc 1 674 0 is_stmt 0 discriminator 1
 959 001a FB68     		ldr	r3, [r7, #12]
 960 001c 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 961 0020 122B     		cmp	r3, #18
 962 0022 40F0A880 		bne	.L50
 963              	.L49:
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   { 
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 964              		.loc 1 676 0 is_stmt 1
 965 0026 BB68     		ldr	r3, [r7, #8]
 966 0028 002B     		cmp	r3, #0
 967 002a 02D0     		beq	.L51
 968              		.loc 1 676 0 is_stmt 0 discriminator 1
 969 002c FB88     		ldrh	r3, [r7, #6]
 970 002e 002B     		cmp	r3, #0
 971 0030 01D1     		bne	.L52
 972              	.L51:
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return  HAL_ERROR;                                    
 973              		.loc 1 678 0 is_stmt 1
 974 0032 0123     		movs	r3, #1
 975 0034 A0E0     		b	.L53
 976              	.L52:
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 977              		.loc 1 682 0
 978 0036 FB68     		ldr	r3, [r7, #12]
 979 0038 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 980 003c 012B     		cmp	r3, #1
 981 003e 01D1     		bne	.L54
 982              		.loc 1 682 0 is_stmt 0 discriminator 1
 983 0040 0223     		movs	r3, #2
 984 0042 99E0     		b	.L53
 985              	.L54:
 986              		.loc 1 682 0 discriminator 2
 987 0044 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cckWdj4u.s 			page 30


 988 0046 0122     		movs	r2, #1
 989 0048 83F86820 		strb	r2, [r3, #104]
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 990              		.loc 1 684 0 is_stmt 1 discriminator 2
 991 004c FB68     		ldr	r3, [r7, #12]
 992 004e 0022     		movs	r2, #0
 993 0050 83F86A20 		strb	r2, [r3, #106]
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check if a non-blocking transmit process is ongoing or not */
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_TX) 
 994              		.loc 1 686 0 discriminator 2
 995 0054 FB68     		ldr	r3, [r7, #12]
 996 0056 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 997 005a 122B     		cmp	r3, #18
 998 005c 04D1     		bne	.L55
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX_RX;
 999              		.loc 1 688 0
 1000 005e FB68     		ldr	r3, [r7, #12]
 1001 0060 3222     		movs	r2, #50
 1002 0062 83F86920 		strb	r2, [r3, #105]
 1003 0066 03E0     		b	.L56
 1004              	.L55:
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_RX;
 1005              		.loc 1 692 0
 1006 0068 FB68     		ldr	r3, [r7, #12]
 1007 006a 2222     		movs	r2, #34
 1008 006c 83F86920 		strb	r2, [r3, #105]
 1009              	.L56:
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size; 
 1010              		.loc 1 695 0
 1011 0070 FB68     		ldr	r3, [r7, #12]
 1012 0072 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1013 0074 A3F85820 		strh	r2, [r3, #88]	@ movhi
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 1014              		.loc 1 696 0
 1015 0078 FB68     		ldr	r3, [r7, #12]
 1016 007a FA88     		ldrh	r2, [r7, #6]	@ movhi
 1017 007c A3F85A20 		strh	r2, [r3, #90]	@ movhi
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_MASK_COMPUTATION(huart);
 1018              		.loc 1 699 0
 1019 0080 FB68     		ldr	r3, [r7, #12]
 1020 0082 9B68     		ldr	r3, [r3, #8]
 1021 0084 B3F5805F 		cmp	r3, #4096
 1022 0088 0ED1     		bne	.L57
 1023              		.loc 1 699 0 is_stmt 0 discriminator 1
 1024 008a FB68     		ldr	r3, [r7, #12]
 1025 008c 1B69     		ldr	r3, [r3, #16]
 1026 008e 002B     		cmp	r3, #0
 1027 0090 05D1     		bne	.L58
ARM GAS  /tmp/cckWdj4u.s 			page 31


 1028              		.loc 1 699 0 discriminator 3
 1029 0092 FB68     		ldr	r3, [r7, #12]
 1030 0094 40F2FF12 		movw	r2, #511
 1031 0098 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1032 009c 15E0     		b	.L60
 1033              	.L58:
 1034              		.loc 1 699 0 discriminator 4
 1035 009e FB68     		ldr	r3, [r7, #12]
 1036 00a0 FF22     		movs	r2, #255
 1037 00a2 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1038 00a6 10E0     		b	.L60
 1039              	.L57:
 1040              		.loc 1 699 0 discriminator 2
 1041 00a8 FB68     		ldr	r3, [r7, #12]
 1042 00aa 9B68     		ldr	r3, [r3, #8]
 1043 00ac 002B     		cmp	r3, #0
 1044 00ae 0CD1     		bne	.L60
 1045              		.loc 1 699 0 discriminator 5
 1046 00b0 FB68     		ldr	r3, [r7, #12]
 1047 00b2 1B69     		ldr	r3, [r3, #16]
 1048 00b4 002B     		cmp	r3, #0
 1049 00b6 04D1     		bne	.L61
 1050              		.loc 1 699 0 discriminator 6
 1051 00b8 FB68     		ldr	r3, [r7, #12]
 1052 00ba FF22     		movs	r2, #255
 1053 00bc A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1054 00c0 03E0     		b	.L60
 1055              	.L61:
 1056              		.loc 1 699 0 discriminator 7
 1057 00c2 FB68     		ldr	r3, [r7, #12]
 1058 00c4 7F22     		movs	r2, #127
 1059 00c6 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1060              	.L60:
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 1061              		.loc 1 700 0 is_stmt 1
 1062 00ca FB68     		ldr	r3, [r7, #12]
 1063 00cc B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 1064 00d0 FB82     		strh	r3, [r7, #22]	@ movhi
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* as long as data have to be received */
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while(huart->RxXferCount > 0)
 1065              		.loc 1 703 0
 1066 00d2 37E0     		b	.L62
 1067              	.L65:
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxXferCount--;
 1068              		.loc 1 705 0
 1069 00d4 FB68     		ldr	r3, [r7, #12]
 1070 00d6 B3F85A30 		ldrh	r3, [r3, #90]
 1071 00da 013B     		subs	r3, r3, #1
 1072 00dc 9AB2     		uxth	r2, r3
 1073 00de FB68     		ldr	r3, [r7, #12]
 1074 00e0 A3F85A20 		strh	r2, [r3, #90]	@ movhi
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, Timeout) != HAL_OK)  
 1075              		.loc 1 706 0
 1076 00e4 3B68     		ldr	r3, [r7]
 1077 00e6 0022     		movs	r2, #0
ARM GAS  /tmp/cckWdj4u.s 			page 32


 1078 00e8 2021     		movs	r1, #32
 1079 00ea F868     		ldr	r0, [r7, #12]
 1080 00ec FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1081 00f0 0346     		mov	r3, r0
 1082 00f2 002B     		cmp	r3, #0
 1083 00f4 01D0     		beq	.L63
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         { 
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           return HAL_TIMEOUT;
 1084              		.loc 1 708 0
 1085 00f6 0323     		movs	r3, #3
 1086 00f8 3EE0     		b	.L53
 1087              	.L63:
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }        
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 1088              		.loc 1 710 0
 1089 00fa FB68     		ldr	r3, [r7, #12]
 1090 00fc 9B68     		ldr	r3, [r3, #8]
 1091 00fe B3F5805F 		cmp	r3, #4096
 1092 0102 12D1     		bne	.L64
 1093              		.loc 1 710 0 is_stmt 0 discriminator 1
 1094 0104 FB68     		ldr	r3, [r7, #12]
 1095 0106 1B69     		ldr	r3, [r3, #16]
 1096 0108 002B     		cmp	r3, #0
 1097 010a 0ED1     		bne	.L64
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 1098              		.loc 1 712 0 is_stmt 1
 1099 010c BB68     		ldr	r3, [r7, #8]
 1100 010e 3B61     		str	r3, [r7, #16]
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 1101              		.loc 1 713 0
 1102 0110 FB68     		ldr	r3, [r7, #12]
 1103 0112 1B68     		ldr	r3, [r3]
 1104 0114 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 1105 0116 9AB2     		uxth	r2, r3
 1106 0118 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1107 011a 1340     		ands	r3, r3, r2
 1108 011c 9AB2     		uxth	r2, r3
 1109 011e 3B69     		ldr	r3, [r7, #16]
 1110 0120 1A80     		strh	r2, [r3]	@ movhi
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData +=2; 
 1111              		.loc 1 714 0
 1112 0122 BB68     		ldr	r3, [r7, #8]
 1113 0124 0233     		adds	r3, r3, #2
 1114 0126 BB60     		str	r3, [r7, #8]
 1115 0128 0CE0     		b	.L62
 1116              	.L64:
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       } 
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask); 
 1117              		.loc 1 718 0
 1118 012a BB68     		ldr	r3, [r7, #8]
 1119 012c 5A1C     		adds	r2, r3, #1
 1120 012e BA60     		str	r2, [r7, #8]
 1121 0130 FA68     		ldr	r2, [r7, #12]
 1122 0132 1268     		ldr	r2, [r2]
ARM GAS  /tmp/cckWdj4u.s 			page 33


 1123 0134 928C     		ldrh	r2, [r2, #36]	@ movhi
 1124 0136 92B2     		uxth	r2, r2
 1125 0138 D1B2     		uxtb	r1, r2
 1126 013a FA8A     		ldrh	r2, [r7, #22]	@ movhi
 1127 013c D2B2     		uxtb	r2, r2
 1128 013e 0A40     		ands	r2, r2, r1
 1129 0140 D2B2     		uxtb	r2, r2
 1130 0142 1A70     		strb	r2, [r3]
 1131              	.L62:
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1132              		.loc 1 703 0
 1133 0144 FB68     		ldr	r3, [r7, #12]
 1134 0146 B3F85A30 		ldrh	r3, [r3, #90]
 1135 014a 002B     		cmp	r3, #0
 1136 014c C2D1     		bne	.L65
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check if a non-blocking transmit Process is ongoing or not */
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
 1137              		.loc 1 723 0
 1138 014e FB68     		ldr	r3, [r7, #12]
 1139 0150 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 1140 0154 322B     		cmp	r3, #50
 1141 0156 04D1     		bne	.L66
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX;
 1142              		.loc 1 725 0
 1143 0158 FB68     		ldr	r3, [r7, #12]
 1144 015a 1222     		movs	r2, #18
 1145 015c 83F86920 		strb	r2, [r3, #105]
 1146 0160 03E0     		b	.L67
 1147              	.L66:
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->State = HAL_UART_STATE_READY;
 1148              		.loc 1 729 0
 1149 0162 FB68     		ldr	r3, [r7, #12]
 1150 0164 0122     		movs	r2, #1
 1151 0166 83F86920 		strb	r2, [r3, #105]
 1152              	.L67:
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     } 
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1153              		.loc 1 732 0
 1154 016a FB68     		ldr	r3, [r7, #12]
 1155 016c 0022     		movs	r2, #0
 1156 016e 83F86820 		strb	r2, [r3, #104]
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 1157              		.loc 1 734 0
 1158 0172 0023     		movs	r3, #0
 1159 0174 00E0     		b	.L53
 1160              	.L50:
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
ARM GAS  /tmp/cckWdj4u.s 			page 34


 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;   
 1161              		.loc 1 738 0
 1162 0176 0223     		movs	r3, #2
 1163              	.L53:
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1164              		.loc 1 740 0
 1165 0178 1846     		mov	r0, r3
 1166 017a 1837     		adds	r7, r7, #24
 1167              	.LCFI45:
 1168              		.cfi_def_cfa_offset 8
 1169 017c BD46     		mov	sp, r7
 1170              	.LCFI46:
 1171              		.cfi_def_cfa_register 13
 1172              		@ sp needed
 1173 017e 80BD     		pop	{r7, pc}
 1174              		.cfi_endproc
 1175              	.LFE120:
 1177              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1178              		.align	2
 1179              		.global	HAL_UART_Transmit_IT
 1180              		.thumb
 1181              		.thumb_func
 1183              	HAL_UART_Transmit_IT:
 1184              	.LFB121:
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode 
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: uart handle
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData: pointer to data buffer
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size: amount of data to be sent
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {  
 1185              		.loc 1 750 0
 1186              		.cfi_startproc
 1187              		@ args = 0, pretend = 0, frame = 16
 1188              		@ frame_needed = 1, uses_anonymous_args = 0
 1189              		@ link register save eliminated.
 1190 0000 80B4     		push	{r7}
 1191              	.LCFI47:
 1192              		.cfi_def_cfa_offset 4
 1193              		.cfi_offset 7, -4
 1194 0002 85B0     		sub	sp, sp, #20
 1195              	.LCFI48:
 1196              		.cfi_def_cfa_offset 24
 1197 0004 00AF     		add	r7, sp, #0
 1198              	.LCFI49:
 1199              		.cfi_def_cfa_register 7
 1200 0006 F860     		str	r0, [r7, #12]
 1201 0008 B960     		str	r1, [r7, #8]
 1202 000a 1346     		mov	r3, r2
 1203 000c FB80     		strh	r3, [r7, #6]	@ movhi
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((huart->State == HAL_UART_STATE_READY) || (huart->State == HAL_UART_STATE_BUSY_RX))
 1204              		.loc 1 751 0
ARM GAS  /tmp/cckWdj4u.s 			page 35


 1205 000e FB68     		ldr	r3, [r7, #12]
 1206 0010 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 1207 0014 012B     		cmp	r3, #1
 1208 0016 04D0     		beq	.L69
 1209              		.loc 1 751 0 is_stmt 0 discriminator 1
 1210 0018 FB68     		ldr	r3, [r7, #12]
 1211 001a 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 1212 001e 222B     		cmp	r3, #34
 1213 0020 45D1     		bne	.L70
 1214              	.L69:
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 1215              		.loc 1 753 0 is_stmt 1
 1216 0022 BB68     		ldr	r3, [r7, #8]
 1217 0024 002B     		cmp	r3, #0
 1218 0026 02D0     		beq	.L71
 1219              		.loc 1 753 0 is_stmt 0 discriminator 1
 1220 0028 FB88     		ldrh	r3, [r7, #6]
 1221 002a 002B     		cmp	r3, #0
 1222 002c 01D1     		bne	.L72
 1223              	.L71:
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;                                    
 1224              		.loc 1 755 0 is_stmt 1
 1225 002e 0123     		movs	r3, #1
 1226 0030 3EE0     		b	.L73
 1227              	.L72:
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 1228              		.loc 1 759 0
 1229 0032 FB68     		ldr	r3, [r7, #12]
 1230 0034 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1231 0038 012B     		cmp	r3, #1
 1232 003a 01D1     		bne	.L74
 1233              		.loc 1 759 0 is_stmt 0 discriminator 1
 1234 003c 0223     		movs	r3, #2
 1235 003e 37E0     		b	.L73
 1236              	.L74:
 1237              		.loc 1 759 0 discriminator 2
 1238 0040 FB68     		ldr	r3, [r7, #12]
 1239 0042 0122     		movs	r2, #1
 1240 0044 83F86820 		strb	r2, [r3, #104]
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1241              		.loc 1 761 0 is_stmt 1 discriminator 2
 1242 0048 FB68     		ldr	r3, [r7, #12]
 1243 004a BA68     		ldr	r2, [r7, #8]
 1244 004c DA64     		str	r2, [r3, #76]
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 1245              		.loc 1 762 0 discriminator 2
 1246 004e FB68     		ldr	r3, [r7, #12]
 1247 0050 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1248 0052 A3F85020 		strh	r2, [r3, #80]	@ movhi
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 1249              		.loc 1 763 0 discriminator 2
ARM GAS  /tmp/cckWdj4u.s 			page 36


 1250 0056 FB68     		ldr	r3, [r7, #12]
 1251 0058 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1252 005a A3F85220 		strh	r2, [r3, #82]	@ movhi
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1253              		.loc 1 765 0 discriminator 2
 1254 005e FB68     		ldr	r3, [r7, #12]
 1255 0060 0022     		movs	r2, #0
 1256 0062 83F86A20 		strb	r2, [r3, #106]
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check if a receive process is ongoing or not */
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_RX) 
 1257              		.loc 1 767 0 discriminator 2
 1258 0066 FB68     		ldr	r3, [r7, #12]
 1259 0068 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 1260 006c 222B     		cmp	r3, #34
 1261 006e 04D1     		bne	.L75
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX_RX;
 1262              		.loc 1 769 0
 1263 0070 FB68     		ldr	r3, [r7, #12]
 1264 0072 3222     		movs	r2, #50
 1265 0074 83F86920 		strb	r2, [r3, #105]
 1266 0078 03E0     		b	.L76
 1267              	.L75:
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX;
 1268              		.loc 1 773 0
 1269 007a FB68     		ldr	r3, [r7, #12]
 1270 007c 1222     		movs	r2, #18
 1271 007e 83F86920 		strb	r2, [r3, #105]
 1272              	.L76:
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 1273              		.loc 1 777 0
 1274 0082 FB68     		ldr	r3, [r7, #12]
 1275 0084 1B68     		ldr	r3, [r3]
 1276 0086 FA68     		ldr	r2, [r7, #12]
 1277 0088 1268     		ldr	r2, [r2]
 1278 008a 9268     		ldr	r2, [r2, #8]
 1279 008c 42F00102 		orr	r2, r2, #1
 1280 0090 9A60     		str	r2, [r3, #8]
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);    
 1281              		.loc 1 780 0
 1282 0092 FB68     		ldr	r3, [r7, #12]
 1283 0094 0022     		movs	r2, #0
 1284 0096 83F86820 		strb	r2, [r3, #104]
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Transmit Data Register Empty Interrupt */
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 1285              		.loc 1 783 0
 1286 009a FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cckWdj4u.s 			page 37


 1287 009c 1B68     		ldr	r3, [r3]
 1288 009e FA68     		ldr	r2, [r7, #12]
 1289 00a0 1268     		ldr	r2, [r2]
 1290 00a2 1268     		ldr	r2, [r2]
 1291 00a4 42F08002 		orr	r2, r2, #128
 1292 00a8 1A60     		str	r2, [r3]
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 1293              		.loc 1 785 0
 1294 00aa 0023     		movs	r3, #0
 1295 00ac 00E0     		b	.L73
 1296              	.L70:
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;   
 1297              		.loc 1 789 0
 1298 00ae 0223     		movs	r3, #2
 1299              	.L73:
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1300              		.loc 1 791 0
 1301 00b0 1846     		mov	r0, r3
 1302 00b2 1437     		adds	r7, r7, #20
 1303              	.LCFI50:
 1304              		.cfi_def_cfa_offset 4
 1305 00b4 BD46     		mov	sp, r7
 1306              	.LCFI51:
 1307              		.cfi_def_cfa_register 13
 1308              		@ sp needed
 1309 00b6 5DF8047B 		ldr	r7, [sp], #4
 1310              	.LCFI52:
 1311              		.cfi_restore 7
 1312              		.cfi_def_cfa_offset 0
 1313 00ba 7047     		bx	lr
 1314              		.cfi_endproc
 1315              	.LFE121:
 1317              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1318              		.align	2
 1319              		.global	HAL_UART_Receive_IT
 1320              		.thumb
 1321              		.thumb_func
 1323              	HAL_UART_Receive_IT:
 1324              	.LFB122:
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode 
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: uart handle
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData: pointer to data buffer
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size: amount of data to be received
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {  
 1325              		.loc 1 801 0
 1326              		.cfi_startproc
 1327              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/cckWdj4u.s 			page 38


 1328              		@ frame_needed = 1, uses_anonymous_args = 0
 1329              		@ link register save eliminated.
 1330 0000 80B4     		push	{r7}
 1331              	.LCFI53:
 1332              		.cfi_def_cfa_offset 4
 1333              		.cfi_offset 7, -4
 1334 0002 85B0     		sub	sp, sp, #20
 1335              	.LCFI54:
 1336              		.cfi_def_cfa_offset 24
 1337 0004 00AF     		add	r7, sp, #0
 1338              	.LCFI55:
 1339              		.cfi_def_cfa_register 7
 1340 0006 F860     		str	r0, [r7, #12]
 1341 0008 B960     		str	r1, [r7, #8]
 1342 000a 1346     		mov	r3, r2
 1343 000c FB80     		strh	r3, [r7, #6]	@ movhi
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((huart->State == HAL_UART_STATE_READY) || (huart->State == HAL_UART_STATE_BUSY_TX))
 1344              		.loc 1 802 0
 1345 000e FB68     		ldr	r3, [r7, #12]
 1346 0010 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 1347 0014 012B     		cmp	r3, #1
 1348 0016 04D0     		beq	.L78
 1349              		.loc 1 802 0 is_stmt 0 discriminator 1
 1350 0018 FB68     		ldr	r3, [r7, #12]
 1351 001a 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 1352 001e 122B     		cmp	r3, #18
 1353 0020 72D1     		bne	.L79
 1354              	.L78:
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 1355              		.loc 1 804 0 is_stmt 1
 1356 0022 BB68     		ldr	r3, [r7, #8]
 1357 0024 002B     		cmp	r3, #0
 1358 0026 02D0     		beq	.L80
 1359              		.loc 1 804 0 is_stmt 0 discriminator 1
 1360 0028 FB88     		ldrh	r3, [r7, #6]
 1361 002a 002B     		cmp	r3, #0
 1362 002c 01D1     		bne	.L81
 1363              	.L80:
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;                                    
 1364              		.loc 1 806 0 is_stmt 1
 1365 002e 0123     		movs	r3, #1
 1366 0030 6BE0     		b	.L82
 1367              	.L81:
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 1368              		.loc 1 810 0
 1369 0032 FB68     		ldr	r3, [r7, #12]
 1370 0034 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1371 0038 012B     		cmp	r3, #1
 1372 003a 01D1     		bne	.L83
 1373              		.loc 1 810 0 is_stmt 0 discriminator 1
 1374 003c 0223     		movs	r3, #2
 1375 003e 64E0     		b	.L82
ARM GAS  /tmp/cckWdj4u.s 			page 39


 1376              	.L83:
 1377              		.loc 1 810 0 discriminator 2
 1378 0040 FB68     		ldr	r3, [r7, #12]
 1379 0042 0122     		movs	r2, #1
 1380 0044 83F86820 		strb	r2, [r3, #104]
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1381              		.loc 1 812 0 is_stmt 1 discriminator 2
 1382 0048 FB68     		ldr	r3, [r7, #12]
 1383 004a BA68     		ldr	r2, [r7, #8]
 1384 004c 5A65     		str	r2, [r3, #84]
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 1385              		.loc 1 813 0 discriminator 2
 1386 004e FB68     		ldr	r3, [r7, #12]
 1387 0050 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1388 0052 A3F85820 		strh	r2, [r3, #88]	@ movhi
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 1389              		.loc 1 814 0 discriminator 2
 1390 0056 FB68     		ldr	r3, [r7, #12]
 1391 0058 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1392 005a A3F85A20 		strh	r2, [r3, #90]	@ movhi
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_MASK_COMPUTATION(huart);
 1393              		.loc 1 817 0 discriminator 2
 1394 005e FB68     		ldr	r3, [r7, #12]
 1395 0060 9B68     		ldr	r3, [r3, #8]
 1396 0062 B3F5805F 		cmp	r3, #4096
 1397 0066 0ED1     		bne	.L84
 1398              		.loc 1 817 0 is_stmt 0 discriminator 1
 1399 0068 FB68     		ldr	r3, [r7, #12]
 1400 006a 1B69     		ldr	r3, [r3, #16]
 1401 006c 002B     		cmp	r3, #0
 1402 006e 05D1     		bne	.L85
 1403              		.loc 1 817 0 discriminator 3
 1404 0070 FB68     		ldr	r3, [r7, #12]
 1405 0072 40F2FF12 		movw	r2, #511
 1406 0076 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1407 007a 15E0     		b	.L87
 1408              	.L85:
 1409              		.loc 1 817 0 discriminator 4
 1410 007c FB68     		ldr	r3, [r7, #12]
 1411 007e FF22     		movs	r2, #255
 1412 0080 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1413 0084 10E0     		b	.L87
 1414              	.L84:
 1415              		.loc 1 817 0 discriminator 2
 1416 0086 FB68     		ldr	r3, [r7, #12]
 1417 0088 9B68     		ldr	r3, [r3, #8]
 1418 008a 002B     		cmp	r3, #0
 1419 008c 0CD1     		bne	.L87
 1420              		.loc 1 817 0 discriminator 5
 1421 008e FB68     		ldr	r3, [r7, #12]
 1422 0090 1B69     		ldr	r3, [r3, #16]
 1423 0092 002B     		cmp	r3, #0
 1424 0094 04D1     		bne	.L88
 1425              		.loc 1 817 0 discriminator 6
ARM GAS  /tmp/cckWdj4u.s 			page 40


 1426 0096 FB68     		ldr	r3, [r7, #12]
 1427 0098 FF22     		movs	r2, #255
 1428 009a A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1429 009e 03E0     		b	.L87
 1430              	.L88:
 1431              		.loc 1 817 0 discriminator 7
 1432 00a0 FB68     		ldr	r3, [r7, #12]
 1433 00a2 7F22     		movs	r2, #127
 1434 00a4 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1435              	.L87:
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1436              		.loc 1 819 0 is_stmt 1
 1437 00a8 FB68     		ldr	r3, [r7, #12]
 1438 00aa 0022     		movs	r2, #0
 1439 00ac 83F86A20 		strb	r2, [r3, #106]
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check if a transmit process is ongoing or not */
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_TX) 
 1440              		.loc 1 821 0
 1441 00b0 FB68     		ldr	r3, [r7, #12]
 1442 00b2 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 1443 00b6 122B     		cmp	r3, #18
 1444 00b8 04D1     		bne	.L89
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX_RX;
 1445              		.loc 1 823 0
 1446 00ba FB68     		ldr	r3, [r7, #12]
 1447 00bc 3222     		movs	r2, #50
 1448 00be 83F86920 		strb	r2, [r3, #105]
 1449 00c2 03E0     		b	.L90
 1450              	.L89:
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_RX;
 1451              		.loc 1 827 0
 1452 00c4 FB68     		ldr	r3, [r7, #12]
 1453 00c6 2222     		movs	r2, #34
 1454 00c8 83F86920 		strb	r2, [r3, #105]
 1455              	.L90:
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 1456              		.loc 1 831 0
 1457 00cc FB68     		ldr	r3, [r7, #12]
 1458 00ce 1B68     		ldr	r3, [r3]
 1459 00d0 FA68     		ldr	r2, [r7, #12]
 1460 00d2 1268     		ldr	r2, [r2]
 1461 00d4 1268     		ldr	r2, [r2]
 1462 00d6 42F48072 		orr	r2, r2, #256
 1463 00da 1A60     		str	r2, [r3]
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 1464              		.loc 1 834 0
 1465 00dc FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cckWdj4u.s 			page 41


 1466 00de 1B68     		ldr	r3, [r3]
 1467 00e0 FA68     		ldr	r2, [r7, #12]
 1468 00e2 1268     		ldr	r2, [r2]
 1469 00e4 9268     		ldr	r2, [r2, #8]
 1470 00e6 42F00102 		orr	r2, r2, #1
 1471 00ea 9A60     		str	r2, [r3, #8]
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1472              		.loc 1 837 0
 1473 00ec FB68     		ldr	r3, [r7, #12]
 1474 00ee 0022     		movs	r2, #0
 1475 00f0 83F86820 		strb	r2, [r3, #104]
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Data Register not empty Interrupt */
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 1476              		.loc 1 840 0
 1477 00f4 FB68     		ldr	r3, [r7, #12]
 1478 00f6 1B68     		ldr	r3, [r3]
 1479 00f8 FA68     		ldr	r2, [r7, #12]
 1480 00fa 1268     		ldr	r2, [r2]
 1481 00fc 1268     		ldr	r2, [r2]
 1482 00fe 42F02002 		orr	r2, r2, #32
 1483 0102 1A60     		str	r2, [r3]
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 1484              		.loc 1 842 0
 1485 0104 0023     		movs	r3, #0
 1486 0106 00E0     		b	.L82
 1487              	.L79:
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY; 
 1488              		.loc 1 846 0
 1489 0108 0223     		movs	r3, #2
 1490              	.L82:
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1491              		.loc 1 848 0
 1492 010a 1846     		mov	r0, r3
 1493 010c 1437     		adds	r7, r7, #20
 1494              	.LCFI56:
 1495              		.cfi_def_cfa_offset 4
 1496 010e BD46     		mov	sp, r7
 1497              	.LCFI57:
 1498              		.cfi_def_cfa_register 13
 1499              		@ sp needed
 1500 0110 5DF8047B 		ldr	r7, [sp], #4
 1501              	.LCFI58:
 1502              		.cfi_restore 7
 1503              		.cfi_def_cfa_offset 0
 1504 0114 7047     		bx	lr
 1505              		.cfi_endproc
 1506              	.LFE122:
 1508 0116 00BF     		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1509              		.align	2
ARM GAS  /tmp/cckWdj4u.s 			page 42


 1510              		.global	HAL_UART_Transmit_DMA
 1511              		.thumb
 1512              		.thumb_func
 1514              	HAL_UART_Transmit_DMA:
 1515              	.LFB123:
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode 
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: uart handle
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData: pointer to data buffer
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size: amount of data to be sent
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1516              		.loc 1 858 0
 1517              		.cfi_startproc
 1518              		@ args = 0, pretend = 0, frame = 24
 1519              		@ frame_needed = 1, uses_anonymous_args = 0
 1520 0000 80B5     		push	{r7, lr}
 1521              	.LCFI59:
 1522              		.cfi_def_cfa_offset 8
 1523              		.cfi_offset 7, -8
 1524              		.cfi_offset 14, -4
 1525 0002 86B0     		sub	sp, sp, #24
 1526              	.LCFI60:
 1527              		.cfi_def_cfa_offset 32
 1528 0004 00AF     		add	r7, sp, #0
 1529              	.LCFI61:
 1530              		.cfi_def_cfa_register 7
 1531 0006 F860     		str	r0, [r7, #12]
 1532 0008 B960     		str	r1, [r7, #8]
 1533 000a 1346     		mov	r3, r2
 1534 000c FB80     		strh	r3, [r7, #6]	@ movhi
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t *tmp;
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((huart->State == HAL_UART_STATE_READY) || (huart->State == HAL_UART_STATE_BUSY_RX))
 1535              		.loc 1 861 0
 1536 000e FB68     		ldr	r3, [r7, #12]
 1537 0010 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 1538 0014 012B     		cmp	r3, #1
 1539 0016 04D0     		beq	.L92
 1540              		.loc 1 861 0 is_stmt 0 discriminator 1
 1541 0018 FB68     		ldr	r3, [r7, #12]
 1542 001a 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 1543 001e 222B     		cmp	r3, #34
 1544 0020 57D1     		bne	.L93
 1545              	.L92:
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 1546              		.loc 1 863 0 is_stmt 1
 1547 0022 BB68     		ldr	r3, [r7, #8]
 1548 0024 002B     		cmp	r3, #0
 1549 0026 02D0     		beq	.L94
 1550              		.loc 1 863 0 is_stmt 0 discriminator 1
 1551 0028 FB88     		ldrh	r3, [r7, #6]
 1552 002a 002B     		cmp	r3, #0
ARM GAS  /tmp/cckWdj4u.s 			page 43


 1553 002c 01D1     		bne	.L95
 1554              	.L94:
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;                                    
 1555              		.loc 1 865 0 is_stmt 1
 1556 002e 0123     		movs	r3, #1
 1557 0030 50E0     		b	.L96
 1558              	.L95:
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 1559              		.loc 1 869 0
 1560 0032 FB68     		ldr	r3, [r7, #12]
 1561 0034 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1562 0038 012B     		cmp	r3, #1
 1563 003a 01D1     		bne	.L97
 1564              		.loc 1 869 0 is_stmt 0 discriminator 1
 1565 003c 0223     		movs	r3, #2
 1566 003e 49E0     		b	.L96
 1567              	.L97:
 1568              		.loc 1 869 0 discriminator 2
 1569 0040 FB68     		ldr	r3, [r7, #12]
 1570 0042 0122     		movs	r2, #1
 1571 0044 83F86820 		strb	r2, [r3, #104]
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1572              		.loc 1 871 0 is_stmt 1 discriminator 2
 1573 0048 BA68     		ldr	r2, [r7, #8]
 1574 004a FB68     		ldr	r3, [r7, #12]
 1575 004c DA64     		str	r2, [r3, #76]
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 1576              		.loc 1 872 0 discriminator 2
 1577 004e FB68     		ldr	r3, [r7, #12]
 1578 0050 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1579 0052 A3F85020 		strh	r2, [r3, #80]	@ movhi
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size; 
 1580              		.loc 1 873 0 discriminator 2
 1581 0056 FB68     		ldr	r3, [r7, #12]
 1582 0058 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1583 005a A3F85220 		strh	r2, [r3, #82]	@ movhi
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1584              		.loc 1 875 0 discriminator 2
 1585 005e FB68     		ldr	r3, [r7, #12]
 1586 0060 0022     		movs	r2, #0
 1587 0062 83F86A20 		strb	r2, [r3, #106]
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check if a receive process is ongoing or not */
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_RX) 
 1588              		.loc 1 877 0 discriminator 2
 1589 0066 FB68     		ldr	r3, [r7, #12]
 1590 0068 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 1591 006c 222B     		cmp	r3, #34
 1592 006e 04D1     		bne	.L98
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX_RX;
 1593              		.loc 1 879 0
ARM GAS  /tmp/cckWdj4u.s 			page 44


 1594 0070 FB68     		ldr	r3, [r7, #12]
 1595 0072 3222     		movs	r2, #50
 1596 0074 83F86920 		strb	r2, [r3, #105]
 1597 0078 03E0     		b	.L99
 1598              	.L98:
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX;
 1599              		.loc 1 883 0
 1600 007a FB68     		ldr	r3, [r7, #12]
 1601 007c 1222     		movs	r2, #18
 1602 007e 83F86920 		strb	r2, [r3, #105]
 1603              	.L99:
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1604              		.loc 1 887 0
 1605 0082 FB68     		ldr	r3, [r7, #12]
 1606 0084 1B6E     		ldr	r3, [r3, #96]
 1607 0086 154A     		ldr	r2, .L100
 1608 0088 9A62     		str	r2, [r3, #40]
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;    
 1609              		.loc 1 890 0
 1610 008a FB68     		ldr	r3, [r7, #12]
 1611 008c 1B6E     		ldr	r3, [r3, #96]
 1612 008e 144A     		ldr	r2, .L100+4
 1613 0090 DA62     		str	r2, [r3, #44]
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA error callback */
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 1614              		.loc 1 893 0
 1615 0092 FB68     		ldr	r3, [r7, #12]
 1616 0094 1B6E     		ldr	r3, [r3, #96]
 1617 0096 134A     		ldr	r2, .L100+8
 1618 0098 1A63     		str	r2, [r3, #48]
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 1619              		.loc 1 896 0
 1620 009a 07F10803 		add	r3, r7, #8
 1621 009e 7B61     		str	r3, [r7, #20]
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t*)tmp, (uint32_t)&huart->Instance->TDR, Size);
 1622              		.loc 1 897 0
 1623 00a0 FB68     		ldr	r3, [r7, #12]
 1624 00a2 186E     		ldr	r0, [r3, #96]
 1625 00a4 7B69     		ldr	r3, [r7, #20]
 1626 00a6 1968     		ldr	r1, [r3]
 1627 00a8 FB68     		ldr	r3, [r7, #12]
 1628 00aa 1B68     		ldr	r3, [r3]
 1629 00ac 2833     		adds	r3, r3, #40
 1630 00ae 1A46     		mov	r2, r3
 1631 00b0 FB88     		ldrh	r3, [r7, #6]
 1632 00b2 FFF7FEFF 		bl	HAL_DMA_Start_IT
ARM GAS  /tmp/cckWdj4u.s 			page 45


 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Instance->CR3 |= USART_CR3_DMAT;
 1633              		.loc 1 901 0
 1634 00b6 FB68     		ldr	r3, [r7, #12]
 1635 00b8 1B68     		ldr	r3, [r3]
 1636 00ba FA68     		ldr	r2, [r7, #12]
 1637 00bc 1268     		ldr	r2, [r2]
 1638 00be 9268     		ldr	r2, [r2, #8]
 1639 00c0 42F08002 		orr	r2, r2, #128
 1640 00c4 9A60     		str	r2, [r3, #8]
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1641              		.loc 1 904 0
 1642 00c6 FB68     		ldr	r3, [r7, #12]
 1643 00c8 0022     		movs	r2, #0
 1644 00ca 83F86820 		strb	r2, [r3, #104]
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 1645              		.loc 1 906 0
 1646 00ce 0023     		movs	r3, #0
 1647 00d0 00E0     		b	.L96
 1648              	.L93:
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;   
 1649              		.loc 1 910 0
 1650 00d2 0223     		movs	r3, #2
 1651              	.L96:
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1652              		.loc 1 912 0
 1653 00d4 1846     		mov	r0, r3
 1654 00d6 1837     		adds	r7, r7, #24
 1655              	.LCFI62:
 1656              		.cfi_def_cfa_offset 8
 1657 00d8 BD46     		mov	sp, r7
 1658              	.LCFI63:
 1659              		.cfi_def_cfa_register 13
 1660              		@ sp needed
 1661 00da 80BD     		pop	{r7, pc}
 1662              	.L101:
 1663              		.align	2
 1664              	.L100:
 1665 00dc 00000000 		.word	UART_DMATransmitCplt
 1666 00e0 00000000 		.word	UART_DMATxHalfCplt
 1667 00e4 00000000 		.word	UART_DMAError
 1668              		.cfi_endproc
 1669              	.LFE123:
 1671              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1672              		.align	2
 1673              		.global	HAL_UART_Receive_DMA
 1674              		.thumb
 1675              		.thumb_func
ARM GAS  /tmp/cckWdj4u.s 			page 46


 1677              	HAL_UART_Receive_DMA:
 1678              	.LFB124:
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode 
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: uart handle
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData: pointer to data buffer
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size: amount of data to be received
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain 
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the parity bit (MSB position)     
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1679              		.loc 1 924 0
 1680              		.cfi_startproc
 1681              		@ args = 0, pretend = 0, frame = 24
 1682              		@ frame_needed = 1, uses_anonymous_args = 0
 1683 0000 80B5     		push	{r7, lr}
 1684              	.LCFI64:
 1685              		.cfi_def_cfa_offset 8
 1686              		.cfi_offset 7, -8
 1687              		.cfi_offset 14, -4
 1688 0002 86B0     		sub	sp, sp, #24
 1689              	.LCFI65:
 1690              		.cfi_def_cfa_offset 32
 1691 0004 00AF     		add	r7, sp, #0
 1692              	.LCFI66:
 1693              		.cfi_def_cfa_register 7
 1694 0006 F860     		str	r0, [r7, #12]
 1695 0008 B960     		str	r1, [r7, #8]
 1696 000a 1346     		mov	r3, r2
 1697 000c FB80     		strh	r3, [r7, #6]	@ movhi
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t *tmp;
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((huart->State == HAL_UART_STATE_READY) || (huart->State == HAL_UART_STATE_BUSY_TX))
 1698              		.loc 1 927 0
 1699 000e FB68     		ldr	r3, [r7, #12]
 1700 0010 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 1701 0014 012B     		cmp	r3, #1
 1702 0016 04D0     		beq	.L103
 1703              		.loc 1 927 0 is_stmt 0 discriminator 1
 1704 0018 FB68     		ldr	r3, [r7, #12]
 1705 001a 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 1706 001e 122B     		cmp	r3, #18
 1707 0020 53D1     		bne	.L104
 1708              	.L103:
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 1709              		.loc 1 929 0 is_stmt 1
 1710 0022 BB68     		ldr	r3, [r7, #8]
 1711 0024 002B     		cmp	r3, #0
 1712 0026 02D0     		beq	.L105
 1713              		.loc 1 929 0 is_stmt 0 discriminator 1
 1714 0028 FB88     		ldrh	r3, [r7, #6]
 1715 002a 002B     		cmp	r3, #0
 1716 002c 01D1     		bne	.L106
ARM GAS  /tmp/cckWdj4u.s 			page 47


 1717              	.L105:
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;                                    
 1718              		.loc 1 931 0 is_stmt 1
 1719 002e 0123     		movs	r3, #1
 1720 0030 4CE0     		b	.L107
 1721              	.L106:
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 1722              		.loc 1 935 0
 1723 0032 FB68     		ldr	r3, [r7, #12]
 1724 0034 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1725 0038 012B     		cmp	r3, #1
 1726 003a 01D1     		bne	.L108
 1727              		.loc 1 935 0 is_stmt 0 discriminator 1
 1728 003c 0223     		movs	r3, #2
 1729 003e 45E0     		b	.L107
 1730              	.L108:
 1731              		.loc 1 935 0 discriminator 2
 1732 0040 FB68     		ldr	r3, [r7, #12]
 1733 0042 0122     		movs	r2, #1
 1734 0044 83F86820 		strb	r2, [r3, #104]
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1735              		.loc 1 937 0 is_stmt 1 discriminator 2
 1736 0048 BA68     		ldr	r2, [r7, #8]
 1737 004a FB68     		ldr	r3, [r7, #12]
 1738 004c 5A65     		str	r2, [r3, #84]
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 1739              		.loc 1 938 0 discriminator 2
 1740 004e FB68     		ldr	r3, [r7, #12]
 1741 0050 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1742 0052 A3F85820 		strh	r2, [r3, #88]	@ movhi
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1743              		.loc 1 940 0 discriminator 2
 1744 0056 FB68     		ldr	r3, [r7, #12]
 1745 0058 0022     		movs	r2, #0
 1746 005a 83F86A20 		strb	r2, [r3, #106]
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check if a transmit process is ongoing or not */
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_TX) 
 1747              		.loc 1 942 0 discriminator 2
 1748 005e FB68     		ldr	r3, [r7, #12]
 1749 0060 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 1750 0064 122B     		cmp	r3, #18
 1751 0066 04D1     		bne	.L109
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX_RX;
 1752              		.loc 1 944 0
 1753 0068 FB68     		ldr	r3, [r7, #12]
 1754 006a 3222     		movs	r2, #50
 1755 006c 83F86920 		strb	r2, [r3, #105]
 1756 0070 03E0     		b	.L110
 1757              	.L109:
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
ARM GAS  /tmp/cckWdj4u.s 			page 48


 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_RX;
 1758              		.loc 1 948 0
 1759 0072 FB68     		ldr	r3, [r7, #12]
 1760 0074 2222     		movs	r2, #34
 1761 0076 83F86920 		strb	r2, [r3, #105]
 1762              	.L110:
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 1763              		.loc 1 952 0
 1764 007a FB68     		ldr	r3, [r7, #12]
 1765 007c 5B6E     		ldr	r3, [r3, #100]
 1766 007e 154A     		ldr	r2, .L111
 1767 0080 9A62     		str	r2, [r3, #40]
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 1768              		.loc 1 955 0
 1769 0082 FB68     		ldr	r3, [r7, #12]
 1770 0084 5B6E     		ldr	r3, [r3, #100]
 1771 0086 144A     		ldr	r2, .L111+4
 1772 0088 DA62     		str	r2, [r3, #44]
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA error callback */
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 1773              		.loc 1 958 0
 1774 008a FB68     		ldr	r3, [r7, #12]
 1775 008c 5B6E     		ldr	r3, [r3, #100]
 1776 008e 134A     		ldr	r2, .L111+8
 1777 0090 1A63     		str	r2, [r3, #48]
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA channel */
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 1778              		.loc 1 961 0
 1779 0092 07F10803 		add	r3, r7, #8
 1780 0096 7B61     		str	r3, [r7, #20]
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, *(uint32_t*)tmp, Size);
 1781              		.loc 1 962 0
 1782 0098 FB68     		ldr	r3, [r7, #12]
 1783 009a 586E     		ldr	r0, [r3, #100]
 1784 009c FB68     		ldr	r3, [r7, #12]
 1785 009e 1B68     		ldr	r3, [r3]
 1786 00a0 2433     		adds	r3, r3, #36
 1787 00a2 1946     		mov	r1, r3
 1788 00a4 7B69     		ldr	r3, [r7, #20]
 1789 00a6 1A68     		ldr	r2, [r3]
 1790 00a8 FB88     		ldrh	r3, [r7, #6]
 1791 00aa FFF7FEFF 		bl	HAL_DMA_Start_IT
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit 
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      huart->Instance->CR3 |= USART_CR3_DMAR;
 1792              		.loc 1 966 0
 1793 00ae FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cckWdj4u.s 			page 49


 1794 00b0 1B68     		ldr	r3, [r3]
 1795 00b2 FA68     		ldr	r2, [r7, #12]
 1796 00b4 1268     		ldr	r2, [r2]
 1797 00b6 9268     		ldr	r2, [r2, #8]
 1798 00b8 42F04002 		orr	r2, r2, #64
 1799 00bc 9A60     		str	r2, [r3, #8]
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      /* Process Unlocked */
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      __HAL_UNLOCK(huart);
 1800              		.loc 1 969 0
 1801 00be FB68     		ldr	r3, [r7, #12]
 1802 00c0 0022     		movs	r2, #0
 1803 00c2 83F86820 		strb	r2, [r3, #104]
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 1804              		.loc 1 971 0
 1805 00c6 0023     		movs	r3, #0
 1806 00c8 00E0     		b	.L107
 1807              	.L104:
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY; 
 1808              		.loc 1 975 0
 1809 00ca 0223     		movs	r3, #2
 1810              	.L107:
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1811              		.loc 1 977 0
 1812 00cc 1846     		mov	r0, r3
 1813 00ce 1837     		adds	r7, r7, #24
 1814              	.LCFI67:
 1815              		.cfi_def_cfa_offset 8
 1816 00d0 BD46     		mov	sp, r7
 1817              	.LCFI68:
 1818              		.cfi_def_cfa_register 13
 1819              		@ sp needed
 1820 00d2 80BD     		pop	{r7, pc}
 1821              	.L112:
 1822              		.align	2
 1823              	.L111:
 1824 00d4 00000000 		.word	UART_DMAReceiveCplt
 1825 00d8 00000000 		.word	UART_DMARxHalfCplt
 1826 00dc 00000000 		.word	UART_DMAError
 1827              		.cfi_endproc
 1828              	.LFE124:
 1830              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1831              		.align	2
 1832              		.global	HAL_UART_DMAPause
 1833              		.thumb
 1834              		.thumb_func
 1836              	HAL_UART_DMAPause:
 1837              	.LFB125:
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: UART handle
ARM GAS  /tmp/cckWdj4u.s 			page 50


 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1838              		.loc 1 985 0
 1839              		.cfi_startproc
 1840              		@ args = 0, pretend = 0, frame = 8
 1841              		@ frame_needed = 1, uses_anonymous_args = 0
 1842              		@ link register save eliminated.
 1843 0000 80B4     		push	{r7}
 1844              	.LCFI69:
 1845              		.cfi_def_cfa_offset 4
 1846              		.cfi_offset 7, -4
 1847 0002 83B0     		sub	sp, sp, #12
 1848              	.LCFI70:
 1849              		.cfi_def_cfa_offset 16
 1850 0004 00AF     		add	r7, sp, #0
 1851              	.LCFI71:
 1852              		.cfi_def_cfa_register 7
 1853 0006 7860     		str	r0, [r7, #4]
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 1854              		.loc 1 987 0
 1855 0008 7B68     		ldr	r3, [r7, #4]
 1856 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1857 000e 012B     		cmp	r3, #1
 1858 0010 01D1     		bne	.L114
 1859              		.loc 1 987 0 is_stmt 0 discriminator 1
 1860 0012 0223     		movs	r3, #2
 1861 0014 39E0     		b	.L115
 1862              	.L114:
 1863              		.loc 1 987 0 discriminator 2
 1864 0016 7B68     		ldr	r3, [r7, #4]
 1865 0018 0122     		movs	r2, #1
 1866 001a 83F86820 		strb	r2, [r3, #104]
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_BUSY_TX)
 1867              		.loc 1 989 0 is_stmt 1 discriminator 2
 1868 001e 7B68     		ldr	r3, [r7, #4]
 1869 0020 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 1870 0024 122B     		cmp	r3, #18
 1871 0026 08D1     		bne	.L116
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Instance->CR3 &= (uint32_t)(~USART_CR3_DMAT);
 1872              		.loc 1 992 0
 1873 0028 7B68     		ldr	r3, [r7, #4]
 1874 002a 1B68     		ldr	r3, [r3]
 1875 002c 7A68     		ldr	r2, [r7, #4]
 1876 002e 1268     		ldr	r2, [r2]
 1877 0030 9268     		ldr	r2, [r2, #8]
 1878 0032 22F08002 		bic	r2, r2, #128
 1879 0036 9A60     		str	r2, [r3, #8]
 1880 0038 22E0     		b	.L117
 1881              	.L116:
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else if(huart->State == HAL_UART_STATE_BUSY_RX)
ARM GAS  /tmp/cckWdj4u.s 			page 51


 1882              		.loc 1 994 0
 1883 003a 7B68     		ldr	r3, [r7, #4]
 1884 003c 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 1885 0040 222B     		cmp	r3, #34
 1886 0042 08D1     		bne	.L118
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Instance->CR3 &= (uint32_t)(~USART_CR3_DMAR);
 1887              		.loc 1 997 0
 1888 0044 7B68     		ldr	r3, [r7, #4]
 1889 0046 1B68     		ldr	r3, [r3]
 1890 0048 7A68     		ldr	r2, [r7, #4]
 1891 004a 1268     		ldr	r2, [r2]
 1892 004c 9268     		ldr	r2, [r2, #8]
 1893 004e 22F04002 		bic	r2, r2, #64
 1894 0052 9A60     		str	r2, [r3, #8]
 1895 0054 14E0     		b	.L117
 1896              	.L118:
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else if(huart->State == HAL_UART_STATE_BUSY_TX_RX)
 1897              		.loc 1 999 0
 1898 0056 7B68     		ldr	r3, [r7, #4]
 1899 0058 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 1900 005c 322B     		cmp	r3, #50
 1901 005e 0FD1     		bne	.L117
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Instance->CR3 &= (uint32_t)(~USART_CR3_DMAT);
 1902              		.loc 1 1002 0
 1903 0060 7B68     		ldr	r3, [r7, #4]
 1904 0062 1B68     		ldr	r3, [r3]
 1905 0064 7A68     		ldr	r2, [r7, #4]
 1906 0066 1268     		ldr	r2, [r2]
 1907 0068 9268     		ldr	r2, [r2, #8]
 1908 006a 22F08002 		bic	r2, r2, #128
 1909 006e 9A60     		str	r2, [r3, #8]
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Instance->CR3 &= (uint32_t)(~USART_CR3_DMAR);
 1910              		.loc 1 1004 0
 1911 0070 7B68     		ldr	r3, [r7, #4]
 1912 0072 1B68     		ldr	r3, [r3]
 1913 0074 7A68     		ldr	r2, [r7, #4]
 1914 0076 1268     		ldr	r2, [r2]
 1915 0078 9268     		ldr	r2, [r2, #8]
 1916 007a 22F04002 		bic	r2, r2, #64
 1917 007e 9A60     		str	r2, [r3, #8]
 1918              	.L117:
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 1919              		.loc 1 1008 0
 1920 0080 7B68     		ldr	r3, [r7, #4]
 1921 0082 0022     		movs	r2, #0
 1922 0084 83F86820 		strb	r2, [r3, #104]
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK; 
ARM GAS  /tmp/cckWdj4u.s 			page 52


 1923              		.loc 1 1010 0
 1924 0088 0023     		movs	r3, #0
 1925              	.L115:
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1926              		.loc 1 1011 0
 1927 008a 1846     		mov	r0, r3
 1928 008c 0C37     		adds	r7, r7, #12
 1929              	.LCFI72:
 1930              		.cfi_def_cfa_offset 4
 1931 008e BD46     		mov	sp, r7
 1932              	.LCFI73:
 1933              		.cfi_def_cfa_register 13
 1934              		@ sp needed
 1935 0090 5DF8047B 		ldr	r7, [sp], #4
 1936              	.LCFI74:
 1937              		.cfi_restore 7
 1938              		.cfi_def_cfa_offset 0
 1939 0094 7047     		bx	lr
 1940              		.cfi_endproc
 1941              	.LFE125:
 1943 0096 00BF     		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1944              		.align	2
 1945              		.global	HAL_UART_DMAResume
 1946              		.thumb
 1947              		.thumb_func
 1949              	HAL_UART_DMAResume:
 1950              	.LFB126:
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: UART handle
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1951              		.loc 1 1019 0
 1952              		.cfi_startproc
 1953              		@ args = 0, pretend = 0, frame = 8
 1954              		@ frame_needed = 1, uses_anonymous_args = 0
 1955 0000 80B5     		push	{r7, lr}
 1956              	.LCFI75:
 1957              		.cfi_def_cfa_offset 8
 1958              		.cfi_offset 7, -8
 1959              		.cfi_offset 14, -4
 1960 0002 82B0     		sub	sp, sp, #8
 1961              	.LCFI76:
 1962              		.cfi_def_cfa_offset 16
 1963 0004 00AF     		add	r7, sp, #0
 1964              	.LCFI77:
 1965              		.cfi_def_cfa_register 7
 1966 0006 7860     		str	r0, [r7, #4]
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 1967              		.loc 1 1021 0
 1968 0008 7B68     		ldr	r3, [r7, #4]
 1969 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1970 000e 012B     		cmp	r3, #1
ARM GAS  /tmp/cckWdj4u.s 			page 53


 1971 0010 01D1     		bne	.L120
 1972              		.loc 1 1021 0 is_stmt 0 discriminator 1
 1973 0012 0223     		movs	r3, #2
 1974 0014 47E0     		b	.L121
 1975              	.L120:
 1976              		.loc 1 1021 0 discriminator 2
 1977 0016 7B68     		ldr	r3, [r7, #4]
 1978 0018 0122     		movs	r2, #1
 1979 001a 83F86820 		strb	r2, [r3, #104]
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_BUSY_TX)
 1980              		.loc 1 1023 0 is_stmt 1 discriminator 2
 1981 001e 7B68     		ldr	r3, [r7, #4]
 1982 0020 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 1983 0024 122B     		cmp	r3, #18
 1984 0026 08D1     		bne	.L122
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Instance->CR3 |= USART_CR3_DMAT;
 1985              		.loc 1 1026 0
 1986 0028 7B68     		ldr	r3, [r7, #4]
 1987 002a 1B68     		ldr	r3, [r3]
 1988 002c 7A68     		ldr	r2, [r7, #4]
 1989 002e 1268     		ldr	r2, [r2]
 1990 0030 9268     		ldr	r2, [r2, #8]
 1991 0032 42F08002 		orr	r2, r2, #128
 1992 0036 9A60     		str	r2, [r3, #8]
 1993 0038 22E0     		b	.L123
 1994              	.L122:
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else if(huart->State == HAL_UART_STATE_BUSY_RX)
 1995              		.loc 1 1028 0
 1996 003a 7B68     		ldr	r3, [r7, #4]
 1997 003c 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 1998 0040 222B     		cmp	r3, #34
 1999 0042 08D1     		bne	.L124
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Instance->CR3 |= USART_CR3_DMAR;
 2000              		.loc 1 1031 0
 2001 0044 7B68     		ldr	r3, [r7, #4]
 2002 0046 1B68     		ldr	r3, [r3]
 2003 0048 7A68     		ldr	r2, [r7, #4]
 2004 004a 1268     		ldr	r2, [r2]
 2005 004c 9268     		ldr	r2, [r2, #8]
 2006 004e 42F04002 		orr	r2, r2, #64
 2007 0052 9A60     		str	r2, [r3, #8]
 2008 0054 14E0     		b	.L123
 2009              	.L124:
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else if(huart->State == HAL_UART_STATE_BUSY_TX_RX)
 2010              		.loc 1 1033 0
 2011 0056 7B68     		ldr	r3, [r7, #4]
 2012 0058 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 2013 005c 322B     		cmp	r3, #50
 2014 005e 0FD1     		bne	.L123
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
ARM GAS  /tmp/cckWdj4u.s 			page 54


1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART DMA Rx request  before the DMA Tx request */
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Instance->CR3 |= USART_CR3_DMAR;
 2015              		.loc 1 1036 0
 2016 0060 7B68     		ldr	r3, [r7, #4]
 2017 0062 1B68     		ldr	r3, [r3]
 2018 0064 7A68     		ldr	r2, [r7, #4]
 2019 0066 1268     		ldr	r2, [r2]
 2020 0068 9268     		ldr	r2, [r2, #8]
 2021 006a 42F04002 		orr	r2, r2, #64
 2022 006e 9A60     		str	r2, [r3, #8]
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Instance->CR3 |= USART_CR3_DMAT;
 2023              		.loc 1 1038 0
 2024 0070 7B68     		ldr	r3, [r7, #4]
 2025 0072 1B68     		ldr	r3, [r3]
 2026 0074 7A68     		ldr	r2, [r7, #4]
 2027 0076 1268     		ldr	r2, [r2]
 2028 0078 9268     		ldr	r2, [r2, #8]
 2029 007a 42F08002 		orr	r2, r2, #128
 2030 007e 9A60     		str	r2, [r3, #8]
 2031              	.L123:
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If the UART peripheral is still not enabled, enable it */ 
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_UE) == 0)
 2032              		.loc 1 1042 0
 2033 0080 7B68     		ldr	r3, [r7, #4]
 2034 0082 1B68     		ldr	r3, [r3]
 2035 0084 1B68     		ldr	r3, [r3]
 2036 0086 03F00103 		and	r3, r3, #1
 2037 008a 002B     		cmp	r3, #0
 2038 008c 07D1     		bne	.L125
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable UART peripheral */    
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_ENABLE(huart);
 2039              		.loc 1 1045 0
 2040 008e 7B68     		ldr	r3, [r7, #4]
 2041 0090 1B68     		ldr	r3, [r3]
 2042 0092 7A68     		ldr	r2, [r7, #4]
 2043 0094 1268     		ldr	r2, [r2]
 2044 0096 1268     		ldr	r2, [r2]
 2045 0098 42F00102 		orr	r2, r2, #1
 2046 009c 1A60     		str	r2, [r3]
 2047              	.L125:
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->State to Ready */
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 2048              		.loc 1 1049 0
 2049 009e 7868     		ldr	r0, [r7, #4]
 2050 00a0 FFF7FEFF 		bl	UART_CheckIdleState
 2051 00a4 0346     		mov	r3, r0
 2052              	.L121:
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2053              		.loc 1 1050 0
 2054 00a6 1846     		mov	r0, r3
 2055 00a8 0837     		adds	r7, r7, #8
ARM GAS  /tmp/cckWdj4u.s 			page 55


 2056              	.LCFI78:
 2057              		.cfi_def_cfa_offset 8
 2058 00aa BD46     		mov	sp, r7
 2059              	.LCFI79:
 2060              		.cfi_def_cfa_register 13
 2061              		@ sp needed
 2062 00ac 80BD     		pop	{r7, pc}
 2063              		.cfi_endproc
 2064              	.LFE126:
 2066              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2067              		.align	2
 2068              		.global	HAL_UART_DMAStop
 2069              		.thumb
 2070              		.thumb_func
 2072              	HAL_UART_DMAStop:
 2073              	.LFB127:
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: UART handle
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 2074              		.loc 1 1058 0
 2075              		.cfi_startproc
 2076              		@ args = 0, pretend = 0, frame = 8
 2077              		@ frame_needed = 1, uses_anonymous_args = 0
 2078 0000 80B5     		push	{r7, lr}
 2079              	.LCFI80:
 2080              		.cfi_def_cfa_offset 8
 2081              		.cfi_offset 7, -8
 2082              		.cfi_offset 14, -4
 2083 0002 82B0     		sub	sp, sp, #8
 2084              	.LCFI81:
 2085              		.cfi_def_cfa_offset 16
 2086 0004 00AF     		add	r7, sp, #0
 2087              	.LCFI82:
 2088              		.cfi_def_cfa_register 7
 2089 0006 7860     		str	r0, [r7, #4]
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 2090              		.loc 1 1060 0
 2091 0008 7B68     		ldr	r3, [r7, #4]
 2092 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 2093 000e 012B     		cmp	r3, #1
 2094 0010 01D1     		bne	.L127
 2095              		.loc 1 1060 0 is_stmt 0 discriminator 1
 2096 0012 0223     		movs	r3, #2
 2097 0014 36E0     		b	.L128
 2098              	.L127:
 2099              		.loc 1 1060 0 discriminator 2
 2100 0016 7B68     		ldr	r3, [r7, #4]
 2101 0018 0122     		movs	r2, #1
 2102 001a 83F86820 		strb	r2, [r3, #104]
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART Tx/Rx DMA requests */
ARM GAS  /tmp/cckWdj4u.s 			page 56


1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 &= ~USART_CR3_DMAT;
 2103              		.loc 1 1063 0 is_stmt 1 discriminator 2
 2104 001e 7B68     		ldr	r3, [r7, #4]
 2105 0020 1B68     		ldr	r3, [r3]
 2106 0022 7A68     		ldr	r2, [r7, #4]
 2107 0024 1268     		ldr	r2, [r2]
 2108 0026 9268     		ldr	r2, [r2, #8]
 2109 0028 22F08002 		bic	r2, r2, #128
 2110 002c 9A60     		str	r2, [r3, #8]
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 &= ~USART_CR3_DMAR;
 2111              		.loc 1 1064 0 discriminator 2
 2112 002e 7B68     		ldr	r3, [r7, #4]
 2113 0030 1B68     		ldr	r3, [r3]
 2114 0032 7A68     		ldr	r2, [r7, #4]
 2115 0034 1268     		ldr	r2, [r2]
 2116 0036 9268     		ldr	r2, [r2, #8]
 2117 0038 22F04002 		bic	r2, r2, #64
 2118 003c 9A60     		str	r2, [r3, #8]
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Abort the UART DMA tx channel */
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmatx != NULL)
 2119              		.loc 1 1067 0 discriminator 2
 2120 003e 7B68     		ldr	r3, [r7, #4]
 2121 0040 1B6E     		ldr	r3, [r3, #96]
 2122 0042 002B     		cmp	r3, #0
 2123 0044 04D0     		beq	.L129
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_DMA_Abort(huart->hdmatx);
 2124              		.loc 1 1069 0
 2125 0046 7B68     		ldr	r3, [r7, #4]
 2126 0048 1B6E     		ldr	r3, [r3, #96]
 2127 004a 1846     		mov	r0, r3
 2128 004c FFF7FEFF 		bl	HAL_DMA_Abort
 2129              	.L129:
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Abort the UART DMA rx channel */
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmarx != NULL)
 2130              		.loc 1 1072 0
 2131 0050 7B68     		ldr	r3, [r7, #4]
 2132 0052 5B6E     		ldr	r3, [r3, #100]
 2133 0054 002B     		cmp	r3, #0
 2134 0056 04D0     		beq	.L130
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_DMA_Abort(huart->hdmarx);
 2135              		.loc 1 1074 0
 2136 0058 7B68     		ldr	r3, [r7, #4]
 2137 005a 5B6E     		ldr	r3, [r3, #100]
 2138 005c 1846     		mov	r0, r3
 2139 005e FFF7FEFF 		bl	HAL_DMA_Abort
 2140              	.L130:
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable UART peripheral */
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 2141              		.loc 1 1078 0
 2142 0062 7B68     		ldr	r3, [r7, #4]
 2143 0064 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cckWdj4u.s 			page 57


 2144 0066 7A68     		ldr	r2, [r7, #4]
 2145 0068 1268     		ldr	r2, [r2]
 2146 006a 1268     		ldr	r2, [r2]
 2147 006c 22F00102 		bic	r2, r2, #1
 2148 0070 1A60     		str	r2, [r3]
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->State = HAL_UART_STATE_READY;
 2149              		.loc 1 1080 0
 2150 0072 7B68     		ldr	r3, [r7, #4]
 2151 0074 0122     		movs	r2, #1
 2152 0076 83F86920 		strb	r2, [r3, #105]
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2153              		.loc 1 1083 0
 2154 007a 7B68     		ldr	r3, [r7, #4]
 2155 007c 0022     		movs	r2, #0
 2156 007e 83F86820 		strb	r2, [r3, #104]
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 2157              		.loc 1 1085 0
 2158 0082 0023     		movs	r3, #0
 2159              	.L128:
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2160              		.loc 1 1086 0
 2161 0084 1846     		mov	r0, r3
 2162 0086 0837     		adds	r7, r7, #8
 2163              	.LCFI83:
 2164              		.cfi_def_cfa_offset 8
 2165 0088 BD46     		mov	sp, r7
 2166              	.LCFI84:
 2167              		.cfi_def_cfa_register 13
 2168              		@ sp needed
 2169 008a 80BD     		pop	{r7, pc}
 2170              		.cfi_endproc
 2171              	.LFE127:
 2173              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2174              		.align	2
 2175              		.global	HAL_UART_IRQHandler
 2176              		.thumb
 2177              		.thumb_func
 2179              	HAL_UART_IRQHandler:
 2180              	.LFB128:
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief This function handles UART interrupt request.
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: uart handle
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 2181              		.loc 1 1094 0
 2182              		.cfi_startproc
 2183              		@ args = 0, pretend = 0, frame = 8
 2184              		@ frame_needed = 1, uses_anonymous_args = 0
 2185 0000 80B5     		push	{r7, lr}
 2186              	.LCFI85:
ARM GAS  /tmp/cckWdj4u.s 			page 58


 2187              		.cfi_def_cfa_offset 8
 2188              		.cfi_offset 7, -8
 2189              		.cfi_offset 14, -4
 2190 0002 82B0     		sub	sp, sp, #8
 2191              	.LCFI86:
 2192              		.cfi_def_cfa_offset 16
 2193 0004 00AF     		add	r7, sp, #0
 2194              	.LCFI87:
 2195              		.cfi_def_cfa_register 7
 2196 0006 7860     		str	r0, [r7, #4]
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART parity error interrupt occurred -------------------------------------*/
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((__HAL_UART_GET_IT(huart, UART_IT_PE) != RESET) && (__HAL_UART_GET_IT_SOURCE(huart, UART_IT_PE
 2197              		.loc 1 1096 0
 2198 0008 7B68     		ldr	r3, [r7, #4]
 2199 000a 1B68     		ldr	r3, [r3]
 2200 000c DB69     		ldr	r3, [r3, #28]
 2201 000e 03F00103 		and	r3, r3, #1
 2202 0012 002B     		cmp	r3, #0
 2203 0014 17D0     		beq	.L132
 2204              		.loc 1 1096 0 is_stmt 0 discriminator 1
 2205 0016 7B68     		ldr	r3, [r7, #4]
 2206 0018 1B68     		ldr	r3, [r3]
 2207 001a 1B68     		ldr	r3, [r3]
 2208 001c 03F48073 		and	r3, r3, #256
 2209 0020 002B     		cmp	r3, #0
 2210 0022 10D0     		beq	.L132
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   { 
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_PEF);
 2211              		.loc 1 1098 0 is_stmt 1
 2212 0024 7B68     		ldr	r3, [r7, #4]
 2213 0026 1B68     		ldr	r3, [r3]
 2214 0028 0122     		movs	r2, #1
 2215 002a 1A62     		str	r2, [r3, #32]
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_PE;
 2216              		.loc 1 1100 0
 2217 002c 7B68     		ldr	r3, [r7, #4]
 2218 002e 93F86A30 		ldrb	r3, [r3, #106]	@ zero_extendqisi2
 2219 0032 43F00103 		orr	r3, r3, #1
 2220 0036 DAB2     		uxtb	r2, r3
 2221 0038 7B68     		ldr	r3, [r7, #4]
 2222 003a 83F86A20 		strb	r2, [r3, #106]
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->State = HAL_UART_STATE_READY;
 2223              		.loc 1 1102 0
 2224 003e 7B68     		ldr	r3, [r7, #4]
 2225 0040 0122     		movs	r2, #1
 2226 0042 83F86920 		strb	r2, [r3, #105]
 2227              	.L132:
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART frame error interrupt occured --------------------------------------*/
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((__HAL_UART_GET_IT(huart, UART_IT_FE) != RESET) && (__HAL_UART_GET_IT_SOURCE(huart, UART_IT_ER
 2228              		.loc 1 1106 0
 2229 0046 7B68     		ldr	r3, [r7, #4]
 2230 0048 1B68     		ldr	r3, [r3]
 2231 004a DB69     		ldr	r3, [r3, #28]
ARM GAS  /tmp/cckWdj4u.s 			page 59


 2232 004c 03F00203 		and	r3, r3, #2
 2233 0050 002B     		cmp	r3, #0
 2234 0052 17D0     		beq	.L133
 2235              		.loc 1 1106 0 is_stmt 0 discriminator 1
 2236 0054 7B68     		ldr	r3, [r7, #4]
 2237 0056 1B68     		ldr	r3, [r3]
 2238 0058 9B68     		ldr	r3, [r3, #8]
 2239 005a 03F00103 		and	r3, r3, #1
 2240 005e 002B     		cmp	r3, #0
 2241 0060 10D0     		beq	.L133
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   { 
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_FEF);
 2242              		.loc 1 1108 0 is_stmt 1
 2243 0062 7B68     		ldr	r3, [r7, #4]
 2244 0064 1B68     		ldr	r3, [r3]
 2245 0066 0222     		movs	r2, #2
 2246 0068 1A62     		str	r2, [r3, #32]
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_FE;
 2247              		.loc 1 1110 0
 2248 006a 7B68     		ldr	r3, [r7, #4]
 2249 006c 93F86A30 		ldrb	r3, [r3, #106]	@ zero_extendqisi2
 2250 0070 43F00403 		orr	r3, r3, #4
 2251 0074 DAB2     		uxtb	r2, r3
 2252 0076 7B68     		ldr	r3, [r7, #4]
 2253 0078 83F86A20 		strb	r2, [r3, #106]
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->State = HAL_UART_STATE_READY;
 2254              		.loc 1 1112 0
 2255 007c 7B68     		ldr	r3, [r7, #4]
 2256 007e 0122     		movs	r2, #1
 2257 0080 83F86920 		strb	r2, [r3, #105]
 2258              	.L133:
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART noise error interrupt occured --------------------------------------*/
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((__HAL_UART_GET_IT(huart, UART_IT_NE) != RESET) && (__HAL_UART_GET_IT_SOURCE(huart, UART_IT_ER
 2259              		.loc 1 1116 0
 2260 0084 7B68     		ldr	r3, [r7, #4]
 2261 0086 1B68     		ldr	r3, [r3]
 2262 0088 DB69     		ldr	r3, [r3, #28]
 2263 008a 03F00403 		and	r3, r3, #4
 2264 008e 002B     		cmp	r3, #0
 2265 0090 17D0     		beq	.L134
 2266              		.loc 1 1116 0 is_stmt 0 discriminator 1
 2267 0092 7B68     		ldr	r3, [r7, #4]
 2268 0094 1B68     		ldr	r3, [r3]
 2269 0096 9B68     		ldr	r3, [r3, #8]
 2270 0098 03F00103 		and	r3, r3, #1
 2271 009c 002B     		cmp	r3, #0
 2272 009e 10D0     		beq	.L134
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   { 
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_NEF);
 2273              		.loc 1 1118 0 is_stmt 1
 2274 00a0 7B68     		ldr	r3, [r7, #4]
 2275 00a2 1B68     		ldr	r3, [r3]
 2276 00a4 0422     		movs	r2, #4
ARM GAS  /tmp/cckWdj4u.s 			page 60


 2277 00a6 1A62     		str	r2, [r3, #32]
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_NE;    
 2278              		.loc 1 1120 0
 2279 00a8 7B68     		ldr	r3, [r7, #4]
 2280 00aa 93F86A30 		ldrb	r3, [r3, #106]	@ zero_extendqisi2
 2281 00ae 43F00203 		orr	r3, r3, #2
 2282 00b2 DAB2     		uxtb	r2, r3
 2283 00b4 7B68     		ldr	r3, [r7, #4]
 2284 00b6 83F86A20 		strb	r2, [r3, #106]
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->State = HAL_UART_STATE_READY;
 2285              		.loc 1 1122 0
 2286 00ba 7B68     		ldr	r3, [r7, #4]
 2287 00bc 0122     		movs	r2, #1
 2288 00be 83F86920 		strb	r2, [r3, #105]
 2289              	.L134:
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART Over-Run interrupt occured -----------------------------------------*/
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((__HAL_UART_GET_IT(huart, UART_IT_ORE) != RESET) && (__HAL_UART_GET_IT_SOURCE(huart, UART_IT_E
 2290              		.loc 1 1126 0
 2291 00c2 7B68     		ldr	r3, [r7, #4]
 2292 00c4 1B68     		ldr	r3, [r3]
 2293 00c6 DB69     		ldr	r3, [r3, #28]
 2294 00c8 03F00803 		and	r3, r3, #8
 2295 00cc 002B     		cmp	r3, #0
 2296 00ce 17D0     		beq	.L135
 2297              		.loc 1 1126 0 is_stmt 0 discriminator 1
 2298 00d0 7B68     		ldr	r3, [r7, #4]
 2299 00d2 1B68     		ldr	r3, [r3]
 2300 00d4 9B68     		ldr	r3, [r3, #8]
 2301 00d6 03F00103 		and	r3, r3, #1
 2302 00da 002B     		cmp	r3, #0
 2303 00dc 10D0     		beq	.L135
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   { 
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
 2304              		.loc 1 1128 0 is_stmt 1
 2305 00de 7B68     		ldr	r3, [r7, #4]
 2306 00e0 1B68     		ldr	r3, [r3]
 2307 00e2 0822     		movs	r2, #8
 2308 00e4 1A62     		str	r2, [r3, #32]
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_ORE;     
 2309              		.loc 1 1130 0
 2310 00e6 7B68     		ldr	r3, [r7, #4]
 2311 00e8 93F86A30 		ldrb	r3, [r3, #106]	@ zero_extendqisi2
 2312 00ec 43F00803 		orr	r3, r3, #8
 2313 00f0 DAB2     		uxtb	r2, r3
 2314 00f2 7B68     		ldr	r3, [r7, #4]
 2315 00f4 83F86A20 		strb	r2, [r3, #106]
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->State = HAL_UART_STATE_READY;
 2316              		.loc 1 1132 0
 2317 00f8 7B68     		ldr	r3, [r7, #4]
 2318 00fa 0122     		movs	r2, #1
 2319 00fc 83F86920 		strb	r2, [r3, #105]
ARM GAS  /tmp/cckWdj4u.s 			page 61


 2320              	.L135:
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    /* Call UART Error Call back function if need be --------------------------*/
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->ErrorCode != HAL_UART_ERROR_NONE)
 2321              		.loc 1 1136 0
 2322 0100 7B68     		ldr	r3, [r7, #4]
 2323 0102 93F86A30 		ldrb	r3, [r3, #106]	@ zero_extendqisi2
 2324 0106 002B     		cmp	r3, #0
 2325 0108 02D0     		beq	.L136
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_ErrorCallback(huart);
 2326              		.loc 1 1138 0
 2327 010a 7868     		ldr	r0, [r7, #4]
 2328 010c FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2329              	.L136:
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }  
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred -------------------------------------*/
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((__HAL_UART_GET_IT(huart, UART_IT_WUF) != RESET) && (__HAL_UART_GET_IT_SOURCE(huart, UART_IT_W
 2330              		.loc 1 1142 0
 2331 0110 7B68     		ldr	r3, [r7, #4]
 2332 0112 1B68     		ldr	r3, [r3]
 2333 0114 DB69     		ldr	r3, [r3, #28]
 2334 0116 03F48013 		and	r3, r3, #1048576
 2335 011a 002B     		cmp	r3, #0
 2336 011c 12D0     		beq	.L137
 2337              		.loc 1 1142 0 is_stmt 0 discriminator 1
 2338 011e 7B68     		ldr	r3, [r7, #4]
 2339 0120 1B68     		ldr	r3, [r3]
 2340 0122 9B68     		ldr	r3, [r3, #8]
 2341 0124 03F48003 		and	r3, r3, #4194304
 2342 0128 002B     		cmp	r3, #0
 2343 012a 0BD0     		beq	.L137
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   { 
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_WUF);
 2344              		.loc 1 1144 0 is_stmt 1
 2345 012c 7B68     		ldr	r3, [r7, #4]
 2346 012e 1B68     		ldr	r3, [r3]
 2347 0130 4FF48012 		mov	r2, #1048576
 2348 0134 1A62     		str	r2, [r3, #32]
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->State = HAL_UART_STATE_READY;
 2349              		.loc 1 1146 0
 2350 0136 7B68     		ldr	r3, [r7, #4]
 2351 0138 0122     		movs	r2, #1
 2352 013a 83F86920 		strb	r2, [r3, #105]
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_WakeupCallback(huart);
 2353              		.loc 1 1147 0
 2354 013e 7868     		ldr	r0, [r7, #4]
 2355 0140 FFF7FEFF 		bl	HAL_UART_WakeupCallback
 2356              	.L137:
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART in mode Receiver ---------------------------------------------------*/
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((__HAL_UART_GET_IT(huart, UART_IT_RXNE) != RESET) && (__HAL_UART_GET_IT_SOURCE(huart, UART_IT_
 2357              		.loc 1 1151 0
ARM GAS  /tmp/cckWdj4u.s 			page 62


 2358 0144 7B68     		ldr	r3, [r7, #4]
 2359 0146 1B68     		ldr	r3, [r3]
 2360 0148 DB69     		ldr	r3, [r3, #28]
 2361 014a 03F02003 		and	r3, r3, #32
 2362 014e 002B     		cmp	r3, #0
 2363 0150 11D0     		beq	.L138
 2364              		.loc 1 1151 0 is_stmt 0 discriminator 1
 2365 0152 7B68     		ldr	r3, [r7, #4]
 2366 0154 1B68     		ldr	r3, [r3]
 2367 0156 1B68     		ldr	r3, [r3]
 2368 0158 03F02003 		and	r3, r3, #32
 2369 015c 002B     		cmp	r3, #0
 2370 015e 0AD0     		beq	.L138
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   { 
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_Receive_IT(huart);
 2371              		.loc 1 1153 0 is_stmt 1
 2372 0160 7868     		ldr	r0, [r7, #4]
 2373 0162 FFF7FEFF 		bl	UART_Receive_IT
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2374              		.loc 1 1155 0
 2375 0166 7B68     		ldr	r3, [r7, #4]
 2376 0168 1B68     		ldr	r3, [r3]
 2377 016a 7A68     		ldr	r2, [r7, #4]
 2378 016c 1268     		ldr	r2, [r2]
 2379 016e 9269     		ldr	r2, [r2, #24]
 2380 0170 42F00802 		orr	r2, r2, #8
 2381 0174 9A61     		str	r2, [r3, #24]
 2382              	.L138:
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  if((__HAL_UART_GET_IT(huart, UART_IT_TXE) != RESET) &&(__HAL_UART_GET_IT_SOURCE(huart, UART_IT_TXE
 2383              		.loc 1 1160 0
 2384 0176 7B68     		ldr	r3, [r7, #4]
 2385 0178 1B68     		ldr	r3, [r3]
 2386 017a DB69     		ldr	r3, [r3, #28]
 2387 017c 03F08003 		and	r3, r3, #128
 2388 0180 002B     		cmp	r3, #0
 2389 0182 09D0     		beq	.L139
 2390              		.loc 1 1160 0 is_stmt 0 discriminator 1
 2391 0184 7B68     		ldr	r3, [r7, #4]
 2392 0186 1B68     		ldr	r3, [r3]
 2393 0188 1B68     		ldr	r3, [r3]
 2394 018a 03F08003 		and	r3, r3, #128
 2395 018e 002B     		cmp	r3, #0
 2396 0190 02D0     		beq	.L139
1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_Transmit_IT(huart);
 2397              		.loc 1 1162 0 is_stmt 1
 2398 0192 7868     		ldr	r0, [r7, #4]
 2399 0194 FFF7FEFF 		bl	UART_Transmit_IT
 2400              	.L139:
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   } 
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
ARM GAS  /tmp/cckWdj4u.s 			page 63


1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  if((__HAL_UART_GET_IT(huart, UART_IT_TC) != RESET) &&(__HAL_UART_GET_IT_SOURCE(huart, UART_IT_TC) 
 2401              		.loc 1 1166 0
 2402 0198 7B68     		ldr	r3, [r7, #4]
 2403 019a 1B68     		ldr	r3, [r3]
 2404 019c DB69     		ldr	r3, [r3, #28]
 2405 019e 03F04003 		and	r3, r3, #64
 2406 01a2 002B     		cmp	r3, #0
 2407 01a4 09D0     		beq	.L141
 2408              		.loc 1 1166 0 is_stmt 0 discriminator 1
 2409 01a6 7B68     		ldr	r3, [r7, #4]
 2410 01a8 1B68     		ldr	r3, [r3]
 2411 01aa 1B68     		ldr	r3, [r3]
 2412 01ac 03F04003 		and	r3, r3, #64
 2413 01b0 002B     		cmp	r3, #0
 2414 01b2 02D0     		beq	.L141
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 2415              		.loc 1 1168 0 is_stmt 1
 2416 01b4 7868     		ldr	r0, [r7, #4]
 2417 01b6 FFF7FEFF 		bl	UART_EndTransmit_IT
 2418              	.L141:
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   } 
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2419              		.loc 1 1171 0
 2420 01ba 00BF     		nop
 2421 01bc 0837     		adds	r7, r7, #8
 2422              	.LCFI88:
 2423              		.cfi_def_cfa_offset 8
 2424 01be BD46     		mov	sp, r7
 2425              	.LCFI89:
 2426              		.cfi_def_cfa_register 13
 2427              		@ sp needed
 2428 01c0 80BD     		pop	{r7, pc}
 2429              		.cfi_endproc
 2430              	.LFE128:
 2432 01c2 00BF     		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 2433              		.align	2
 2434              		.global	UART_WaitOnFlagUntilTimeout
 2435              		.thumb
 2436              		.thumb_func
 2438              	UART_WaitOnFlagUntilTimeout:
 2439              	.LFB129:
1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart: UART handle
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Flag: specifies the UART flag to check.
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Status: The new Flag status (SET or RESET).
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Timeout: Timeout duration
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 2440              		.loc 1 1183 0
 2441              		.cfi_startproc
ARM GAS  /tmp/cckWdj4u.s 			page 64


 2442              		@ args = 0, pretend = 0, frame = 24
 2443              		@ frame_needed = 1, uses_anonymous_args = 0
 2444 0000 80B5     		push	{r7, lr}
 2445              	.LCFI90:
 2446              		.cfi_def_cfa_offset 8
 2447              		.cfi_offset 7, -8
 2448              		.cfi_offset 14, -4
 2449 0002 86B0     		sub	sp, sp, #24
 2450              	.LCFI91:
 2451              		.cfi_def_cfa_offset 32
 2452 0004 00AF     		add	r7, sp, #0
 2453              	.LCFI92:
 2454              		.cfi_def_cfa_register 7
 2455 0006 F860     		str	r0, [r7, #12]
 2456 0008 B960     		str	r1, [r7, #8]
 2457 000a 3B60     		str	r3, [r7]
 2458 000c 1346     		mov	r3, r2
 2459 000e FB71     		strb	r3, [r7, #7]
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = HAL_GetTick();
 2460              		.loc 1 1184 0
 2461 0010 FFF7FEFF 		bl	HAL_GetTick
 2462 0014 7861     		str	r0, [r7, #20]
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Wait until flag is set */
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(Status == RESET)
 2463              		.loc 1 1187 0
 2464 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2465 0018 002B     		cmp	r3, #0
 2466 001a 7BD1     		bne	.L149
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {    
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while(__HAL_UART_GET_FLAG(huart, Flag) == RESET)
 2467              		.loc 1 1189 0
 2468 001c 38E0     		b	.L144
 2469              	.L147:
1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Check for the Timeout */
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(Timeout != HAL_MAX_DELAY)
 2470              		.loc 1 1192 0
 2471 001e 3B68     		ldr	r3, [r7]
 2472 0020 B3F1FF3F 		cmp	r3, #-1
 2473 0024 34D0     		beq	.L144
1193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if((Timeout == 0) || ((HAL_GetTick()-tickstart) > Timeout))
 2474              		.loc 1 1194 0
 2475 0026 3B68     		ldr	r3, [r7]
 2476 0028 002B     		cmp	r3, #0
 2477 002a 07D0     		beq	.L145
 2478              		.loc 1 1194 0 is_stmt 0 discriminator 1
 2479 002c FFF7FEFF 		bl	HAL_GetTick
 2480 0030 0246     		mov	r2, r0
 2481 0032 7B69     		ldr	r3, [r7, #20]
 2482 0034 D21A     		subs	r2, r2, r3
 2483 0036 3B68     		ldr	r3, [r7]
 2484 0038 9A42     		cmp	r2, r3
 2485 003a 29D9     		bls	.L144
 2486              	.L145:
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
ARM GAS  /tmp/cckWdj4u.s 			page 65


1196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 2487              		.loc 1 1197 0 is_stmt 1
 2488 003c FB68     		ldr	r3, [r7, #12]
 2489 003e 1B68     		ldr	r3, [r3]
 2490 0040 FA68     		ldr	r2, [r7, #12]
 2491 0042 1268     		ldr	r2, [r2]
 2492 0044 1268     		ldr	r2, [r2]
 2493 0046 22F08002 		bic	r2, r2, #128
 2494 004a 1A60     		str	r2, [r3]
1198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 2495              		.loc 1 1198 0
 2496 004c FB68     		ldr	r3, [r7, #12]
 2497 004e 1B68     		ldr	r3, [r3]
 2498 0050 FA68     		ldr	r2, [r7, #12]
 2499 0052 1268     		ldr	r2, [r2]
 2500 0054 1268     		ldr	r2, [r2]
 2501 0056 22F02002 		bic	r2, r2, #32
 2502 005a 1A60     		str	r2, [r3]
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 2503              		.loc 1 1199 0
 2504 005c FB68     		ldr	r3, [r7, #12]
 2505 005e 1B68     		ldr	r3, [r3]
 2506 0060 FA68     		ldr	r2, [r7, #12]
 2507 0062 1268     		ldr	r2, [r2]
 2508 0064 1268     		ldr	r2, [r2]
 2509 0066 22F48072 		bic	r2, r2, #256
 2510 006a 1A60     		str	r2, [r3]
1200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 2511              		.loc 1 1200 0
 2512 006c FB68     		ldr	r3, [r7, #12]
 2513 006e 1B68     		ldr	r3, [r3]
 2514 0070 FA68     		ldr	r2, [r7, #12]
 2515 0072 1268     		ldr	r2, [r2]
 2516 0074 9268     		ldr	r2, [r2, #8]
 2517 0076 22F00102 		bic	r2, r2, #1
 2518 007a 9A60     		str	r2, [r3, #8]
1201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         
1202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->State = HAL_UART_STATE_TIMEOUT;
 2519              		.loc 1 1202 0
 2520 007c FB68     		ldr	r3, [r7, #12]
 2521 007e 0322     		movs	r2, #3
 2522 0080 83F86920 		strb	r2, [r3, #105]
1203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         
1204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Process Unlocked */
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           __HAL_UNLOCK(huart);
 2523              		.loc 1 1205 0
 2524 0084 FB68     		ldr	r3, [r7, #12]
 2525 0086 0022     		movs	r2, #0
 2526 0088 83F86820 		strb	r2, [r3, #104]
1206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           return HAL_TIMEOUT;
 2527              		.loc 1 1207 0
 2528 008c 0323     		movs	r3, #3
 2529 008e 4AE0     		b	.L146
 2530              	.L144:
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
ARM GAS  /tmp/cckWdj4u.s 			page 66


 2531              		.loc 1 1189 0
 2532 0090 FB68     		ldr	r3, [r7, #12]
 2533 0092 1B68     		ldr	r3, [r3]
 2534 0094 DA69     		ldr	r2, [r3, #28]
 2535 0096 BB68     		ldr	r3, [r7, #8]
 2536 0098 1A40     		ands	r2, r2, r3
 2537 009a BB68     		ldr	r3, [r7, #8]
 2538 009c 9A42     		cmp	r2, r3
 2539 009e BED1     		bne	.L147
 2540 00a0 40E0     		b	.L148
 2541              	.L151:
1208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while(__HAL_UART_GET_FLAG(huart, Flag) != RESET)
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Check for the Timeout */
1217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(Timeout != HAL_MAX_DELAY)
 2542              		.loc 1 1217 0
 2543 00a2 3B68     		ldr	r3, [r7]
 2544 00a4 B3F1FF3F 		cmp	r3, #-1
 2545 00a8 34D0     		beq	.L149
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if((Timeout == 0) || ((HAL_GetTick()-tickstart) > Timeout))
 2546              		.loc 1 1219 0
 2547 00aa 3B68     		ldr	r3, [r7]
 2548 00ac 002B     		cmp	r3, #0
 2549 00ae 07D0     		beq	.L150
 2550              		.loc 1 1219 0 is_stmt 0 discriminator 1
 2551 00b0 FFF7FEFF 		bl	HAL_GetTick
 2552 00b4 0246     		mov	r2, r0
 2553 00b6 7B69     		ldr	r3, [r7, #20]
 2554 00b8 D21A     		subs	r2, r2, r3
 2555 00ba 3B68     		ldr	r3, [r7]
 2556 00bc 9A42     		cmp	r2, r3
 2557 00be 29D9     		bls	.L149
 2558              	.L150:
1220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 2559              		.loc 1 1222 0 is_stmt 1
 2560 00c0 FB68     		ldr	r3, [r7, #12]
 2561 00c2 1B68     		ldr	r3, [r3]
 2562 00c4 FA68     		ldr	r2, [r7, #12]
 2563 00c6 1268     		ldr	r2, [r2]
 2564 00c8 1268     		ldr	r2, [r2]
 2565 00ca 22F08002 		bic	r2, r2, #128
 2566 00ce 1A60     		str	r2, [r3]
1223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 2567              		.loc 1 1223 0
 2568 00d0 FB68     		ldr	r3, [r7, #12]
 2569 00d2 1B68     		ldr	r3, [r3]
 2570 00d4 FA68     		ldr	r2, [r7, #12]
 2571 00d6 1268     		ldr	r2, [r2]
ARM GAS  /tmp/cckWdj4u.s 			page 67


 2572 00d8 1268     		ldr	r2, [r2]
 2573 00da 22F02002 		bic	r2, r2, #32
 2574 00de 1A60     		str	r2, [r3]
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 2575              		.loc 1 1224 0
 2576 00e0 FB68     		ldr	r3, [r7, #12]
 2577 00e2 1B68     		ldr	r3, [r3]
 2578 00e4 FA68     		ldr	r2, [r7, #12]
 2579 00e6 1268     		ldr	r2, [r2]
 2580 00e8 1268     		ldr	r2, [r2]
 2581 00ea 22F48072 		bic	r2, r2, #256
 2582 00ee 1A60     		str	r2, [r3]
1225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 2583              		.loc 1 1225 0
 2584 00f0 FB68     		ldr	r3, [r7, #12]
 2585 00f2 1B68     		ldr	r3, [r3]
 2586 00f4 FA68     		ldr	r2, [r7, #12]
 2587 00f6 1268     		ldr	r2, [r2]
 2588 00f8 9268     		ldr	r2, [r2, #8]
 2589 00fa 22F00102 		bic	r2, r2, #1
 2590 00fe 9A60     		str	r2, [r3, #8]
1226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->State = HAL_UART_STATE_TIMEOUT;
 2591              		.loc 1 1227 0
 2592 0100 FB68     		ldr	r3, [r7, #12]
 2593 0102 0322     		movs	r2, #3
 2594 0104 83F86920 		strb	r2, [r3, #105]
1228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         
1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Process Unlocked */
1230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           __HAL_UNLOCK(huart);
 2595              		.loc 1 1230 0
 2596 0108 FB68     		ldr	r3, [r7, #12]
 2597 010a 0022     		movs	r2, #0
 2598 010c 83F86820 		strb	r2, [r3, #104]
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           return HAL_TIMEOUT;
 2599              		.loc 1 1232 0
 2600 0110 0323     		movs	r3, #3
 2601 0112 08E0     		b	.L146
 2602              	.L149:
1214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2603              		.loc 1 1214 0
 2604 0114 FB68     		ldr	r3, [r7, #12]
 2605 0116 1B68     		ldr	r3, [r3]
 2606 0118 DA69     		ldr	r2, [r3, #28]
 2607 011a BB68     		ldr	r3, [r7, #8]
 2608 011c 1A40     		ands	r2, r2, r3
 2609 011e BB68     		ldr	r3, [r7, #8]
 2610 0120 9A42     		cmp	r2, r3
 2611 0122 BED0     		beq	.L151
 2612              	.L148:
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;      
 2613              		.loc 1 1237 0
ARM GAS  /tmp/cckWdj4u.s 			page 68


 2614 0124 0023     		movs	r3, #0
 2615              	.L146:
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2616              		.loc 1 1238 0
 2617 0126 1846     		mov	r0, r3
 2618 0128 1837     		adds	r7, r7, #24
 2619              	.LCFI93:
 2620              		.cfi_def_cfa_offset 8
 2621 012a BD46     		mov	sp, r7
 2622              	.LCFI94:
 2623              		.cfi_def_cfa_register 13
 2624              		@ sp needed
 2625 012c 80BD     		pop	{r7, pc}
 2626              		.cfi_endproc
 2627              	.LFE129:
 2629 012e 00BF     		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 2630              		.align	2
 2631              		.weak	HAL_UART_TxCpltCallback
 2632              		.thumb
 2633              		.thumb_func
 2635              	HAL_UART_TxCpltCallback:
 2636              	.LFB130:
1239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Tx Transfer completed callbacks
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: uart handle
1243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 2637              		.loc 1 1246 0
 2638              		.cfi_startproc
 2639              		@ args = 0, pretend = 0, frame = 8
 2640              		@ frame_needed = 1, uses_anonymous_args = 0
 2641              		@ link register save eliminated.
 2642 0000 80B4     		push	{r7}
 2643              	.LCFI95:
 2644              		.cfi_def_cfa_offset 4
 2645              		.cfi_offset 7, -4
 2646 0002 83B0     		sub	sp, sp, #12
 2647              	.LCFI96:
 2648              		.cfi_def_cfa_offset 16
 2649 0004 00AF     		add	r7, sp, #0
 2650              	.LCFI97:
 2651              		.cfi_def_cfa_register 7
 2652 0006 7860     		str	r0, [r7, #4]
1247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */ 
1250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2653              		.loc 1 1250 0
 2654 0008 00BF     		nop
 2655 000a 0C37     		adds	r7, r7, #12
 2656              	.LCFI98:
 2657              		.cfi_def_cfa_offset 4
 2658 000c BD46     		mov	sp, r7
 2659              	.LCFI99:
ARM GAS  /tmp/cckWdj4u.s 			page 69


 2660              		.cfi_def_cfa_register 13
 2661              		@ sp needed
 2662 000e 5DF8047B 		ldr	r7, [sp], #4
 2663              	.LCFI100:
 2664              		.cfi_restore 7
 2665              		.cfi_def_cfa_offset 0
 2666 0012 7047     		bx	lr
 2667              		.cfi_endproc
 2668              	.LFE130:
 2670              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 2671              		.align	2
 2672              		.weak	HAL_UART_TxHalfCpltCallback
 2673              		.thumb
 2674              		.thumb_func
 2676              	HAL_UART_TxHalfCpltCallback:
 2677              	.LFB131:
1251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart: UART handle
1255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 2678              		.loc 1 1258 0
 2679              		.cfi_startproc
 2680              		@ args = 0, pretend = 0, frame = 8
 2681              		@ frame_needed = 1, uses_anonymous_args = 0
 2682              		@ link register save eliminated.
 2683 0000 80B4     		push	{r7}
 2684              	.LCFI101:
 2685              		.cfi_def_cfa_offset 4
 2686              		.cfi_offset 7, -4
 2687 0002 83B0     		sub	sp, sp, #12
 2688              	.LCFI102:
 2689              		.cfi_def_cfa_offset 16
 2690 0004 00AF     		add	r7, sp, #0
 2691              	.LCFI103:
 2692              		.cfi_def_cfa_register 7
 2693 0006 7860     		str	r0, [r7, #4]
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file
1261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */ 
1262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2694              		.loc 1 1262 0
 2695 0008 00BF     		nop
 2696 000a 0C37     		adds	r7, r7, #12
 2697              	.LCFI104:
 2698              		.cfi_def_cfa_offset 4
 2699 000c BD46     		mov	sp, r7
 2700              	.LCFI105:
 2701              		.cfi_def_cfa_register 13
 2702              		@ sp needed
 2703 000e 5DF8047B 		ldr	r7, [sp], #4
 2704              	.LCFI106:
 2705              		.cfi_restore 7
 2706              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/cckWdj4u.s 			page 70


 2707 0012 7047     		bx	lr
 2708              		.cfi_endproc
 2709              	.LFE131:
 2711              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 2712              		.align	2
 2713              		.weak	HAL_UART_RxCpltCallback
 2714              		.thumb
 2715              		.thumb_func
 2717              	HAL_UART_RxCpltCallback:
 2718              	.LFB132:
1263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Rx Transfer completed callbacks
1266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: uart handle
1267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 2719              		.loc 1 1270 0
 2720              		.cfi_startproc
 2721              		@ args = 0, pretend = 0, frame = 8
 2722              		@ frame_needed = 1, uses_anonymous_args = 0
 2723              		@ link register save eliminated.
 2724 0000 80B4     		push	{r7}
 2725              	.LCFI107:
 2726              		.cfi_def_cfa_offset 4
 2727              		.cfi_offset 7, -4
 2728 0002 83B0     		sub	sp, sp, #12
 2729              	.LCFI108:
 2730              		.cfi_def_cfa_offset 16
 2731 0004 00AF     		add	r7, sp, #0
 2732              	.LCFI109:
 2733              		.cfi_def_cfa_register 7
 2734 0006 7860     		str	r0, [r7, #4]
1271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file
1273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2735              		.loc 1 1274 0
 2736 0008 00BF     		nop
 2737 000a 0C37     		adds	r7, r7, #12
 2738              	.LCFI110:
 2739              		.cfi_def_cfa_offset 4
 2740 000c BD46     		mov	sp, r7
 2741              	.LCFI111:
 2742              		.cfi_def_cfa_register 13
 2743              		@ sp needed
 2744 000e 5DF8047B 		ldr	r7, [sp], #4
 2745              	.LCFI112:
 2746              		.cfi_restore 7
 2747              		.cfi_def_cfa_offset 0
 2748 0012 7047     		bx	lr
 2749              		.cfi_endproc
 2750              	.LFE132:
 2752              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 2753              		.align	2
 2754              		.weak	HAL_UART_RxHalfCpltCallback
ARM GAS  /tmp/cckWdj4u.s 			page 71


 2755              		.thumb
 2756              		.thumb_func
 2758              	HAL_UART_RxHalfCpltCallback:
 2759              	.LFB133:
1275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
1278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart: UART handle
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 2760              		.loc 1 1282 0
 2761              		.cfi_startproc
 2762              		@ args = 0, pretend = 0, frame = 8
 2763              		@ frame_needed = 1, uses_anonymous_args = 0
 2764              		@ link register save eliminated.
 2765 0000 80B4     		push	{r7}
 2766              	.LCFI113:
 2767              		.cfi_def_cfa_offset 4
 2768              		.cfi_offset 7, -4
 2769 0002 83B0     		sub	sp, sp, #12
 2770              	.LCFI114:
 2771              		.cfi_def_cfa_offset 16
 2772 0004 00AF     		add	r7, sp, #0
 2773              	.LCFI115:
 2774              		.cfi_def_cfa_register 7
 2775 0006 7860     		str	r0, [r7, #4]
1283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file
1285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2776              		.loc 1 1286 0
 2777 0008 00BF     		nop
 2778 000a 0C37     		adds	r7, r7, #12
 2779              	.LCFI116:
 2780              		.cfi_def_cfa_offset 4
 2781 000c BD46     		mov	sp, r7
 2782              	.LCFI117:
 2783              		.cfi_def_cfa_register 13
 2784              		@ sp needed
 2785 000e 5DF8047B 		ldr	r7, [sp], #4
 2786              	.LCFI118:
 2787              		.cfi_restore 7
 2788              		.cfi_def_cfa_offset 0
 2789 0012 7047     		bx	lr
 2790              		.cfi_endproc
 2791              	.LFE133:
 2793              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 2794              		.align	2
 2795              		.weak	HAL_UART_ErrorCallback
 2796              		.thumb
 2797              		.thumb_func
 2799              	HAL_UART_ErrorCallback:
 2800              	.LFB134:
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
ARM GAS  /tmp/cckWdj4u.s 			page 72


1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART error callbacks
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: uart handle
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 2801              		.loc 1 1294 0
 2802              		.cfi_startproc
 2803              		@ args = 0, pretend = 0, frame = 8
 2804              		@ frame_needed = 1, uses_anonymous_args = 0
 2805              		@ link register save eliminated.
 2806 0000 80B4     		push	{r7}
 2807              	.LCFI119:
 2808              		.cfi_def_cfa_offset 4
 2809              		.cfi_offset 7, -4
 2810 0002 83B0     		sub	sp, sp, #12
 2811              	.LCFI120:
 2812              		.cfi_def_cfa_offset 16
 2813 0004 00AF     		add	r7, sp, #0
 2814              	.LCFI121:
 2815              		.cfi_def_cfa_register 7
 2816 0006 7860     		str	r0, [r7, #4]
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file
1297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */ 
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2817              		.loc 1 1298 0
 2818 0008 00BF     		nop
 2819 000a 0C37     		adds	r7, r7, #12
 2820              	.LCFI122:
 2821              		.cfi_def_cfa_offset 4
 2822 000c BD46     		mov	sp, r7
 2823              	.LCFI123:
 2824              		.cfi_def_cfa_register 13
 2825              		@ sp needed
 2826 000e 5DF8047B 		ldr	r7, [sp], #4
 2827              	.LCFI124:
 2828              		.cfi_restore 7
 2829              		.cfi_def_cfa_offset 0
 2830 0012 7047     		bx	lr
 2831              		.cfi_endproc
 2832              	.LFE134:
 2834              		.section	.text.HAL_UART_WakeupCallback,"ax",%progbits
 2835              		.align	2
 2836              		.weak	HAL_UART_WakeupCallback
 2837              		.thumb
 2838              		.thumb_func
 2840              	HAL_UART_WakeupCallback:
 2841              	.LFB135:
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART wakeup from Stop mode callback
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: uart handle
1303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  __weak void HAL_UART_WakeupCallback(UART_HandleTypeDef *huart)
1306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
ARM GAS  /tmp/cckWdj4u.s 			page 73


 2842              		.loc 1 1306 0
 2843              		.cfi_startproc
 2844              		@ args = 0, pretend = 0, frame = 8
 2845              		@ frame_needed = 1, uses_anonymous_args = 0
 2846              		@ link register save eliminated.
 2847 0000 80B4     		push	{r7}
 2848              	.LCFI125:
 2849              		.cfi_def_cfa_offset 4
 2850              		.cfi_offset 7, -4
 2851 0002 83B0     		sub	sp, sp, #12
 2852              	.LCFI126:
 2853              		.cfi_def_cfa_offset 16
 2854 0004 00AF     		add	r7, sp, #0
 2855              	.LCFI127:
 2856              		.cfi_def_cfa_register 7
 2857 0006 7860     		str	r0, [r7, #4]
1307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_WakeupCallback can be implemented in the user file
1309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */ 
1310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2858              		.loc 1 1310 0
 2859 0008 00BF     		nop
 2860 000a 0C37     		adds	r7, r7, #12
 2861              	.LCFI128:
 2862              		.cfi_def_cfa_offset 4
 2863 000c BD46     		mov	sp, r7
 2864              	.LCFI129:
 2865              		.cfi_def_cfa_register 13
 2866              		@ sp needed
 2867 000e 5DF8047B 		ldr	r7, [sp], #4
 2868              	.LCFI130:
 2869              		.cfi_restore 7
 2870              		.cfi_def_cfa_offset 0
 2871 0012 7047     		bx	lr
 2872              		.cfi_endproc
 2873              	.LFE135:
 2875              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 2876              		.align	2
 2877              		.global	HAL_MultiProcessor_EnableMuteMode
 2878              		.thumb
 2879              		.thumb_func
 2881              	HAL_MultiProcessor_EnableMuteMode:
 2882              	.LFB136:
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
1314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions 
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  @brief   UART control functions 
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim   
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
1321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================  
1323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
ARM GAS  /tmp/cckWdj4u.s 			page 74


1325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
1328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
1330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features        
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization 
1332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) UART_Wakeup_AddressConfig() API configures the wake-up from stop mode parameters 
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter  
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver  
1335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters           
1336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
1337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Enable UART in mute mode (doesn't mean UART enters mute mode;
1342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called)
1343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: UART handle
1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {  
 2883              		.loc 1 1347 0
 2884              		.cfi_startproc
 2885              		@ args = 0, pretend = 0, frame = 8
 2886              		@ frame_needed = 1, uses_anonymous_args = 0
 2887 0000 80B5     		push	{r7, lr}
 2888              	.LCFI131:
 2889              		.cfi_def_cfa_offset 8
 2890              		.cfi_offset 7, -8
 2891              		.cfi_offset 14, -4
 2892 0002 82B0     		sub	sp, sp, #8
 2893              	.LCFI132:
 2894              		.cfi_def_cfa_offset 16
 2895 0004 00AF     		add	r7, sp, #0
 2896              	.LCFI133:
 2897              		.cfi_def_cfa_register 7
 2898 0006 7860     		str	r0, [r7, #4]
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 2899              		.loc 1 1349 0
 2900 0008 7B68     		ldr	r3, [r7, #4]
 2901 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 2902 000e 012B     		cmp	r3, #1
 2903 0010 01D1     		bne	.L159
 2904              		.loc 1 1349 0 is_stmt 0 discriminator 1
 2905 0012 0223     		movs	r3, #2
 2906 0014 17E0     		b	.L160
 2907              	.L159:
 2908              		.loc 1 1349 0 discriminator 2
 2909 0016 7B68     		ldr	r3, [r7, #4]
 2910 0018 0122     		movs	r2, #1
 2911 001a 83F86820 		strb	r2, [r3, #104]
1350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 2912              		.loc 1 1351 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/cckWdj4u.s 			page 75


 2913 001e 7B68     		ldr	r3, [r7, #4]
 2914 0020 0222     		movs	r2, #2
 2915 0022 83F86920 		strb	r2, [r3, #105]
1352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
1354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR1 |= USART_CR1_MME;
 2916              		.loc 1 1354 0 discriminator 2
 2917 0026 7B68     		ldr	r3, [r7, #4]
 2918 0028 1B68     		ldr	r3, [r3]
 2919 002a 7A68     		ldr	r2, [r7, #4]
 2920 002c 1268     		ldr	r2, [r2]
 2921 002e 1268     		ldr	r2, [r2]
 2922 0030 42F40052 		orr	r2, r2, #8192
 2923 0034 1A60     		str	r2, [r3]
1355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->State = HAL_UART_STATE_READY;
 2924              		.loc 1 1356 0 discriminator 2
 2925 0036 7B68     		ldr	r3, [r7, #4]
 2926 0038 0122     		movs	r2, #1
 2927 003a 83F86920 		strb	r2, [r3, #105]
1357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 2928              		.loc 1 1358 0 discriminator 2
 2929 003e 7868     		ldr	r0, [r7, #4]
 2930 0040 FFF7FEFF 		bl	UART_CheckIdleState
 2931 0044 0346     		mov	r3, r0
 2932              	.L160:
1359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2933              		.loc 1 1359 0
 2934 0046 1846     		mov	r0, r3
 2935 0048 0837     		adds	r7, r7, #8
 2936              	.LCFI134:
 2937              		.cfi_def_cfa_offset 8
 2938 004a BD46     		mov	sp, r7
 2939              	.LCFI135:
 2940              		.cfi_def_cfa_register 13
 2941              		@ sp needed
 2942 004c 80BD     		pop	{r7, pc}
 2943              		.cfi_endproc
 2944              	.LFE136:
 2946 004e 00BF     		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 2947              		.align	2
 2948              		.global	HAL_MultiProcessor_DisableMuteMode
 2949              		.thumb
 2950              		.thumb_func
 2952              	HAL_MultiProcessor_DisableMuteMode:
 2953              	.LFB137:
1360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Disable UART mute mode (doesn't mean it actually wakes up the software,
1363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * as it may not have been in mute mode at this very moment).
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: uart handle
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** { 
 2954              		.loc 1 1368 0
ARM GAS  /tmp/cckWdj4u.s 			page 76


 2955              		.cfi_startproc
 2956              		@ args = 0, pretend = 0, frame = 8
 2957              		@ frame_needed = 1, uses_anonymous_args = 0
 2958 0000 80B5     		push	{r7, lr}
 2959              	.LCFI136:
 2960              		.cfi_def_cfa_offset 8
 2961              		.cfi_offset 7, -8
 2962              		.cfi_offset 14, -4
 2963 0002 82B0     		sub	sp, sp, #8
 2964              	.LCFI137:
 2965              		.cfi_def_cfa_offset 16
 2966 0004 00AF     		add	r7, sp, #0
 2967              	.LCFI138:
 2968              		.cfi_def_cfa_register 7
 2969 0006 7860     		str	r0, [r7, #4]
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 2970              		.loc 1 1370 0
 2971 0008 7B68     		ldr	r3, [r7, #4]
 2972 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 2973 000e 012B     		cmp	r3, #1
 2974 0010 01D1     		bne	.L162
 2975              		.loc 1 1370 0 is_stmt 0 discriminator 1
 2976 0012 0223     		movs	r3, #2
 2977 0014 17E0     		b	.L163
 2978              	.L162:
 2979              		.loc 1 1370 0 discriminator 2
 2980 0016 7B68     		ldr	r3, [r7, #4]
 2981 0018 0122     		movs	r2, #1
 2982 001a 83F86820 		strb	r2, [r3, #104]
1371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 2983              		.loc 1 1372 0 is_stmt 1 discriminator 2
 2984 001e 7B68     		ldr	r3, [r7, #4]
 2985 0020 0222     		movs	r2, #2
 2986 0022 83F86920 		strb	r2, [r3, #105]
1373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    /* Disable USART mute mode by clearing the MME bit in the CR1 register */
1375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR1 &= ~(USART_CR1_MME);
 2987              		.loc 1 1375 0 discriminator 2
 2988 0026 7B68     		ldr	r3, [r7, #4]
 2989 0028 1B68     		ldr	r3, [r3]
 2990 002a 7A68     		ldr	r2, [r7, #4]
 2991 002c 1268     		ldr	r2, [r2]
 2992 002e 1268     		ldr	r2, [r2]
 2993 0030 22F40052 		bic	r2, r2, #8192
 2994 0034 1A60     		str	r2, [r3]
1376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->State = HAL_UART_STATE_READY;
 2995              		.loc 1 1377 0 discriminator 2
 2996 0036 7B68     		ldr	r3, [r7, #4]
 2997 0038 0122     		movs	r2, #1
 2998 003a 83F86920 		strb	r2, [r3, #105]
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 2999              		.loc 1 1379 0 discriminator 2
 3000 003e 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/cckWdj4u.s 			page 77


 3001 0040 FFF7FEFF 		bl	UART_CheckIdleState
 3002 0044 0346     		mov	r3, r0
 3003              	.L163:
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3004              		.loc 1 1380 0
 3005 0046 1846     		mov	r0, r3
 3006 0048 0837     		adds	r7, r7, #8
 3007              	.LCFI139:
 3008              		.cfi_def_cfa_offset 8
 3009 004a BD46     		mov	sp, r7
 3010              	.LCFI140:
 3011              		.cfi_def_cfa_register 13
 3012              		@ sp needed
 3013 004c 80BD     		pop	{r7, pc}
 3014              		.cfi_endproc
 3015              	.LFE137:
 3017 004e 00BF     		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3018              		.align	2
 3019              		.global	HAL_MultiProcessor_EnterMuteMode
 3020              		.thumb
 3021              		.thumb_func
 3023              	HAL_MultiProcessor_EnterMuteMode:
 3024              	.LFB138:
1381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called. 
1385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: uart handle
1386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {    
 3025              		.loc 1 1389 0
 3026              		.cfi_startproc
 3027              		@ args = 0, pretend = 0, frame = 8
 3028              		@ frame_needed = 1, uses_anonymous_args = 0
 3029              		@ link register save eliminated.
 3030 0000 80B4     		push	{r7}
 3031              	.LCFI141:
 3032              		.cfi_def_cfa_offset 4
 3033              		.cfi_offset 7, -4
 3034 0002 83B0     		sub	sp, sp, #12
 3035              	.LCFI142:
 3036              		.cfi_def_cfa_offset 16
 3037 0004 00AF     		add	r7, sp, #0
 3038              	.LCFI143:
 3039              		.cfi_def_cfa_register 7
 3040 0006 7860     		str	r0, [r7, #4]
1390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 3041              		.loc 1 1390 0
 3042 0008 7B68     		ldr	r3, [r7, #4]
 3043 000a 1B68     		ldr	r3, [r3]
 3044 000c 7A68     		ldr	r2, [r7, #4]
 3045 000e 1268     		ldr	r2, [r2]
 3046 0010 9269     		ldr	r2, [r2, #24]
 3047 0012 42F00402 		orr	r2, r2, #4
 3048 0016 9A61     		str	r2, [r3, #24]
ARM GAS  /tmp/cckWdj4u.s 			page 78


1391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3049              		.loc 1 1391 0
 3050 0018 00BF     		nop
 3051 001a 0C37     		adds	r7, r7, #12
 3052              	.LCFI144:
 3053              		.cfi_def_cfa_offset 4
 3054 001c BD46     		mov	sp, r7
 3055              	.LCFI145:
 3056              		.cfi_def_cfa_register 13
 3057              		@ sp needed
 3058 001e 5DF8047B 		ldr	r7, [sp], #4
 3059              	.LCFI146:
 3060              		.cfi_restore 7
 3061              		.cfi_def_cfa_offset 0
 3062 0022 7047     		bx	lr
 3063              		.cfi_endproc
 3064              	.LFE138:
 3066              		.section	.text.UART_SetConfig,"ax",%progbits
 3067              		.align	2
 3068              		.global	UART_SetConfig
 3069              		.thumb
 3070              		.thumb_func
 3072              	UART_SetConfig:
 3073              	.LFB139:
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Configure the UART peripheral 
1395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: uart handle
1396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
1399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3074              		.loc 1 1399 0
 3075              		.cfi_startproc
 3076              		@ args = 0, pretend = 0, frame = 24
 3077              		@ frame_needed = 1, uses_anonymous_args = 0
 3078 0000 90B5     		push	{r4, r7, lr}
 3079              	.LCFI147:
 3080              		.cfi_def_cfa_offset 12
 3081              		.cfi_offset 4, -12
 3082              		.cfi_offset 7, -8
 3083              		.cfi_offset 14, -4
 3084 0002 87B0     		sub	sp, sp, #28
 3085              	.LCFI148:
 3086              		.cfi_def_cfa_offset 40
 3087 0004 00AF     		add	r7, sp, #0
 3088              	.LCFI149:
 3089              		.cfi_def_cfa_register 7
 3090 0006 7860     		str	r0, [r7, #4]
1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000;
 3091              		.loc 1 1400 0
 3092 0008 0023     		movs	r3, #0
 3093 000a FB60     		str	r3, [r7, #12]
1401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
 3094              		.loc 1 1401 0
 3095 000c 1023     		movs	r3, #16
 3096 000e FB75     		strb	r3, [r7, #23]
ARM GAS  /tmp/cckWdj4u.s 			page 79


1402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000;
 3097              		.loc 1 1402 0
 3098 0010 0023     		movs	r3, #0
 3099 0012 7B81     		strh	r3, [r7, #10]	@ movhi
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t usartdiv                   = 0x0000;
 3100              		.loc 1 1403 0
 3101 0014 0023     		movs	r3, #0
 3102 0016 BB82     		strh	r3, [r7, #20]	@ movhi
1404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;  
 3103              		.loc 1 1404 0
 3104 0018 0023     		movs	r3, #0
 3105 001a FB74     		strb	r3, [r7, #19]
1405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */ 
1407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));  
1408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
1410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
1412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
1413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ONEBIT_SAMPLING(huart->Init.OneBitSampling));
1414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));   
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure       
1419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  the UART Word Length, Parity, Mode and oversampling: 
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set the M bits according to huart->Init.WordLength value 
1421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set PCE and PS bits according to huart->Init.Parity value
1422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set TE and RE bits according to huart->Init.Mode value
1423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
1424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 3106              		.loc 1 1424 0
 3107 001c 7B68     		ldr	r3, [r7, #4]
 3108 001e 9A68     		ldr	r2, [r3, #8]
 3109 0020 7B68     		ldr	r3, [r7, #4]
 3110 0022 1B69     		ldr	r3, [r3, #16]
 3111 0024 1A43     		orrs	r2, r2, r3
 3112 0026 7B68     		ldr	r3, [r7, #4]
 3113 0028 5B69     		ldr	r3, [r3, #20]
 3114 002a 1A43     		orrs	r2, r2, r3
 3115 002c 7B68     		ldr	r3, [r7, #4]
 3116 002e DB69     		ldr	r3, [r3, #28]
 3117 0030 1343     		orrs	r3, r3, r2
 3118 0032 FB60     		str	r3, [r7, #12]
1425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 3119              		.loc 1 1425 0
 3120 0034 7B68     		ldr	r3, [r7, #4]
 3121 0036 1A68     		ldr	r2, [r3]
 3122 0038 7B68     		ldr	r3, [r7, #4]
 3123 003a 1B68     		ldr	r3, [r3]
 3124 003c 1B68     		ldr	r3, [r3]
 3125 003e 23F41643 		bic	r3, r3, #38400
 3126 0042 23F00C03 		bic	r3, r3, #12
 3127 0046 F968     		ldr	r1, [r7, #12]
 3128 0048 0B43     		orrs	r3, r3, r1
 3129 004a 1360     		str	r3, [r2]
ARM GAS  /tmp/cckWdj4u.s 			page 80


1426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according 
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    * to huart->Init.StopBits value */
1430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 3130              		.loc 1 1430 0
 3131 004c 7B68     		ldr	r3, [r7, #4]
 3132 004e 1B68     		ldr	r3, [r3]
 3133 0050 7A68     		ldr	r2, [r7, #4]
 3134 0052 1268     		ldr	r2, [r2]
 3135 0054 5268     		ldr	r2, [r2, #4]
 3136 0056 22F44051 		bic	r1, r2, #12288
 3137 005a 7A68     		ldr	r2, [r7, #4]
 3138 005c D268     		ldr	r2, [r2, #12]
 3139 005e 0A43     		orrs	r2, r2, r1
 3140 0060 5A60     		str	r2, [r3, #4]
1431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/    
1433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Configure 
1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according 
1435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *   to huart->Init.HwFlowCtl value 
1436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    * - one-bit sampling method versus three samples' majority rule according
1437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *   to huart->Init.OneBitSampling */
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
 3141              		.loc 1 1438 0
 3142 0062 7B68     		ldr	r3, [r7, #4]
 3143 0064 9A69     		ldr	r2, [r3, #24]
 3144 0066 7B68     		ldr	r3, [r7, #4]
 3145 0068 1B6A     		ldr	r3, [r3, #32]
 3146 006a 1343     		orrs	r3, r3, r2
 3147 006c FB60     		str	r3, [r7, #12]
1439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 3148              		.loc 1 1439 0
 3149 006e 7B68     		ldr	r3, [r7, #4]
 3150 0070 1B68     		ldr	r3, [r3]
 3151 0072 7A68     		ldr	r2, [r7, #4]
 3152 0074 1268     		ldr	r2, [r2]
 3153 0076 9268     		ldr	r2, [r2, #8]
 3154 0078 22F43061 		bic	r1, r2, #2816
 3155 007c FA68     		ldr	r2, [r7, #12]
 3156 007e 0A43     		orrs	r2, r2, r1
 3157 0080 9A60     		str	r2, [r3, #8]
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/  
1442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_GETCLOCKSOURCE(huart, clocksource);
 3158              		.loc 1 1442 0
 3159 0082 7B68     		ldr	r3, [r7, #4]
 3160 0084 1B68     		ldr	r3, [r3]
 3161 0086 AF4A     		ldr	r2, .L219
 3162 0088 9342     		cmp	r3, r2
 3163 008a 1ED1     		bne	.L166
 3164              		.loc 1 1442 0 is_stmt 0 discriminator 1
 3165 008c AE4B     		ldr	r3, .L219+4
 3166 008e 1B6B     		ldr	r3, [r3, #48]
 3167 0090 03F00303 		and	r3, r3, #3
 3168 0094 032B     		cmp	r3, #3
 3169 0096 00F2AF80 		bhi	.L173
ARM GAS  /tmp/cckWdj4u.s 			page 81


 3170 009a 01A2     		adr	r2, .L169
 3171 009c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3172              		.p2align 2
 3173              	.L169:
 3174 00a0 B1000000 		.word	.L168+1
 3175 00a4 BD000000 		.word	.L170+1
 3176 00a8 C3000000 		.word	.L171+1
 3177 00ac B7000000 		.word	.L172+1
 3178              		.p2align 1
 3179              	.L168:
 3180              		.loc 1 1442 0 discriminator 3
 3181 00b0 0123     		movs	r3, #1
 3182 00b2 FB75     		strb	r3, [r7, #23]
 3183 00b4 9FE0     		b	.L218
 3184              	.L172:
 3185              		.loc 1 1442 0 discriminator 6
 3186 00b6 0223     		movs	r3, #2
 3187 00b8 FB75     		strb	r3, [r7, #23]
 3188 00ba 9CE0     		b	.L218
 3189              	.L170:
 3190              		.loc 1 1442 0 discriminator 4
 3191 00bc 0423     		movs	r3, #4
 3192 00be FB75     		strb	r3, [r7, #23]
 3193 00c0 99E0     		b	.L218
 3194              	.L171:
 3195              		.loc 1 1442 0 discriminator 5
 3196 00c2 0823     		movs	r3, #8
 3197 00c4 FB75     		strb	r3, [r7, #23]
 3198 00c6 00BF     		nop
 3199 00c8 95E0     		b	.L218
 3200              	.L166:
 3201              		.loc 1 1442 0 discriminator 2
 3202 00ca 7B68     		ldr	r3, [r7, #4]
 3203 00cc 1B68     		ldr	r3, [r3]
 3204 00ce 9F4A     		ldr	r2, .L219+8
 3205 00d0 9342     		cmp	r3, r2
 3206 00d2 20D1     		bne	.L174
 3207              		.loc 1 1442 0 discriminator 7
 3208 00d4 9C4B     		ldr	r3, .L219+4
 3209 00d6 1B6B     		ldr	r3, [r3, #48]
 3210 00d8 03F44033 		and	r3, r3, #196608
 3211 00dc B3F5803F 		cmp	r3, #65536
 3212 00e0 12D0     		beq	.L176
 3213 00e2 B3F5803F 		cmp	r3, #65536
 3214 00e6 02D8     		bhi	.L177
 3215 00e8 002B     		cmp	r3, #0
 3216 00ea 07D0     		beq	.L178
 3217              		.loc 1 1442 0
 3218 00ec 84E0     		b	.L173
 3219              	.L177:
 3220              		.loc 1 1442 0 discriminator 7
 3221 00ee B3F5003F 		cmp	r3, #131072
 3222 00f2 0CD0     		beq	.L179
 3223 00f4 B3F5403F 		cmp	r3, #196608
 3224 00f8 03D0     		beq	.L180
 3225              		.loc 1 1442 0
 3226 00fa 7DE0     		b	.L173
ARM GAS  /tmp/cckWdj4u.s 			page 82


 3227              	.L178:
 3228              		.loc 1 1442 0 discriminator 9
 3229 00fc 0023     		movs	r3, #0
 3230 00fe FB75     		strb	r3, [r7, #23]
 3231 0100 79E0     		b	.L218
 3232              	.L180:
 3233              		.loc 1 1442 0 discriminator 12
 3234 0102 0223     		movs	r3, #2
 3235 0104 FB75     		strb	r3, [r7, #23]
 3236 0106 76E0     		b	.L218
 3237              	.L176:
 3238              		.loc 1 1442 0 discriminator 10
 3239 0108 0423     		movs	r3, #4
 3240 010a FB75     		strb	r3, [r7, #23]
 3241 010c 73E0     		b	.L218
 3242              	.L179:
 3243              		.loc 1 1442 0 discriminator 11
 3244 010e 0823     		movs	r3, #8
 3245 0110 FB75     		strb	r3, [r7, #23]
 3246 0112 00BF     		nop
 3247 0114 6FE0     		b	.L218
 3248              	.L174:
 3249              		.loc 1 1442 0 discriminator 8
 3250 0116 7B68     		ldr	r3, [r7, #4]
 3251 0118 1B68     		ldr	r3, [r3]
 3252 011a 8D4A     		ldr	r2, .L219+12
 3253 011c 9342     		cmp	r3, r2
 3254 011e 20D1     		bne	.L181
 3255              		.loc 1 1442 0 discriminator 13
 3256 0120 894B     		ldr	r3, .L219+4
 3257 0122 1B6B     		ldr	r3, [r3, #48]
 3258 0124 03F44023 		and	r3, r3, #786432
 3259 0128 B3F5802F 		cmp	r3, #262144
 3260 012c 12D0     		beq	.L183
 3261 012e B3F5802F 		cmp	r3, #262144
 3262 0132 02D8     		bhi	.L184
 3263 0134 002B     		cmp	r3, #0
 3264 0136 07D0     		beq	.L185
 3265              		.loc 1 1442 0
 3266 0138 5EE0     		b	.L173
 3267              	.L184:
 3268              		.loc 1 1442 0 discriminator 13
 3269 013a B3F5002F 		cmp	r3, #524288
 3270 013e 0CD0     		beq	.L186
 3271 0140 B3F5402F 		cmp	r3, #786432
 3272 0144 03D0     		beq	.L187
 3273              		.loc 1 1442 0
 3274 0146 57E0     		b	.L173
 3275              	.L185:
 3276              		.loc 1 1442 0 discriminator 15
 3277 0148 0023     		movs	r3, #0
 3278 014a FB75     		strb	r3, [r7, #23]
 3279 014c 53E0     		b	.L218
 3280              	.L187:
 3281              		.loc 1 1442 0 discriminator 18
 3282 014e 0223     		movs	r3, #2
 3283 0150 FB75     		strb	r3, [r7, #23]
ARM GAS  /tmp/cckWdj4u.s 			page 83


 3284 0152 50E0     		b	.L218
 3285              	.L183:
 3286              		.loc 1 1442 0 discriminator 16
 3287 0154 0423     		movs	r3, #4
 3288 0156 FB75     		strb	r3, [r7, #23]
 3289 0158 4DE0     		b	.L218
 3290              	.L186:
 3291              		.loc 1 1442 0 discriminator 17
 3292 015a 0823     		movs	r3, #8
 3293 015c FB75     		strb	r3, [r7, #23]
 3294 015e 00BF     		nop
 3295 0160 49E0     		b	.L218
 3296              	.L181:
 3297              		.loc 1 1442 0 discriminator 14
 3298 0162 7B68     		ldr	r3, [r7, #4]
 3299 0164 1B68     		ldr	r3, [r3]
 3300 0166 7B4A     		ldr	r2, .L219+16
 3301 0168 9342     		cmp	r3, r2
 3302 016a 20D1     		bne	.L188
 3303              		.loc 1 1442 0 discriminator 19
 3304 016c 764B     		ldr	r3, .L219+4
 3305 016e 1B6B     		ldr	r3, [r3, #48]
 3306 0170 03F44013 		and	r3, r3, #3145728
 3307 0174 B3F5801F 		cmp	r3, #1048576
 3308 0178 12D0     		beq	.L190
 3309 017a B3F5801F 		cmp	r3, #1048576
 3310 017e 02D8     		bhi	.L191
 3311 0180 002B     		cmp	r3, #0
 3312 0182 07D0     		beq	.L192
 3313              		.loc 1 1442 0
 3314 0184 38E0     		b	.L173
 3315              	.L191:
 3316              		.loc 1 1442 0 discriminator 19
 3317 0186 B3F5001F 		cmp	r3, #2097152
 3318 018a 0CD0     		beq	.L193
 3319 018c B3F5401F 		cmp	r3, #3145728
 3320 0190 03D0     		beq	.L194
 3321              		.loc 1 1442 0
 3322 0192 31E0     		b	.L173
 3323              	.L192:
 3324              		.loc 1 1442 0 discriminator 21
 3325 0194 0023     		movs	r3, #0
 3326 0196 FB75     		strb	r3, [r7, #23]
 3327 0198 2DE0     		b	.L218
 3328              	.L194:
 3329              		.loc 1 1442 0 discriminator 24
 3330 019a 0223     		movs	r3, #2
 3331 019c FB75     		strb	r3, [r7, #23]
 3332 019e 2AE0     		b	.L218
 3333              	.L190:
 3334              		.loc 1 1442 0 discriminator 22
 3335 01a0 0423     		movs	r3, #4
 3336 01a2 FB75     		strb	r3, [r7, #23]
 3337 01a4 27E0     		b	.L218
 3338              	.L193:
 3339              		.loc 1 1442 0 discriminator 23
 3340 01a6 0823     		movs	r3, #8
ARM GAS  /tmp/cckWdj4u.s 			page 84


 3341 01a8 FB75     		strb	r3, [r7, #23]
 3342 01aa 00BF     		nop
 3343 01ac 23E0     		b	.L218
 3344              	.L188:
 3345              		.loc 1 1442 0 discriminator 20
 3346 01ae 7B68     		ldr	r3, [r7, #4]
 3347 01b0 1B68     		ldr	r3, [r3]
 3348 01b2 694A     		ldr	r2, .L219+20
 3349 01b4 9342     		cmp	r3, r2
 3350 01b6 1FD1     		bne	.L173
 3351              		.loc 1 1442 0 discriminator 25
 3352 01b8 634B     		ldr	r3, .L219+4
 3353 01ba 1B6B     		ldr	r3, [r3, #48]
 3354 01bc 03F44003 		and	r3, r3, #12582912
 3355 01c0 B3F5800F 		cmp	r3, #4194304
 3356 01c4 12D0     		beq	.L195
 3357 01c6 B3F5800F 		cmp	r3, #4194304
 3358 01ca 02D8     		bhi	.L196
 3359 01cc 002B     		cmp	r3, #0
 3360 01ce 07D0     		beq	.L197
 3361              		.loc 1 1442 0
 3362 01d0 12E0     		b	.L173
 3363              	.L196:
 3364              		.loc 1 1442 0 discriminator 25
 3365 01d2 B3F5000F 		cmp	r3, #8388608
 3366 01d6 0CD0     		beq	.L198
 3367 01d8 B3F5400F 		cmp	r3, #12582912
 3368 01dc 03D0     		beq	.L199
 3369              		.loc 1 1442 0
 3370 01de 0BE0     		b	.L173
 3371              	.L197:
 3372              		.loc 1 1442 0 discriminator 26
 3373 01e0 0023     		movs	r3, #0
 3374 01e2 FB75     		strb	r3, [r7, #23]
 3375 01e4 07E0     		b	.L218
 3376              	.L199:
 3377              		.loc 1 1442 0 discriminator 29
 3378 01e6 0223     		movs	r3, #2
 3379 01e8 FB75     		strb	r3, [r7, #23]
 3380 01ea 04E0     		b	.L218
 3381              	.L195:
 3382              		.loc 1 1442 0 discriminator 27
 3383 01ec 0423     		movs	r3, #4
 3384 01ee FB75     		strb	r3, [r7, #23]
 3385 01f0 01E0     		b	.L218
 3386              	.L198:
 3387              		.loc 1 1442 0 discriminator 28
 3388 01f2 0823     		movs	r3, #8
 3389 01f4 FB75     		strb	r3, [r7, #23]
 3390              	.L218:
 3391              		.loc 1 1442 0
 3392 01f6 00BF     		nop
 3393              	.L173:
1443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check the Over Sampling to set Baud Rate Register */
1445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 3394              		.loc 1 1445 0 is_stmt 1
ARM GAS  /tmp/cckWdj4u.s 			page 85


 3395 01f8 7B68     		ldr	r3, [r7, #4]
 3396 01fa DB69     		ldr	r3, [r3, #28]
 3397 01fc B3F5004F 		cmp	r3, #32768
 3398 0200 5AD1     		bne	.L200
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (clocksource)
 3399              		.loc 1 1447 0
 3400 0202 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3401 0204 082B     		cmp	r3, #8
 3402 0206 42D8     		bhi	.L201
 3403 0208 01A2     		adr	r2, .L203
 3404 020a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3405 020e 00BF     		.p2align 2
 3406              	.L203:
 3407 0210 35020000 		.word	.L202+1
 3408 0214 49020000 		.word	.L204+1
 3409 0218 5D020000 		.word	.L205+1
 3410 021c 8F020000 		.word	.L201+1
 3411 0220 6B020000 		.word	.L206+1
 3412 0224 8F020000 		.word	.L201+1
 3413 0228 8F020000 		.word	.L201+1
 3414 022c 8F020000 		.word	.L201+1
 3415 0230 7F020000 		.word	.L207+1
 3416              		.p2align 1
 3417              	.L202:
1448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(__DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 3418              		.loc 1 1450 0
 3419 0234 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3420 0238 0346     		mov	r3, r0
 3421 023a 5A00     		lsls	r2, r3, #1
 3422 023c 7B68     		ldr	r3, [r7, #4]
 3423 023e 5B68     		ldr	r3, [r3, #4]
 3424 0240 B2FBF3F3 		udiv	r3, r2, r3
 3425 0244 BB82     		strh	r3, [r7, #20]	@ movhi
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3426              		.loc 1 1451 0
 3427 0246 25E0     		b	.L208
 3428              	.L204:
1452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
1453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(__DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
 3429              		.loc 1 1453 0
 3430 0248 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 3431 024c 0346     		mov	r3, r0
 3432 024e 5A00     		lsls	r2, r3, #1
 3433 0250 7B68     		ldr	r3, [r7, #4]
 3434 0252 5B68     		ldr	r3, [r3, #4]
 3435 0254 B2FBF3F3 		udiv	r3, r2, r3
 3436 0258 BB82     		strh	r3, [r7, #20]	@ movhi
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3437              		.loc 1 1454 0
 3438 025a 1BE0     		b	.L208
 3439              	.L205:
1455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
1456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(__DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate)); 
 3440              		.loc 1 1456 0
ARM GAS  /tmp/cckWdj4u.s 			page 86


 3441 025c 7B68     		ldr	r3, [r7, #4]
 3442 025e 5B68     		ldr	r3, [r3, #4]
 3443 0260 3E4A     		ldr	r2, .L219+24
 3444 0262 B2FBF3F3 		udiv	r3, r2, r3
 3445 0266 BB82     		strh	r3, [r7, #20]	@ movhi
1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3446              		.loc 1 1457 0
 3447 0268 14E0     		b	.L208
 3448              	.L206:
1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
1459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(__DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 3449              		.loc 1 1459 0
 3450 026a FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3451 026e 0346     		mov	r3, r0
 3452 0270 5A00     		lsls	r2, r3, #1
 3453 0272 7B68     		ldr	r3, [r7, #4]
 3454 0274 5B68     		ldr	r3, [r3, #4]
 3455 0276 B2FBF3F3 		udiv	r3, r2, r3
 3456 027a BB82     		strh	r3, [r7, #20]	@ movhi
1460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3457              		.loc 1 1460 0
 3458 027c 0AE0     		b	.L208
 3459              	.L207:
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
1462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(__DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate)); 
 3460              		.loc 1 1462 0
 3461 027e 7B68     		ldr	r3, [r7, #4]
 3462 0280 5B68     		ldr	r3, [r3, #4]
 3463 0282 4FF48032 		mov	r2, #65536
 3464 0286 B2FBF3F3 		udiv	r3, r2, r3
 3465 028a BB82     		strh	r3, [r7, #20]	@ movhi
1463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;          
 3466              		.loc 1 1463 0
 3467 028c 02E0     		b	.L208
 3468              	.L201:
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:                
1465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default:                        
1466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         ret = HAL_ERROR; 
 3469              		.loc 1 1466 0
 3470 028e 0123     		movs	r3, #1
 3471 0290 FB74     		strb	r3, [r7, #19]
1467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;                   
 3472              		.loc 1 1467 0
 3473 0292 00BF     		nop
 3474              	.L208:
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
1470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     brrtemp = usartdiv & 0xFFF0;
 3475              		.loc 1 1470 0
 3476 0294 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 3477 0296 23F00F03 		bic	r3, r3, #15
 3478 029a 7B81     		strh	r3, [r7, #10]	@ movhi
1471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000F) >> 1U);
 3479              		.loc 1 1471 0
 3480 029c BB8A     		ldrh	r3, [r7, #20]
 3481 029e 03F00F03 		and	r3, r3, #15
 3482 02a2 5B10     		asrs	r3, r3, #1
ARM GAS  /tmp/cckWdj4u.s 			page 87


 3483 02a4 9AB2     		uxth	r2, r3
 3484 02a6 7B89     		ldrh	r3, [r7, #10]
 3485 02a8 1343     		orrs	r3, r3, r2
 3486 02aa 9BB2     		uxth	r3, r3
 3487 02ac 7B81     		strh	r3, [r7, #10]	@ movhi
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
 3488              		.loc 1 1472 0
 3489 02ae 7B68     		ldr	r3, [r7, #4]
 3490 02b0 1B68     		ldr	r3, [r3]
 3491 02b2 7A89     		ldrh	r2, [r7, #10]
 3492 02b4 DA60     		str	r2, [r3, #12]
 3493 02b6 63E0     		b	.L209
 3494              	.L200:
1473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (clocksource)
 3495              		.loc 1 1476 0
 3496 02b8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3497 02ba 082B     		cmp	r3, #8
 3498 02bc 5DD8     		bhi	.L210
 3499 02be 01A2     		adr	r2, .L212
 3500 02c0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3501              		.p2align 2
 3502              	.L212:
 3503 02c4 E9020000 		.word	.L211+1
 3504 02c8 01030000 		.word	.L213+1
 3505 02cc 19030000 		.word	.L214+1
 3506 02d0 7B030000 		.word	.L210+1
 3507 02d4 2D030000 		.word	.L215+1
 3508 02d8 7B030000 		.word	.L210+1
 3509 02dc 7B030000 		.word	.L210+1
 3510 02e0 7B030000 		.word	.L210+1
 3511 02e4 65030000 		.word	.L216+1
 3512              		.p2align 1
 3513              	.L211:
1477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1: 
1479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(__DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.Baud
 3514              		.loc 1 1479 0
 3515 02e8 7B68     		ldr	r3, [r7, #4]
 3516 02ea 1C68     		ldr	r4, [r3]
 3517 02ec FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3518 02f0 0246     		mov	r2, r0
 3519 02f2 7B68     		ldr	r3, [r7, #4]
 3520 02f4 5B68     		ldr	r3, [r3, #4]
 3521 02f6 B2FBF3F3 		udiv	r3, r2, r3
 3522 02fa 9BB2     		uxth	r3, r3
 3523 02fc E360     		str	r3, [r4, #12]
1480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3524              		.loc 1 1480 0
 3525 02fe 3FE0     		b	.L209
 3526              	.L213:
1481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2: 
1482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(__DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.Baud
 3527              		.loc 1 1482 0
 3528 0300 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cckWdj4u.s 			page 88


 3529 0302 1C68     		ldr	r4, [r3]
 3530 0304 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 3531 0308 0246     		mov	r2, r0
 3532 030a 7B68     		ldr	r3, [r7, #4]
 3533 030c 5B68     		ldr	r3, [r3, #4]
 3534 030e B2FBF3F3 		udiv	r3, r2, r3
 3535 0312 9BB2     		uxth	r3, r3
 3536 0314 E360     		str	r3, [r4, #12]
1483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3537              		.loc 1 1483 0
 3538 0316 33E0     		b	.L209
 3539              	.L214:
1484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI: 
1485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(__DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate)); 
 3540              		.loc 1 1485 0
 3541 0318 7B68     		ldr	r3, [r7, #4]
 3542 031a 1B68     		ldr	r3, [r3]
 3543 031c 7A68     		ldr	r2, [r7, #4]
 3544 031e 5268     		ldr	r2, [r2, #4]
 3545 0320 0F49     		ldr	r1, .L219+28
 3546 0322 B1FBF2F2 		udiv	r2, r1, r2
 3547 0326 92B2     		uxth	r2, r2
 3548 0328 DA60     		str	r2, [r3, #12]
1486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break; 
 3549              		.loc 1 1486 0
 3550 032a 29E0     		b	.L209
 3551              	.L215:
1487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:  
1488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(__DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Init.B
 3552              		.loc 1 1488 0
 3553 032c 7B68     		ldr	r3, [r7, #4]
 3554 032e 1C68     		ldr	r4, [r3]
 3555 0330 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3556 0334 0246     		mov	r2, r0
 3557 0336 7B68     		ldr	r3, [r7, #4]
 3558 0338 5B68     		ldr	r3, [r3, #4]
 3559 033a B2FBF3F3 		udiv	r3, r2, r3
 3560 033e 9BB2     		uxth	r3, r3
 3561 0340 E360     		str	r3, [r4, #12]
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;  
 3562              		.loc 1 1489 0
 3563 0342 1DE0     		b	.L209
 3564              	.L220:
 3565              		.align	2
 3566              	.L219:
 3567 0344 00380140 		.word	1073821696
 3568 0348 00100240 		.word	1073876992
 3569 034c 00440040 		.word	1073759232
 3570 0350 00480040 		.word	1073760256
 3571 0354 004C0040 		.word	1073761280
 3572 0358 00500040 		.word	1073762304
 3573 035c 0024F400 		.word	16000000
 3574 0360 00127A00 		.word	8000000
 3575              	.L216:
1490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:                
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(__DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate)); 
 3576              		.loc 1 1491 0
ARM GAS  /tmp/cckWdj4u.s 			page 89


 3577 0364 7B68     		ldr	r3, [r7, #4]
 3578 0366 1B68     		ldr	r3, [r3]
 3579 0368 7A68     		ldr	r2, [r7, #4]
 3580 036a 5268     		ldr	r2, [r2, #4]
 3581 036c 4FF40041 		mov	r1, #32768
 3582 0370 B1FBF2F2 		udiv	r2, r1, r2
 3583 0374 92B2     		uxth	r2, r2
 3584 0376 DA60     		str	r2, [r3, #12]
1492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break; 
 3585              		.loc 1 1492 0
 3586 0378 02E0     		b	.L209
 3587              	.L210:
1493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:                
1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default:                       
1495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         ret = HAL_ERROR; 
 3588              		.loc 1 1495 0
 3589 037a 0123     		movs	r3, #1
 3590 037c FB74     		strb	r3, [r7, #19]
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;       
 3591              		.loc 1 1496 0
 3592 037e 00BF     		nop
 3593              	.L209:
1497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return ret;   
 3594              		.loc 1 1500 0
 3595 0380 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
1501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3596              		.loc 1 1502 0
 3597 0382 1846     		mov	r0, r3
 3598 0384 1C37     		adds	r7, r7, #28
 3599              	.LCFI150:
 3600              		.cfi_def_cfa_offset 12
 3601 0386 BD46     		mov	sp, r7
 3602              	.LCFI151:
 3603              		.cfi_def_cfa_register 13
 3604              		@ sp needed
 3605 0388 90BD     		pop	{r4, r7, pc}
 3606              		.cfi_endproc
 3607              	.LFE139:
 3609 038a 00BF     		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 3610              		.align	2
 3611              		.global	UART_AdvFeatureConfig
 3612              		.thumb
 3613              		.thumb_func
 3615              	UART_AdvFeatureConfig:
 3616              	.LFB140:
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced feautures 
1507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: uart handle  
1508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
ARM GAS  /tmp/cckWdj4u.s 			page 90


1511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {  
 3617              		.loc 1 1511 0
 3618              		.cfi_startproc
 3619              		@ args = 0, pretend = 0, frame = 8
 3620              		@ frame_needed = 1, uses_anonymous_args = 0
 3621              		@ link register save eliminated.
 3622 0000 80B4     		push	{r7}
 3623              	.LCFI152:
 3624              		.cfi_def_cfa_offset 4
 3625              		.cfi_offset 7, -4
 3626 0002 83B0     		sub	sp, sp, #12
 3627              	.LCFI153:
 3628              		.cfi_def_cfa_offset 16
 3629 0004 00AF     		add	r7, sp, #0
 3630              	.LCFI154:
 3631              		.cfi_def_cfa_register 7
 3632 0006 7860     		str	r0, [r7, #4]
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */ 
1513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
1514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
1516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 3633              		.loc 1 1516 0
 3634 0008 7B68     		ldr	r3, [r7, #4]
 3635 000a 5B6A     		ldr	r3, [r3, #36]
 3636 000c 03F00103 		and	r3, r3, #1
 3637 0010 002B     		cmp	r3, #0
 3638 0012 0AD0     		beq	.L222
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
1519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 3639              		.loc 1 1519 0
 3640 0014 7B68     		ldr	r3, [r7, #4]
 3641 0016 1B68     		ldr	r3, [r3]
 3642 0018 7A68     		ldr	r2, [r7, #4]
 3643 001a 1268     		ldr	r2, [r2]
 3644 001c 5268     		ldr	r2, [r2, #4]
 3645 001e 22F40031 		bic	r1, r2, #131072
 3646 0022 7A68     		ldr	r2, [r7, #4]
 3647 0024 926A     		ldr	r2, [r2, #40]
 3648 0026 0A43     		orrs	r2, r2, r1
 3649 0028 5A60     		str	r2, [r3, #4]
 3650              	.L222:
1520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
1523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 3651              		.loc 1 1523 0
 3652 002a 7B68     		ldr	r3, [r7, #4]
 3653 002c 5B6A     		ldr	r3, [r3, #36]
 3654 002e 03F00203 		and	r3, r3, #2
 3655 0032 002B     		cmp	r3, #0
 3656 0034 0AD0     		beq	.L223
1524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
1526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 3657              		.loc 1 1526 0
ARM GAS  /tmp/cckWdj4u.s 			page 91


 3658 0036 7B68     		ldr	r3, [r7, #4]
 3659 0038 1B68     		ldr	r3, [r3]
 3660 003a 7A68     		ldr	r2, [r7, #4]
 3661 003c 1268     		ldr	r2, [r2]
 3662 003e 5268     		ldr	r2, [r2, #4]
 3663 0040 22F48031 		bic	r1, r2, #65536
 3664 0044 7A68     		ldr	r2, [r7, #4]
 3665 0046 D26A     		ldr	r2, [r2, #44]
 3666 0048 0A43     		orrs	r2, r2, r1
 3667 004a 5A60     		str	r2, [r3, #4]
 3668              	.L223:
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure data inversion */
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 3669              		.loc 1 1530 0
 3670 004c 7B68     		ldr	r3, [r7, #4]
 3671 004e 5B6A     		ldr	r3, [r3, #36]
 3672 0050 03F00403 		and	r3, r3, #4
 3673 0054 002B     		cmp	r3, #0
 3674 0056 0AD0     		beq	.L224
1531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 3675              		.loc 1 1533 0
 3676 0058 7B68     		ldr	r3, [r7, #4]
 3677 005a 1B68     		ldr	r3, [r3]
 3678 005c 7A68     		ldr	r2, [r7, #4]
 3679 005e 1268     		ldr	r2, [r2]
 3680 0060 5268     		ldr	r2, [r2, #4]
 3681 0062 22F48021 		bic	r1, r2, #262144
 3682 0066 7A68     		ldr	r2, [r7, #4]
 3683 0068 126B     		ldr	r2, [r2, #48]
 3684 006a 0A43     		orrs	r2, r2, r1
 3685 006c 5A60     		str	r2, [r3, #4]
 3686              	.L224:
1534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 3687              		.loc 1 1537 0
 3688 006e 7B68     		ldr	r3, [r7, #4]
 3689 0070 5B6A     		ldr	r3, [r3, #36]
 3690 0072 03F00803 		and	r3, r3, #8
 3691 0076 002B     		cmp	r3, #0
 3692 0078 0AD0     		beq	.L225
1538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
1540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 3693              		.loc 1 1540 0
 3694 007a 7B68     		ldr	r3, [r7, #4]
 3695 007c 1B68     		ldr	r3, [r3]
 3696 007e 7A68     		ldr	r2, [r7, #4]
 3697 0080 1268     		ldr	r2, [r2]
 3698 0082 5268     		ldr	r2, [r2, #4]
 3699 0084 22F40041 		bic	r1, r2, #32768
 3700 0088 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/cckWdj4u.s 			page 92


 3701 008a 526B     		ldr	r2, [r2, #52]
 3702 008c 0A43     		orrs	r2, r2, r1
 3703 008e 5A60     		str	r2, [r3, #4]
 3704              	.L225:
1541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 3705              		.loc 1 1544 0
 3706 0090 7B68     		ldr	r3, [r7, #4]
 3707 0092 5B6A     		ldr	r3, [r3, #36]
 3708 0094 03F01003 		and	r3, r3, #16
 3709 0098 002B     		cmp	r3, #0
 3710 009a 0AD0     		beq	.L226
1545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));  
1547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 3711              		.loc 1 1547 0
 3712 009c 7B68     		ldr	r3, [r7, #4]
 3713 009e 1B68     		ldr	r3, [r3]
 3714 00a0 7A68     		ldr	r2, [r7, #4]
 3715 00a2 1268     		ldr	r2, [r2]
 3716 00a4 9268     		ldr	r2, [r2, #8]
 3717 00a6 22F48051 		bic	r1, r2, #4096
 3718 00aa 7A68     		ldr	r2, [r7, #4]
 3719 00ac 926B     		ldr	r2, [r2, #56]
 3720 00ae 0A43     		orrs	r2, r2, r1
 3721 00b0 9A60     		str	r2, [r3, #8]
 3722              	.L226:
1548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
1551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 3723              		.loc 1 1551 0
 3724 00b2 7B68     		ldr	r3, [r7, #4]
 3725 00b4 5B6A     		ldr	r3, [r3, #36]
 3726 00b6 03F02003 		and	r3, r3, #32
 3727 00ba 002B     		cmp	r3, #0
 3728 00bc 0AD0     		beq	.L227
1552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));   
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 3729              		.loc 1 1554 0
 3730 00be 7B68     		ldr	r3, [r7, #4]
 3731 00c0 1B68     		ldr	r3, [r3]
 3732 00c2 7A68     		ldr	r2, [r7, #4]
 3733 00c4 1268     		ldr	r2, [r2]
 3734 00c6 9268     		ldr	r2, [r2, #8]
 3735 00c8 22F40051 		bic	r1, r2, #8192
 3736 00cc 7A68     		ldr	r2, [r7, #4]
 3737 00ce D26B     		ldr	r2, [r2, #60]
 3738 00d0 0A43     		orrs	r2, r2, r1
 3739 00d2 9A60     		str	r2, [r3, #8]
 3740              	.L227:
1555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */              
ARM GAS  /tmp/cckWdj4u.s 			page 93


1558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 3741              		.loc 1 1558 0
 3742 00d4 7B68     		ldr	r3, [r7, #4]
 3743 00d6 5B6A     		ldr	r3, [r3, #36]
 3744 00d8 03F04003 		and	r3, r3, #64
 3745 00dc 002B     		cmp	r3, #0
 3746 00de 1AD0     		beq	.L228
1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
1561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 3747              		.loc 1 1562 0
 3748 00e0 7B68     		ldr	r3, [r7, #4]
 3749 00e2 1B68     		ldr	r3, [r3]
 3750 00e4 7A68     		ldr	r2, [r7, #4]
 3751 00e6 1268     		ldr	r2, [r2]
 3752 00e8 5268     		ldr	r2, [r2, #4]
 3753 00ea 22F48011 		bic	r1, r2, #1048576
 3754 00ee 7A68     		ldr	r2, [r7, #4]
 3755 00f0 126C     		ldr	r2, [r2, #64]
 3756 00f2 0A43     		orrs	r2, r2, r1
 3757 00f4 5A60     		str	r2, [r3, #4]
1563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
1564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 3758              		.loc 1 1564 0
 3759 00f6 7B68     		ldr	r3, [r7, #4]
 3760 00f8 1B6C     		ldr	r3, [r3, #64]
 3761 00fa B3F5801F 		cmp	r3, #1048576
 3762 00fe 0AD1     		bne	.L228
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
1567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 3763              		.loc 1 1567 0
 3764 0100 7B68     		ldr	r3, [r7, #4]
 3765 0102 1B68     		ldr	r3, [r3]
 3766 0104 7A68     		ldr	r2, [r7, #4]
 3767 0106 1268     		ldr	r2, [r2]
 3768 0108 5268     		ldr	r2, [r2, #4]
 3769 010a 22F4C001 		bic	r1, r2, #6291456
 3770 010e 7A68     		ldr	r2, [r7, #4]
 3771 0110 526C     		ldr	r2, [r2, #68]
 3772 0112 0A43     		orrs	r2, r2, r1
 3773 0114 5A60     		str	r2, [r3, #4]
 3774              	.L228:
1568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure MSB first on communication line */  
1572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 3775              		.loc 1 1572 0
 3776 0116 7B68     		ldr	r3, [r7, #4]
 3777 0118 5B6A     		ldr	r3, [r3, #36]
 3778 011a 03F08003 		and	r3, r3, #128
 3779 011e 002B     		cmp	r3, #0
 3780 0120 0AD0     		beq	.L230
1573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));   
ARM GAS  /tmp/cckWdj4u.s 			page 94


1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 3781              		.loc 1 1575 0
 3782 0122 7B68     		ldr	r3, [r7, #4]
 3783 0124 1B68     		ldr	r3, [r3]
 3784 0126 7A68     		ldr	r2, [r7, #4]
 3785 0128 1268     		ldr	r2, [r2]
 3786 012a 5268     		ldr	r2, [r2, #4]
 3787 012c 22F40021 		bic	r1, r2, #524288
 3788 0130 7A68     		ldr	r2, [r7, #4]
 3789 0132 926C     		ldr	r2, [r2, #72]
 3790 0134 0A43     		orrs	r2, r2, r1
 3791 0136 5A60     		str	r2, [r3, #4]
 3792              	.L230:
1576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3793              		.loc 1 1577 0
 3794 0138 00BF     		nop
 3795 013a 0C37     		adds	r7, r7, #12
 3796              	.LCFI155:
 3797              		.cfi_def_cfa_offset 4
 3798 013c BD46     		mov	sp, r7
 3799              	.LCFI156:
 3800              		.cfi_def_cfa_register 13
 3801              		@ sp needed
 3802 013e 5DF8047B 		ldr	r7, [sp], #4
 3803              	.LCFI157:
 3804              		.cfi_restore 7
 3805              		.cfi_def_cfa_offset 0
 3806 0142 7047     		bx	lr
 3807              		.cfi_endproc
 3808              	.LFE140:
 3810              		.section	.text.UART_CheckIdleState,"ax",%progbits
 3811              		.align	2
 3812              		.global	UART_CheckIdleState
 3813              		.thumb
 3814              		.thumb_func
 3816              	UART_CheckIdleState:
 3817              	.LFB141:
1578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Check the UART Idle State
1583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: uart handle
1584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3818              		.loc 1 1587 0
 3819              		.cfi_startproc
 3820              		@ args = 0, pretend = 0, frame = 8
 3821              		@ frame_needed = 1, uses_anonymous_args = 0
 3822 0000 80B5     		push	{r7, lr}
 3823              	.LCFI158:
 3824              		.cfi_def_cfa_offset 8
 3825              		.cfi_offset 7, -8
 3826              		.cfi_offset 14, -4
ARM GAS  /tmp/cckWdj4u.s 			page 95


 3827 0002 82B0     		sub	sp, sp, #8
 3828              	.LCFI159:
 3829              		.cfi_def_cfa_offset 16
 3830 0004 00AF     		add	r7, sp, #0
 3831              	.LCFI160:
 3832              		.cfi_def_cfa_register 7
 3833 0006 7860     		str	r0, [r7, #4]
1588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
1589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 3834              		.loc 1 1589 0
 3835 0008 7B68     		ldr	r3, [r7, #4]
 3836 000a 0022     		movs	r2, #0
 3837 000c 83F86A20 		strb	r2, [r3, #106]
1590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
1592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 3838              		.loc 1 1592 0
 3839 0010 7B68     		ldr	r3, [r7, #4]
 3840 0012 1B68     		ldr	r3, [r3]
 3841 0014 1B68     		ldr	r3, [r3]
 3842 0016 03F00803 		and	r3, r3, #8
 3843 001a 002B     		cmp	r3, #0
 3844 001c 0CD0     		beq	.L232
1593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Wait until TEACK flag is set */
1595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, HAL_UART_TIMEOUT_VALUE) != HAL_OK
 3845              		.loc 1 1595 0
 3846 001e 6FF07E43 		mvn	r3, #-33554432
 3847 0022 0022     		movs	r2, #0
 3848 0024 4FF40011 		mov	r1, #2097152
 3849 0028 7868     		ldr	r0, [r7, #4]
 3850 002a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3851 002e 0346     		mov	r3, r0
 3852 0030 002B     		cmp	r3, #0
 3853 0032 01D0     		beq	.L232
1596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     { 
1597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Timeout Occured */
1598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
 3854              		.loc 1 1598 0
 3855 0034 0323     		movs	r3, #3
 3856 0036 1CE0     		b	.L233
 3857              	.L232:
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     } 
1600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if the Receiver is enabled */
1602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 3858              		.loc 1 1602 0
 3859 0038 7B68     		ldr	r3, [r7, #4]
 3860 003a 1B68     		ldr	r3, [r3]
 3861 003c 1B68     		ldr	r3, [r3]
 3862 003e 03F00403 		and	r3, r3, #4
 3863 0042 002B     		cmp	r3, #0
 3864 0044 0CD0     		beq	.L234
1603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Wait until REACK flag is set */
1605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET,  HAL_UART_TIMEOUT_VALUE) != HAL_O
 3865              		.loc 1 1605 0
ARM GAS  /tmp/cckWdj4u.s 			page 96


 3866 0046 6FF07E43 		mvn	r3, #-33554432
 3867 004a 0022     		movs	r2, #0
 3868 004c 4FF48001 		mov	r1, #4194304
 3869 0050 7868     		ldr	r0, [r7, #4]
 3870 0052 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3871 0056 0346     		mov	r3, r0
 3872 0058 002B     		cmp	r3, #0
 3873 005a 01D0     		beq	.L234
1606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     { 
1607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Timeout Occured */
1608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
 3874              		.loc 1 1608 0
 3875 005c 0323     		movs	r3, #3
 3876 005e 08E0     		b	.L233
 3877              	.L234:
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Initialize the UART State */
1613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->State= HAL_UART_STATE_READY;
 3878              		.loc 1 1613 0
 3879 0060 7B68     		ldr	r3, [r7, #4]
 3880 0062 0122     		movs	r2, #1
 3881 0064 83F86920 		strb	r2, [r3, #105]
1614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
1615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
1616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3882              		.loc 1 1616 0
 3883 0068 7B68     		ldr	r3, [r7, #4]
 3884 006a 0022     		movs	r2, #0
 3885 006c 83F86820 		strb	r2, [r3, #104]
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 3886              		.loc 1 1618 0
 3887 0070 0023     		movs	r3, #0
 3888              	.L233:
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3889              		.loc 1 1619 0
 3890 0072 1846     		mov	r0, r3
 3891 0074 0837     		adds	r7, r7, #8
 3892              	.LCFI161:
 3893              		.cfi_def_cfa_offset 8
 3894 0076 BD46     		mov	sp, r7
 3895              	.LCFI162:
 3896              		.cfi_def_cfa_register 13
 3897              		@ sp needed
 3898 0078 80BD     		pop	{r7, pc}
 3899              		.cfi_endproc
 3900              	.LFE141:
 3902 007a 00BF     		.section	.text.UART_Wakeup_AddressConfig,"ax",%progbits
 3903              		.align	2
 3904              		.global	UART_Wakeup_AddressConfig
 3905              		.thumb
 3906              		.thumb_func
 3908              	UART_Wakeup_AddressConfig:
 3909              	.LFB142:
1620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cckWdj4u.s 			page 97


1621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initializes the UART wake-up from stop mode parameters when triggered by address detecti
1626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: uart handle
1627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param WakeUpSelection: UART wake up from stop mode parameters
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */                        
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void UART_Wakeup_AddressConfig(UART_HandleTypeDef *huart, UART_WakeUpTypeDef WakeUpSelection)
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3910              		.loc 1 1631 0
 3911              		.cfi_startproc
 3912              		@ args = 0, pretend = 0, frame = 16
 3913              		@ frame_needed = 1, uses_anonymous_args = 0
 3914              		@ link register save eliminated.
 3915 0000 80B4     		push	{r7}
 3916              	.LCFI163:
 3917              		.cfi_def_cfa_offset 4
 3918              		.cfi_offset 7, -4
 3919 0002 85B0     		sub	sp, sp, #20
 3920              	.LCFI164:
 3921              		.cfi_def_cfa_offset 24
 3922 0004 00AF     		add	r7, sp, #0
 3923              	.LCFI165:
 3924              		.cfi_def_cfa_register 7
 3925 0006 F860     		str	r0, [r7, #12]
 3926 0008 3B1D     		adds	r3, r7, #4
 3927 000a 83E80600 		stmia	r3, {r1, r2}
1632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ADDRESSLENGTH_DETECT(WakeUpSelection.AddressLength));
1633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the USART address length */
1635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADDM7, WakeUpSelection.AddressLength);
 3928              		.loc 1 1635 0
 3929 000e FB68     		ldr	r3, [r7, #12]
 3930 0010 1B68     		ldr	r3, [r3]
 3931 0012 FA68     		ldr	r2, [r7, #12]
 3932 0014 1268     		ldr	r2, [r2]
 3933 0016 5268     		ldr	r2, [r2, #4]
 3934 0018 22F01002 		bic	r2, r2, #16
 3935 001c 3989     		ldrh	r1, [r7, #8]
 3936 001e 0A43     		orrs	r2, r2, r1
 3937 0020 5A60     		str	r2, [r3, #4]
1636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the USART address node */
1638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)WakeUpSelection.Address << UART_CR2_AD
 3938              		.loc 1 1638 0
 3939 0022 FB68     		ldr	r3, [r7, #12]
 3940 0024 1B68     		ldr	r3, [r3]
 3941 0026 FA68     		ldr	r2, [r7, #12]
 3942 0028 1268     		ldr	r2, [r2]
 3943 002a 5268     		ldr	r2, [r2, #4]
 3944 002c 22F07F41 		bic	r1, r2, #-16777216
 3945 0030 BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 3946 0032 1206     		lsls	r2, r2, #24
 3947 0034 0A43     		orrs	r2, r2, r1
 3948 0036 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/cckWdj4u.s 			page 98


1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3949              		.loc 1 1639 0
 3950 0038 00BF     		nop
 3951 003a 1437     		adds	r7, r7, #20
 3952              	.LCFI166:
 3953              		.cfi_def_cfa_offset 4
 3954 003c BD46     		mov	sp, r7
 3955              	.LCFI167:
 3956              		.cfi_def_cfa_register 13
 3957              		@ sp needed
 3958 003e 5DF8047B 		ldr	r7, [sp], #4
 3959              	.LCFI168:
 3960              		.cfi_restore 7
 3961              		.cfi_def_cfa_offset 0
 3962 0042 7047     		bx	lr
 3963              		.cfi_endproc
 3964              	.LFE142:
 3966              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3967              		.align	2
 3968              		.global	HAL_HalfDuplex_EnableTransmitter
 3969              		.thumb
 3970              		.thumb_func
 3972              	HAL_HalfDuplex_EnableTransmitter:
 3973              	.LFB143:
1640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
1643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart: UART handle
1644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3974              		.loc 1 1648 0
 3975              		.cfi_startproc
 3976              		@ args = 0, pretend = 0, frame = 8
 3977              		@ frame_needed = 1, uses_anonymous_args = 0
 3978              		@ link register save eliminated.
 3979 0000 80B4     		push	{r7}
 3980              	.LCFI169:
 3981              		.cfi_def_cfa_offset 4
 3982              		.cfi_offset 7, -4
 3983 0002 83B0     		sub	sp, sp, #12
 3984              	.LCFI170:
 3985              		.cfi_def_cfa_offset 16
 3986 0004 00AF     		add	r7, sp, #0
 3987              	.LCFI171:
 3988              		.cfi_def_cfa_register 7
 3989 0006 7860     		str	r0, [r7, #4]
1649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 3990              		.loc 1 1650 0
 3991 0008 7B68     		ldr	r3, [r7, #4]
 3992 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 3993 000e 012B     		cmp	r3, #1
 3994 0010 01D1     		bne	.L237
 3995              		.loc 1 1650 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cckWdj4u.s 			page 99


 3996 0012 0223     		movs	r3, #2
 3997 0014 20E0     		b	.L238
 3998              	.L237:
 3999              		.loc 1 1650 0 discriminator 2
 4000 0016 7B68     		ldr	r3, [r7, #4]
 4001 0018 0122     		movs	r2, #1
 4002 001a 83F86820 		strb	r2, [r3, #104]
1651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 4003              		.loc 1 1651 0 is_stmt 1 discriminator 2
 4004 001e 7B68     		ldr	r3, [r7, #4]
 4005 0020 0222     		movs	r2, #2
 4006 0022 83F86920 		strb	r2, [r3, #105]
1652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear TE and RE bits */
1654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 4007              		.loc 1 1654 0 discriminator 2
 4008 0026 7B68     		ldr	r3, [r7, #4]
 4009 0028 1B68     		ldr	r3, [r3]
 4010 002a 7A68     		ldr	r2, [r7, #4]
 4011 002c 1268     		ldr	r2, [r2]
 4012 002e 1268     		ldr	r2, [r2]
 4013 0030 22F00C02 		bic	r2, r2, #12
 4014 0034 1A60     		str	r2, [r3]
1655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
 4015              		.loc 1 1656 0 discriminator 2
 4016 0036 7B68     		ldr	r3, [r7, #4]
 4017 0038 1B68     		ldr	r3, [r3]
 4018 003a 7A68     		ldr	r2, [r7, #4]
 4019 003c 1268     		ldr	r2, [r2]
 4020 003e 1268     		ldr	r2, [r2]
 4021 0040 42F00802 		orr	r2, r2, #8
 4022 0044 1A60     		str	r2, [r3]
1657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->State = HAL_UART_STATE_READY;
 4023              		.loc 1 1658 0 discriminator 2
 4024 0046 7B68     		ldr	r3, [r7, #4]
 4025 0048 0122     		movs	r2, #1
 4026 004a 83F86920 		strb	r2, [r3, #105]
1659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
1660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4027              		.loc 1 1660 0 discriminator 2
 4028 004e 7B68     		ldr	r3, [r7, #4]
 4029 0050 0022     		movs	r2, #0
 4030 0052 83F86820 		strb	r2, [r3, #104]
1661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK; 
 4031              		.loc 1 1662 0 discriminator 2
 4032 0056 0023     		movs	r3, #0
 4033              	.L238:
1663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4034              		.loc 1 1663 0
 4035 0058 1846     		mov	r0, r3
 4036 005a 0C37     		adds	r7, r7, #12
 4037              	.LCFI172:
 4038              		.cfi_def_cfa_offset 4
 4039 005c BD46     		mov	sp, r7
ARM GAS  /tmp/cckWdj4u.s 			page 100


 4040              	.LCFI173:
 4041              		.cfi_def_cfa_register 13
 4042              		@ sp needed
 4043 005e 5DF8047B 		ldr	r7, [sp], #4
 4044              	.LCFI174:
 4045              		.cfi_restore 7
 4046              		.cfi_def_cfa_offset 0
 4047 0062 7047     		bx	lr
 4048              		.cfi_endproc
 4049              	.LFE143:
 4051              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 4052              		.align	2
 4053              		.global	HAL_HalfDuplex_EnableReceiver
 4054              		.thumb
 4055              		.thumb_func
 4057              	HAL_HalfDuplex_EnableReceiver:
 4058              	.LFB144:
1664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
1667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart: UART handle
1668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
1671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4059              		.loc 1 1671 0
 4060              		.cfi_startproc
 4061              		@ args = 0, pretend = 0, frame = 8
 4062              		@ frame_needed = 1, uses_anonymous_args = 0
 4063              		@ link register save eliminated.
 4064 0000 80B4     		push	{r7}
 4065              	.LCFI175:
 4066              		.cfi_def_cfa_offset 4
 4067              		.cfi_offset 7, -4
 4068 0002 83B0     		sub	sp, sp, #12
 4069              	.LCFI176:
 4070              		.cfi_def_cfa_offset 16
 4071 0004 00AF     		add	r7, sp, #0
 4072              	.LCFI177:
 4073              		.cfi_def_cfa_register 7
 4074 0006 7860     		str	r0, [r7, #4]
1672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 4075              		.loc 1 1673 0
 4076 0008 7B68     		ldr	r3, [r7, #4]
 4077 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 4078 000e 012B     		cmp	r3, #1
 4079 0010 01D1     		bne	.L240
 4080              		.loc 1 1673 0 is_stmt 0 discriminator 1
 4081 0012 0223     		movs	r3, #2
 4082 0014 20E0     		b	.L241
 4083              	.L240:
 4084              		.loc 1 1673 0 discriminator 2
 4085 0016 7B68     		ldr	r3, [r7, #4]
 4086 0018 0122     		movs	r2, #1
 4087 001a 83F86820 		strb	r2, [r3, #104]
1674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
ARM GAS  /tmp/cckWdj4u.s 			page 101


 4088              		.loc 1 1674 0 is_stmt 1 discriminator 2
 4089 001e 7B68     		ldr	r3, [r7, #4]
 4090 0020 0222     		movs	r2, #2
 4091 0022 83F86920 		strb	r2, [r3, #105]
1675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear TE and RE bits */
1677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 4092              		.loc 1 1677 0 discriminator 2
 4093 0026 7B68     		ldr	r3, [r7, #4]
 4094 0028 1B68     		ldr	r3, [r3]
 4095 002a 7A68     		ldr	r2, [r7, #4]
 4096 002c 1268     		ldr	r2, [r2]
 4097 002e 1268     		ldr	r2, [r2]
 4098 0030 22F00C02 		bic	r2, r2, #12
 4099 0034 1A60     		str	r2, [r3]
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
1679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
 4100              		.loc 1 1679 0 discriminator 2
 4101 0036 7B68     		ldr	r3, [r7, #4]
 4102 0038 1B68     		ldr	r3, [r3]
 4103 003a 7A68     		ldr	r2, [r7, #4]
 4104 003c 1268     		ldr	r2, [r2]
 4105 003e 1268     		ldr	r2, [r2]
 4106 0040 42F00402 		orr	r2, r2, #4
 4107 0044 1A60     		str	r2, [r3]
1680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  
1681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->State = HAL_UART_STATE_READY;
 4108              		.loc 1 1681 0 discriminator 2
 4109 0046 7B68     		ldr	r3, [r7, #4]
 4110 0048 0122     		movs	r2, #1
 4111 004a 83F86920 		strb	r2, [r3, #105]
1682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
1683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4112              		.loc 1 1683 0 discriminator 2
 4113 004e 7B68     		ldr	r3, [r7, #4]
 4114 0050 0022     		movs	r2, #0
 4115 0052 83F86820 		strb	r2, [r3, #104]
1684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK; 
 4116              		.loc 1 1685 0 discriminator 2
 4117 0056 0023     		movs	r3, #0
 4118              	.L241:
1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4119              		.loc 1 1686 0
 4120 0058 1846     		mov	r0, r3
 4121 005a 0C37     		adds	r7, r7, #12
 4122              	.LCFI178:
 4123              		.cfi_def_cfa_offset 4
 4124 005c BD46     		mov	sp, r7
 4125              	.LCFI179:
 4126              		.cfi_def_cfa_register 13
 4127              		@ sp needed
 4128 005e 5DF8047B 		ldr	r7, [sp], #4
 4129              	.LCFI180:
 4130              		.cfi_restore 7
 4131              		.cfi_def_cfa_offset 0
 4132 0062 7047     		bx	lr
ARM GAS  /tmp/cckWdj4u.s 			page 102


 4133              		.cfi_endproc
 4134              	.LFE144:
 4136              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 4137              		.align	2
 4138              		.global	HAL_LIN_SendBreak
 4139              		.thumb
 4140              		.thumb_func
 4142              	HAL_LIN_SendBreak:
 4143              	.LFB145:
1687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Transmits break characters.
1691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart: UART handle
1692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
1695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4144              		.loc 1 1695 0
 4145              		.cfi_startproc
 4146              		@ args = 0, pretend = 0, frame = 8
 4147              		@ frame_needed = 1, uses_anonymous_args = 0
 4148              		@ link register save eliminated.
 4149 0000 80B4     		push	{r7}
 4150              	.LCFI181:
 4151              		.cfi_def_cfa_offset 4
 4152              		.cfi_offset 7, -4
 4153 0002 83B0     		sub	sp, sp, #12
 4154              	.LCFI182:
 4155              		.cfi_def_cfa_offset 16
 4156 0004 00AF     		add	r7, sp, #0
 4157              	.LCFI183:
 4158              		.cfi_def_cfa_register 7
 4159 0006 7860     		str	r0, [r7, #4]
1696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
1697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 4160              		.loc 1 1700 0
 4161 0008 7B68     		ldr	r3, [r7, #4]
 4162 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 4163 000e 012B     		cmp	r3, #1
 4164 0010 01D1     		bne	.L243
 4165              		.loc 1 1700 0 is_stmt 0 discriminator 1
 4166 0012 0223     		movs	r3, #2
 4167 0014 18E0     		b	.L244
 4168              	.L243:
 4169              		.loc 1 1700 0 discriminator 2
 4170 0016 7B68     		ldr	r3, [r7, #4]
 4171 0018 0122     		movs	r2, #1
 4172 001a 83F86820 		strb	r2, [r3, #104]
1701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 4173              		.loc 1 1702 0 is_stmt 1 discriminator 2
 4174 001e 7B68     		ldr	r3, [r7, #4]
 4175 0020 0222     		movs	r2, #2
ARM GAS  /tmp/cckWdj4u.s 			page 103


 4176 0022 83F86920 		strb	r2, [r3, #105]
1703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Send break characters */
1705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->RQR |= UART_SENDBREAK_REQUEST;  
 4177              		.loc 1 1705 0 discriminator 2
 4178 0026 7B68     		ldr	r3, [r7, #4]
 4179 0028 1B68     		ldr	r3, [r3]
 4180 002a 7A68     		ldr	r2, [r7, #4]
 4181 002c 1268     		ldr	r2, [r2]
 4182 002e 9269     		ldr	r2, [r2, #24]
 4183 0030 42F00202 		orr	r2, r2, #2
 4184 0034 9A61     		str	r2, [r3, #24]
1706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  
1707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->State = HAL_UART_STATE_READY;
 4185              		.loc 1 1707 0 discriminator 2
 4186 0036 7B68     		ldr	r3, [r7, #4]
 4187 0038 0122     		movs	r2, #1
 4188 003a 83F86920 		strb	r2, [r3, #105]
1708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
1710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4189              		.loc 1 1710 0 discriminator 2
 4190 003e 7B68     		ldr	r3, [r7, #4]
 4191 0040 0022     		movs	r2, #0
 4192 0042 83F86820 		strb	r2, [r3, #104]
1711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK; 
 4193              		.loc 1 1712 0 discriminator 2
 4194 0046 0023     		movs	r3, #0
 4195              	.L244:
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4196              		.loc 1 1713 0
 4197 0048 1846     		mov	r0, r3
 4198 004a 0C37     		adds	r7, r7, #12
 4199              	.LCFI184:
 4200              		.cfi_def_cfa_offset 4
 4201 004c BD46     		mov	sp, r7
 4202              	.LCFI185:
 4203              		.cfi_def_cfa_register 13
 4204              		@ sp needed
 4205 004e 5DF8047B 		ldr	r7, [sp], #4
 4206              	.LCFI186:
 4207              		.cfi_restore 7
 4208              		.cfi_def_cfa_offset 0
 4209 0052 7047     		bx	lr
 4210              		.cfi_endproc
 4211              	.LFE145:
 4213              		.section	.text.HAL_UART_GetState,"ax",%progbits
 4214              		.align	2
 4215              		.global	HAL_UART_GetState
 4216              		.thumb
 4217              		.thumb_func
 4219              	HAL_UART_GetState:
 4220              	.LFB146:
1714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
ARM GAS  /tmp/cckWdj4u.s 			page 104


1717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
1718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
1721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  *  @brief   UART Peripheral State functions 
1722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  *
1723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim   
1724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ==============================================================================
1725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
1726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ==============================================================================
1727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
1728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides functions allowing to :
1729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) Returns the UART state.
1730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) Returns the UART error code
1731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          
1732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
1733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
1734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /**
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief return the UART state
1738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: uart handle
1739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL state
1740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
1742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4221              		.loc 1 1742 0
 4222              		.cfi_startproc
 4223              		@ args = 0, pretend = 0, frame = 8
 4224              		@ frame_needed = 1, uses_anonymous_args = 0
 4225              		@ link register save eliminated.
 4226 0000 80B4     		push	{r7}
 4227              	.LCFI187:
 4228              		.cfi_def_cfa_offset 4
 4229              		.cfi_offset 7, -4
 4230 0002 83B0     		sub	sp, sp, #12
 4231              	.LCFI188:
 4232              		.cfi_def_cfa_offset 16
 4233 0004 00AF     		add	r7, sp, #0
 4234              	.LCFI189:
 4235              		.cfi_def_cfa_register 7
 4236 0006 7860     		str	r0, [r7, #4]
1743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return huart->State;
 4237              		.loc 1 1743 0
 4238 0008 7B68     		ldr	r3, [r7, #4]
 4239 000a 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
1744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4240              		.loc 1 1744 0
 4241 000e 1846     		mov	r0, r3
 4242 0010 0C37     		adds	r7, r7, #12
 4243              	.LCFI190:
 4244              		.cfi_def_cfa_offset 4
 4245 0012 BD46     		mov	sp, r7
 4246              	.LCFI191:
 4247              		.cfi_def_cfa_register 13
 4248              		@ sp needed
 4249 0014 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/cckWdj4u.s 			page 105


 4250              	.LCFI192:
 4251              		.cfi_restore 7
 4252              		.cfi_def_cfa_offset 0
 4253 0018 7047     		bx	lr
 4254              		.cfi_endproc
 4255              	.LFE146:
 4257 001a 00BF     		.section	.text.HAL_UART_GetError,"ax",%progbits
 4258              		.align	2
 4259              		.global	HAL_UART_GetError
 4260              		.thumb
 4261              		.thumb_func
 4263              	HAL_UART_GetError:
 4264              	.LFB147:
1745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** * @brief  Return the UART error code
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** * @param  huart : pointer to a UART_HandleTypeDef structure that contains
1749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *              the configuration information for the specified UART.
1750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** * @retval UART Error Code
1751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
1753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4265              		.loc 1 1753 0
 4266              		.cfi_startproc
 4267              		@ args = 0, pretend = 0, frame = 8
 4268              		@ frame_needed = 1, uses_anonymous_args = 0
 4269              		@ link register save eliminated.
 4270 0000 80B4     		push	{r7}
 4271              	.LCFI193:
 4272              		.cfi_def_cfa_offset 4
 4273              		.cfi_offset 7, -4
 4274 0002 83B0     		sub	sp, sp, #12
 4275              	.LCFI194:
 4276              		.cfi_def_cfa_offset 16
 4277 0004 00AF     		add	r7, sp, #0
 4278              	.LCFI195:
 4279              		.cfi_def_cfa_register 7
 4280 0006 7860     		str	r0, [r7, #4]
1754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return huart->ErrorCode;
 4281              		.loc 1 1754 0
 4282 0008 7B68     		ldr	r3, [r7, #4]
 4283 000a 93F86A30 		ldrb	r3, [r3, #106]	@ zero_extendqisi2
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4284              		.loc 1 1755 0
 4285 000e 1846     		mov	r0, r3
 4286 0010 0C37     		adds	r7, r7, #12
 4287              	.LCFI196:
 4288              		.cfi_def_cfa_offset 4
 4289 0012 BD46     		mov	sp, r7
 4290              	.LCFI197:
 4291              		.cfi_def_cfa_register 13
 4292              		@ sp needed
 4293 0014 5DF8047B 		ldr	r7, [sp], #4
 4294              	.LCFI198:
 4295              		.cfi_restore 7
 4296              		.cfi_def_cfa_offset 0
 4297 0018 7047     		bx	lr
ARM GAS  /tmp/cckWdj4u.s 			page 106


 4298              		.cfi_endproc
 4299              	.LFE147:
 4301 001a 00BF     		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 4302              		.align	2
 4303              		.thumb
 4304              		.thumb_func
 4306              	UART_DMATransmitCplt:
 4307              	.LFB148:
1756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
1758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
1763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
1766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
1767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback 
1770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma: DMA handle
1771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)     
1774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4308              		.loc 1 1774 0
 4309              		.cfi_startproc
 4310              		@ args = 0, pretend = 0, frame = 16
 4311              		@ frame_needed = 1, uses_anonymous_args = 0
 4312 0000 80B5     		push	{r7, lr}
 4313              	.LCFI199:
 4314              		.cfi_def_cfa_offset 8
 4315              		.cfi_offset 7, -8
 4316              		.cfi_offset 14, -4
 4317 0002 84B0     		sub	sp, sp, #16
 4318              	.LCFI200:
 4319              		.cfi_def_cfa_offset 24
 4320 0004 00AF     		add	r7, sp, #0
 4321              	.LCFI201:
 4322              		.cfi_def_cfa_register 7
 4323 0006 7860     		str	r0, [r7, #4]
1775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4324              		.loc 1 1775 0
 4325 0008 7B68     		ldr	r3, [r7, #4]
 4326 000a 5B6A     		ldr	r3, [r3, #36]
 4327 000c FB60     		str	r3, [r7, #12]
1776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0;
 4328              		.loc 1 1776 0
 4329 000e FB68     		ldr	r3, [r7, #12]
 4330 0010 0022     		movs	r2, #0
 4331 0012 A3F85220 		strh	r2, [r3, #82]	@ movhi
1777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the DMA transfer for transmit request by setting the DMAT bit
1779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   in the UART CR3 register */
1780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 &= (uint32_t)~((uint32_t)USART_CR3_DMAT);
ARM GAS  /tmp/cckWdj4u.s 			page 107


 4332              		.loc 1 1780 0
 4333 0016 FB68     		ldr	r3, [r7, #12]
 4334 0018 1B68     		ldr	r3, [r3]
 4335 001a FA68     		ldr	r2, [r7, #12]
 4336 001c 1268     		ldr	r2, [r2]
 4337 001e 9268     		ldr	r2, [r2, #8]
 4338 0020 22F08002 		bic	r2, r2, #128
 4339 0024 9A60     		str	r2, [r3, #8]
1781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Wait for UART TC Flag */
1783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, HAL_UART_TXDMA_TIMEOUTVALUE) != HAL_OK
 4340              		.loc 1 1783 0
 4341 0026 45F2F053 		movw	r3, #22000
 4342 002a 0022     		movs	r2, #0
 4343 002c 4021     		movs	r1, #64
 4344 002e F868     		ldr	r0, [r7, #12]
 4345 0030 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4346 0034 0346     		mov	r3, r0
 4347 0036 002B     		cmp	r3, #0
 4348 0038 07D0     		beq	.L250
1784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Timeout Occured */ 
1786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->State = HAL_UART_STATE_TIMEOUT;
 4349              		.loc 1 1786 0
 4350 003a FB68     		ldr	r3, [r7, #12]
 4351 003c 0322     		movs	r2, #3
 4352 003e 83F86920 		strb	r2, [r3, #105]
1787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_ErrorCallback(huart);
 4353              		.loc 1 1787 0
 4354 0042 F868     		ldr	r0, [r7, #12]
 4355 0044 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* No Timeout */
1792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check if a receive process is ongoing or not */
1793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
1794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_RX;
1796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->State = HAL_UART_STATE_READY;
1800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
1802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4356              		.loc 1 1803 0
 4357 0048 10E0     		b	.L254
 4358              	.L250:
1793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4359              		.loc 1 1793 0
 4360 004a FB68     		ldr	r3, [r7, #12]
 4361 004c 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 4362 0050 322B     		cmp	r3, #50
 4363 0052 04D1     		bne	.L252
1795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
ARM GAS  /tmp/cckWdj4u.s 			page 108


 4364              		.loc 1 1795 0
 4365 0054 FB68     		ldr	r3, [r7, #12]
 4366 0056 2222     		movs	r2, #34
 4367 0058 83F86920 		strb	r2, [r3, #105]
 4368 005c 03E0     		b	.L253
 4369              	.L252:
1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4370              		.loc 1 1799 0
 4371 005e FB68     		ldr	r3, [r7, #12]
 4372 0060 0122     		movs	r2, #1
 4373 0062 83F86920 		strb	r2, [r3, #105]
 4374              	.L253:
1801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4375              		.loc 1 1801 0
 4376 0066 F868     		ldr	r0, [r7, #12]
 4377 0068 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 4378              	.L254:
 4379              		.loc 1 1803 0
 4380 006c 00BF     		nop
 4381 006e 1037     		adds	r7, r7, #16
 4382              	.LCFI202:
 4383              		.cfi_def_cfa_offset 8
 4384 0070 BD46     		mov	sp, r7
 4385              	.LCFI203:
 4386              		.cfi_def_cfa_register 13
 4387              		@ sp needed
 4388 0072 80BD     		pop	{r7, pc}
 4389              		.cfi_endproc
 4390              	.LFE148:
 4392              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 4393              		.align	2
 4394              		.thumb
 4395              		.thumb_func
 4397              	UART_DMATxHalfCplt:
 4398              	.LFB149:
1804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback 
1807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma : DMA handle
1808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
1811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4399              		.loc 1 1811 0
 4400              		.cfi_startproc
 4401              		@ args = 0, pretend = 0, frame = 16
 4402              		@ frame_needed = 1, uses_anonymous_args = 0
 4403 0000 80B5     		push	{r7, lr}
 4404              	.LCFI204:
 4405              		.cfi_def_cfa_offset 8
 4406              		.cfi_offset 7, -8
 4407              		.cfi_offset 14, -4
 4408 0002 84B0     		sub	sp, sp, #16
 4409              	.LCFI205:
 4410              		.cfi_def_cfa_offset 24
 4411 0004 00AF     		add	r7, sp, #0
 4412              	.LCFI206:
ARM GAS  /tmp/cckWdj4u.s 			page 109


 4413              		.cfi_def_cfa_register 7
 4414 0006 7860     		str	r0, [r7, #4]
1812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 4415              		.loc 1 1812 0
 4416 0008 7B68     		ldr	r3, [r7, #4]
 4417 000a 5B6A     		ldr	r3, [r3, #36]
 4418 000c FB60     		str	r3, [r7, #12]
1813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 4419              		.loc 1 1814 0
 4420 000e F868     		ldr	r0, [r7, #12]
 4421 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
1815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4422              		.loc 1 1815 0
 4423 0014 00BF     		nop
 4424 0016 1037     		adds	r7, r7, #16
 4425              	.LCFI207:
 4426              		.cfi_def_cfa_offset 8
 4427 0018 BD46     		mov	sp, r7
 4428              	.LCFI208:
 4429              		.cfi_def_cfa_register 13
 4430              		@ sp needed
 4431 001a 80BD     		pop	{r7, pc}
 4432              		.cfi_endproc
 4433              	.LFE149:
 4435              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 4436              		.align	2
 4437              		.thumb
 4438              		.thumb_func
 4440              	UART_DMAReceiveCplt:
 4441              	.LFB150:
1816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART receive process complete callback 
1819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma: DMA handle
1820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)  
1823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4442              		.loc 1 1823 0
 4443              		.cfi_startproc
 4444              		@ args = 0, pretend = 0, frame = 16
 4445              		@ frame_needed = 1, uses_anonymous_args = 0
 4446 0000 80B5     		push	{r7, lr}
 4447              	.LCFI209:
 4448              		.cfi_def_cfa_offset 8
 4449              		.cfi_offset 7, -8
 4450              		.cfi_offset 14, -4
 4451 0002 84B0     		sub	sp, sp, #16
 4452              	.LCFI210:
 4453              		.cfi_def_cfa_offset 24
 4454 0004 00AF     		add	r7, sp, #0
 4455              	.LCFI211:
 4456              		.cfi_def_cfa_register 7
 4457 0006 7860     		str	r0, [r7, #4]
1824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4458              		.loc 1 1824 0
ARM GAS  /tmp/cckWdj4u.s 			page 110


 4459 0008 7B68     		ldr	r3, [r7, #4]
 4460 000a 5B6A     		ldr	r3, [r3, #36]
 4461 000c FB60     		str	r3, [r7, #12]
1825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0;
 4462              		.loc 1 1825 0
 4463 000e FB68     		ldr	r3, [r7, #12]
 4464 0010 0022     		movs	r2, #0
 4465 0012 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the DMA transfer for the receiver request by setting the DMAR bit 
1828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      in the UART CR3 register */
1829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 &= (uint32_t)~((uint32_t)USART_CR3_DMAR);
 4466              		.loc 1 1829 0
 4467 0016 FB68     		ldr	r3, [r7, #12]
 4468 0018 1B68     		ldr	r3, [r3]
 4469 001a FA68     		ldr	r2, [r7, #12]
 4470 001c 1268     		ldr	r2, [r2]
 4471 001e 9268     		ldr	r2, [r2, #8]
 4472 0020 22F04002 		bic	r2, r2, #64
 4473 0024 9A60     		str	r2, [r3, #8]
1830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if a transmit Process is ongoing or not */
1832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
 4474              		.loc 1 1832 0
 4475 0026 FB68     		ldr	r3, [r7, #12]
 4476 0028 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 4477 002c 322B     		cmp	r3, #50
 4478 002e 04D1     		bne	.L257
1833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->State = HAL_UART_STATE_BUSY_TX;
 4479              		.loc 1 1834 0
 4480 0030 FB68     		ldr	r3, [r7, #12]
 4481 0032 1222     		movs	r2, #18
 4482 0034 83F86920 		strb	r2, [r3, #105]
 4483 0038 03E0     		b	.L258
 4484              	.L257:
1835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->State = HAL_UART_STATE_READY;
 4485              		.loc 1 1838 0
 4486 003a FB68     		ldr	r3, [r7, #12]
 4487 003c 0122     		movs	r2, #1
 4488 003e 83F86920 		strb	r2, [r3, #105]
 4489              	.L258:
1839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 4490              		.loc 1 1840 0
 4491 0042 F868     		ldr	r0, [r7, #12]
 4492 0044 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
1841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4493              		.loc 1 1841 0
 4494 0048 00BF     		nop
 4495 004a 1037     		adds	r7, r7, #16
 4496              	.LCFI212:
 4497              		.cfi_def_cfa_offset 8
 4498 004c BD46     		mov	sp, r7
ARM GAS  /tmp/cckWdj4u.s 			page 111


 4499              	.LCFI213:
 4500              		.cfi_def_cfa_register 13
 4501              		@ sp needed
 4502 004e 80BD     		pop	{r7, pc}
 4503              		.cfi_endproc
 4504              	.LFE150:
 4506              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 4507              		.align	2
 4508              		.thumb
 4509              		.thumb_func
 4511              	UART_DMARxHalfCplt:
 4512              	.LFB151:
1842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback 
1845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma : DMA handle
1846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
1849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4513              		.loc 1 1849 0
 4514              		.cfi_startproc
 4515              		@ args = 0, pretend = 0, frame = 16
 4516              		@ frame_needed = 1, uses_anonymous_args = 0
 4517 0000 80B5     		push	{r7, lr}
 4518              	.LCFI214:
 4519              		.cfi_def_cfa_offset 8
 4520              		.cfi_offset 7, -8
 4521              		.cfi_offset 14, -4
 4522 0002 84B0     		sub	sp, sp, #16
 4523              	.LCFI215:
 4524              		.cfi_def_cfa_offset 24
 4525 0004 00AF     		add	r7, sp, #0
 4526              	.LCFI216:
 4527              		.cfi_def_cfa_register 7
 4528 0006 7860     		str	r0, [r7, #4]
1850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 4529              		.loc 1 1850 0
 4530 0008 7B68     		ldr	r3, [r7, #4]
 4531 000a 5B6A     		ldr	r3, [r3, #36]
 4532 000c FB60     		str	r3, [r7, #12]
1851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart); 
 4533              		.loc 1 1852 0
 4534 000e F868     		ldr	r0, [r7, #12]
 4535 0010 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
1853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4536              		.loc 1 1853 0
 4537 0014 00BF     		nop
 4538 0016 1037     		adds	r7, r7, #16
 4539              	.LCFI217:
 4540              		.cfi_def_cfa_offset 8
 4541 0018 BD46     		mov	sp, r7
 4542              	.LCFI218:
 4543              		.cfi_def_cfa_register 13
 4544              		@ sp needed
 4545 001a 80BD     		pop	{r7, pc}
ARM GAS  /tmp/cckWdj4u.s 			page 112


 4546              		.cfi_endproc
 4547              	.LFE151:
 4549              		.section	.text.UART_DMAError,"ax",%progbits
 4550              		.align	2
 4551              		.thumb
 4552              		.thumb_func
 4554              	UART_DMAError:
 4555              	.LFB152:
1854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART communication error callback 
1857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma: DMA handle
1858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)   
1861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4556              		.loc 1 1861 0
 4557              		.cfi_startproc
 4558              		@ args = 0, pretend = 0, frame = 16
 4559              		@ frame_needed = 1, uses_anonymous_args = 0
 4560 0000 80B5     		push	{r7, lr}
 4561              	.LCFI219:
 4562              		.cfi_def_cfa_offset 8
 4563              		.cfi_offset 7, -8
 4564              		.cfi_offset 14, -4
 4565 0002 84B0     		sub	sp, sp, #16
 4566              	.LCFI220:
 4567              		.cfi_def_cfa_offset 24
 4568 0004 00AF     		add	r7, sp, #0
 4569              	.LCFI221:
 4570              		.cfi_def_cfa_register 7
 4571 0006 7860     		str	r0, [r7, #4]
1862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4572              		.loc 1 1862 0
 4573 0008 7B68     		ldr	r3, [r7, #4]
 4574 000a 5B6A     		ldr	r3, [r3, #36]
 4575 000c FB60     		str	r3, [r7, #12]
1863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0;
 4576              		.loc 1 1863 0
 4577 000e FB68     		ldr	r3, [r7, #12]
 4578 0010 0022     		movs	r2, #0
 4579 0012 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0;
 4580              		.loc 1 1864 0
 4581 0016 FB68     		ldr	r3, [r7, #12]
 4582 0018 0022     		movs	r2, #0
 4583 001a A3F85220 		strh	r2, [r3, #82]	@ movhi
1865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->State= HAL_UART_STATE_READY;
 4584              		.loc 1 1865 0
 4585 001e FB68     		ldr	r3, [r7, #12]
 4586 0020 0122     		movs	r2, #1
 4587 0022 83F86920 		strb	r2, [r3, #105]
1866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 4588              		.loc 1 1866 0
 4589 0026 FB68     		ldr	r3, [r7, #12]
 4590 0028 93F86A30 		ldrb	r3, [r3, #106]	@ zero_extendqisi2
 4591 002c 43F01003 		orr	r3, r3, #16
ARM GAS  /tmp/cckWdj4u.s 			page 113


 4592 0030 DAB2     		uxtb	r2, r3
 4593 0032 FB68     		ldr	r3, [r7, #12]
 4594 0034 83F86A20 		strb	r2, [r3, #106]
1867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 4595              		.loc 1 1867 0
 4596 0038 F868     		ldr	r0, [r7, #12]
 4597 003a FFF7FEFF 		bl	HAL_UART_ErrorCallback
1868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4598              		.loc 1 1868 0
 4599 003e 00BF     		nop
 4600 0040 1037     		adds	r7, r7, #16
 4601              	.LCFI222:
 4602              		.cfi_def_cfa_offset 8
 4603 0042 BD46     		mov	sp, r7
 4604              	.LCFI223:
 4605              		.cfi_def_cfa_register 13
 4606              		@ sp needed
 4607 0044 80BD     		pop	{r7, pc}
 4608              		.cfi_endproc
 4609              	.LFE152:
 4611 0046 00BF     		.section	.text.UART_Transmit_IT,"ax",%progbits
 4612              		.align	2
 4613              		.thumb
 4614              		.thumb_func
 4616              	UART_Transmit_IT:
 4617              	.LFB153:
1869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode 
1872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         Function called under interruption only, once
1873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT()      
1874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart: UART handle
1875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
1878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4618              		.loc 1 1878 0
 4619              		.cfi_startproc
 4620              		@ args = 0, pretend = 0, frame = 16
 4621              		@ frame_needed = 1, uses_anonymous_args = 0
 4622              		@ link register save eliminated.
 4623 0000 80B4     		push	{r7}
 4624              	.LCFI224:
 4625              		.cfi_def_cfa_offset 4
 4626              		.cfi_offset 7, -4
 4627 0002 85B0     		sub	sp, sp, #20
 4628              	.LCFI225:
 4629              		.cfi_def_cfa_offset 24
 4630 0004 00AF     		add	r7, sp, #0
 4631              	.LCFI226:
 4632              		.cfi_def_cfa_register 7
 4633 0006 7860     		str	r0, [r7, #4]
1879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
1880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->State == HAL_UART_STATE_BUSY_TX) || (huart->State == HAL_UART_STATE_BUSY_TX_RX))
 4634              		.loc 1 1881 0
 4635 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cckWdj4u.s 			page 114


 4636 000a 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 4637 000e 122B     		cmp	r3, #18
 4638 0010 04D0     		beq	.L262
 4639              		.loc 1 1881 0 is_stmt 0 discriminator 1
 4640 0012 7B68     		ldr	r3, [r7, #4]
 4641 0014 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 4642 0018 322B     		cmp	r3, #50
 4643 001a 44D1     		bne	.L263
 4644              	.L262:
1882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  
1884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->TxXferCount == 0)
 4645              		.loc 1 1884 0 is_stmt 1
 4646 001c 7B68     		ldr	r3, [r7, #4]
 4647 001e B3F85230 		ldrh	r3, [r3, #82]
 4648 0022 002B     		cmp	r3, #0
 4649 0024 11D1     		bne	.L264
1885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
1887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 4650              		.loc 1 1887 0
 4651 0026 7B68     		ldr	r3, [r7, #4]
 4652 0028 1B68     		ldr	r3, [r3]
 4653 002a 7A68     		ldr	r2, [r7, #4]
 4654 002c 1268     		ldr	r2, [r2]
 4655 002e 1268     		ldr	r2, [r2]
 4656 0030 22F08002 		bic	r2, r2, #128
 4657 0034 1A60     		str	r2, [r3]
1888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      
1889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */    
1890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 4658              		.loc 1 1890 0
 4659 0036 7B68     		ldr	r3, [r7, #4]
 4660 0038 1B68     		ldr	r3, [r3]
 4661 003a 7A68     		ldr	r2, [r7, #4]
 4662 003c 1268     		ldr	r2, [r2]
 4663 003e 1268     		ldr	r2, [r2]
 4664 0040 42F04002 		orr	r2, r2, #64
 4665 0044 1A60     		str	r2, [r3]
1891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       
1892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_OK;
 4666              		.loc 1 1892 0
 4667 0046 0023     		movs	r3, #0
 4668 0048 2EE0     		b	.L265
 4669              	.L264:
1893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 4670              		.loc 1 1896 0
 4671 004a 7B68     		ldr	r3, [r7, #4]
 4672 004c 9B68     		ldr	r3, [r3, #8]
 4673 004e B3F5805F 		cmp	r3, #4096
 4674 0052 14D1     		bne	.L266
 4675              		.loc 1 1896 0 is_stmt 0 discriminator 1
 4676 0054 7B68     		ldr	r3, [r7, #4]
 4677 0056 1B69     		ldr	r3, [r3, #16]
ARM GAS  /tmp/cckWdj4u.s 			page 115


 4678 0058 002B     		cmp	r3, #0
 4679 005a 10D1     		bne	.L266
1897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         tmp = (uint16_t*) huart->pTxBuffPtr;
 4680              		.loc 1 1898 0 is_stmt 1
 4681 005c 7B68     		ldr	r3, [r7, #4]
 4682 005e DB6C     		ldr	r3, [r3, #76]
 4683 0060 FB60     		str	r3, [r7, #12]
1899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FF);
 4684              		.loc 1 1899 0
 4685 0062 7B68     		ldr	r3, [r7, #4]
 4686 0064 1B68     		ldr	r3, [r3]
 4687 0066 FA68     		ldr	r2, [r7, #12]
 4688 0068 1288     		ldrh	r2, [r2]
 4689 006a C2F30802 		ubfx	r2, r2, #0, #9
 4690 006e 92B2     		uxth	r2, r2
 4691 0070 1A85     		strh	r2, [r3, #40]	@ movhi
1900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->pTxBuffPtr += 2;
 4692              		.loc 1 1900 0
 4693 0072 7B68     		ldr	r3, [r7, #4]
 4694 0074 DB6C     		ldr	r3, [r3, #76]
 4695 0076 9A1C     		adds	r2, r3, #2
 4696 0078 7B68     		ldr	r3, [r7, #4]
 4697 007a DA64     		str	r2, [r3, #76]
 4698 007c 09E0     		b	.L267
 4699              	.L266:
1901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       } 
1902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFF);
 4700              		.loc 1 1904 0
 4701 007e 7B68     		ldr	r3, [r7, #4]
 4702 0080 1A68     		ldr	r2, [r3]
 4703 0082 7B68     		ldr	r3, [r7, #4]
 4704 0084 DB6C     		ldr	r3, [r3, #76]
 4705 0086 581C     		adds	r0, r3, #1
 4706 0088 7968     		ldr	r1, [r7, #4]
 4707 008a C864     		str	r0, [r1, #76]
 4708 008c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4709 008e 9BB2     		uxth	r3, r3
 4710 0090 1385     		strh	r3, [r2, #40]	@ movhi
 4711              	.L267:
1905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount--;
 4712              		.loc 1 1907 0
 4713 0092 7B68     		ldr	r3, [r7, #4]
 4714 0094 B3F85230 		ldrh	r3, [r3, #82]
 4715 0098 013B     		subs	r3, r3, #1
 4716 009a 9AB2     		uxth	r2, r3
 4717 009c 7B68     		ldr	r3, [r7, #4]
 4718 009e A3F85220 		strh	r2, [r3, #82]	@ movhi
1908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_OK;
 4719              		.loc 1 1909 0
 4720 00a2 0023     		movs	r3, #0
 4721 00a4 00E0     		b	.L265
ARM GAS  /tmp/cckWdj4u.s 			page 116


 4722              	.L263:
1910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;   
 4723              		.loc 1 1914 0
 4724 00a6 0223     		movs	r3, #2
 4725              	.L265:
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4726              		.loc 1 1916 0
 4727 00a8 1846     		mov	r0, r3
 4728 00aa 1437     		adds	r7, r7, #20
 4729              	.LCFI227:
 4730              		.cfi_def_cfa_offset 4
 4731 00ac BD46     		mov	sp, r7
 4732              	.LCFI228:
 4733              		.cfi_def_cfa_register 13
 4734              		@ sp needed
 4735 00ae 5DF8047B 		ldr	r7, [sp], #4
 4736              	.LCFI229:
 4737              		.cfi_restore 7
 4738              		.cfi_def_cfa_offset 0
 4739 00b2 7047     		bx	lr
 4740              		.cfi_endproc
 4741              	.LFE153:
 4743              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 4744              		.align	2
 4745              		.thumb
 4746              		.thumb_func
 4748              	UART_EndTransmit_IT:
 4749              	.LFB154:
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
1921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
1926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4750              		.loc 1 1926 0
 4751              		.cfi_startproc
 4752              		@ args = 0, pretend = 0, frame = 8
 4753              		@ frame_needed = 1, uses_anonymous_args = 0
 4754 0000 80B5     		push	{r7, lr}
 4755              	.LCFI230:
 4756              		.cfi_def_cfa_offset 8
 4757              		.cfi_offset 7, -8
 4758              		.cfi_offset 14, -4
 4759 0002 82B0     		sub	sp, sp, #8
 4760              	.LCFI231:
 4761              		.cfi_def_cfa_offset 16
 4762 0004 00AF     		add	r7, sp, #0
 4763              	.LCFI232:
ARM GAS  /tmp/cckWdj4u.s 			page 117


 4764              		.cfi_def_cfa_register 7
 4765 0006 7860     		str	r0, [r7, #4]
1927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */    
1928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 4766              		.loc 1 1928 0
 4767 0008 7B68     		ldr	r3, [r7, #4]
 4768 000a 1B68     		ldr	r3, [r3]
 4769 000c 7A68     		ldr	r2, [r7, #4]
 4770 000e 1268     		ldr	r2, [r2]
 4771 0010 1268     		ldr	r2, [r2]
 4772 0012 22F04002 		bic	r2, r2, #64
 4773 0016 1A60     		str	r2, [r3]
1929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if a receive process is ongoing or not */
1931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
 4774              		.loc 1 1931 0
 4775 0018 7B68     		ldr	r3, [r7, #4]
 4776 001a 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 4777 001e 322B     		cmp	r3, #50
 4778 0020 04D1     		bne	.L269
1932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->State = HAL_UART_STATE_BUSY_RX;
 4779              		.loc 1 1933 0
 4780 0022 7B68     		ldr	r3, [r7, #4]
 4781 0024 2222     		movs	r2, #34
 4782 0026 83F86920 		strb	r2, [r3, #105]
 4783 002a 0BE0     		b	.L270
 4784              	.L269:
1934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 4785              		.loc 1 1938 0
 4786 002c 7B68     		ldr	r3, [r7, #4]
 4787 002e 1B68     		ldr	r3, [r3]
 4788 0030 7A68     		ldr	r2, [r7, #4]
 4789 0032 1268     		ldr	r2, [r2]
 4790 0034 9268     		ldr	r2, [r2, #8]
 4791 0036 22F00102 		bic	r2, r2, #1
 4792 003a 9A60     		str	r2, [r3, #8]
1939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
1940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->State = HAL_UART_STATE_READY;
 4793              		.loc 1 1940 0
 4794 003c 7B68     		ldr	r3, [r7, #4]
 4795 003e 0122     		movs	r2, #1
 4796 0040 83F86920 		strb	r2, [r3, #105]
 4797              	.L270:
1941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 4798              		.loc 1 1943 0
 4799 0044 7868     		ldr	r0, [r7, #4]
 4800 0046 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
1944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 4801              		.loc 1 1945 0
ARM GAS  /tmp/cckWdj4u.s 			page 118


 4802 004a 0023     		movs	r3, #0
1946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4803              		.loc 1 1946 0
 4804 004c 1846     		mov	r0, r3
 4805 004e 0837     		adds	r7, r7, #8
 4806              	.LCFI233:
 4807              		.cfi_def_cfa_offset 8
 4808 0050 BD46     		mov	sp, r7
 4809              	.LCFI234:
 4810              		.cfi_def_cfa_register 13
 4811              		@ sp needed
 4812 0052 80BD     		pop	{r7, pc}
 4813              		.cfi_endproc
 4814              	.LFE154:
 4816              		.section	.text.UART_Receive_IT,"ax",%progbits
 4817              		.align	2
 4818              		.thumb
 4819              		.thumb_func
 4821              	UART_Receive_IT:
 4822              	.LFB155:
1947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode 
1951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         Function called under interruption only, once
1952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()      
1953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart: UART handle
1954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
1957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4823              		.loc 1 1957 0
 4824              		.cfi_startproc
 4825              		@ args = 0, pretend = 0, frame = 16
 4826              		@ frame_needed = 1, uses_anonymous_args = 0
 4827 0000 80B5     		push	{r7, lr}
 4828              	.LCFI235:
 4829              		.cfi_def_cfa_offset 8
 4830              		.cfi_offset 7, -8
 4831              		.cfi_offset 14, -4
 4832 0002 84B0     		sub	sp, sp, #16
 4833              	.LCFI236:
 4834              		.cfi_def_cfa_offset 24
 4835 0004 00AF     		add	r7, sp, #0
 4836              	.LCFI237:
 4837              		.cfi_def_cfa_register 7
 4838 0006 7860     		str	r0, [r7, #4]
1958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
1959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 4839              		.loc 1 1959 0
 4840 0008 7B68     		ldr	r3, [r7, #4]
 4841 000a B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 4842 000e FB81     		strh	r3, [r7, #14]	@ movhi
1960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((huart->State == HAL_UART_STATE_BUSY_RX) || (huart->State == HAL_UART_STATE_BUSY_TX_RX))
 4843              		.loc 1 1961 0
 4844 0010 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cckWdj4u.s 			page 119


 4845 0012 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 4846 0016 222B     		cmp	r3, #34
 4847 0018 04D0     		beq	.L273
 4848              		.loc 1 1961 0 is_stmt 0 discriminator 1
 4849 001a 7B68     		ldr	r3, [r7, #4]
 4850 001c 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 4851 0020 322B     		cmp	r3, #50
 4852 0022 63D1     		bne	.L274
 4853              	.L273:
1962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
1964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 4854              		.loc 1 1964 0 is_stmt 1
 4855 0024 7B68     		ldr	r3, [r7, #4]
 4856 0026 9B68     		ldr	r3, [r3, #8]
 4857 0028 B3F5805F 		cmp	r3, #4096
 4858 002c 15D1     		bne	.L275
 4859              		.loc 1 1964 0 is_stmt 0 discriminator 1
 4860 002e 7B68     		ldr	r3, [r7, #4]
 4861 0030 1B69     		ldr	r3, [r3, #16]
 4862 0032 002B     		cmp	r3, #0
 4863 0034 11D1     		bne	.L275
1965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr ;
 4864              		.loc 1 1966 0 is_stmt 1
 4865 0036 7B68     		ldr	r3, [r7, #4]
 4866 0038 5B6D     		ldr	r3, [r3, #84]
 4867 003a BB60     		str	r3, [r7, #8]
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 4868              		.loc 1 1967 0
 4869 003c 7B68     		ldr	r3, [r7, #4]
 4870 003e 1B68     		ldr	r3, [r3]
 4871 0040 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 4872 0042 9AB2     		uxth	r2, r3
 4873 0044 FB89     		ldrh	r3, [r7, #14]	@ movhi
 4874 0046 1340     		ands	r3, r3, r2
 4875 0048 9AB2     		uxth	r2, r3
 4876 004a BB68     		ldr	r3, [r7, #8]
 4877 004c 1A80     		strh	r2, [r3]	@ movhi
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->pRxBuffPtr +=2;       
 4878              		.loc 1 1968 0
 4879 004e 7B68     		ldr	r3, [r7, #4]
 4880 0050 5B6D     		ldr	r3, [r3, #84]
 4881 0052 9A1C     		adds	r2, r3, #2
 4882 0054 7B68     		ldr	r3, [r7, #4]
 4883 0056 5A65     		str	r2, [r3, #84]
 4884 0058 0EE0     		b	.L276
 4885              	.L275:
1969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     } 
1970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask); 
 4886              		.loc 1 1972 0
 4887 005a 7B68     		ldr	r3, [r7, #4]
 4888 005c 5B6D     		ldr	r3, [r3, #84]
 4889 005e 591C     		adds	r1, r3, #1
 4890 0060 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/cckWdj4u.s 			page 120


 4891 0062 5165     		str	r1, [r2, #84]
 4892 0064 7A68     		ldr	r2, [r7, #4]
 4893 0066 1268     		ldr	r2, [r2]
 4894 0068 928C     		ldrh	r2, [r2, #36]	@ movhi
 4895 006a 92B2     		uxth	r2, r2
 4896 006c D1B2     		uxtb	r1, r2
 4897 006e FA89     		ldrh	r2, [r7, #14]	@ movhi
 4898 0070 D2B2     		uxtb	r2, r2
 4899 0072 0A40     		ands	r2, r2, r1
 4900 0074 D2B2     		uxtb	r2, r2
 4901 0076 1A70     		strb	r2, [r3]
 4902              	.L276:
1973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
1975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(--huart->RxXferCount == 0)
 4903              		.loc 1 1975 0
 4904 0078 7B68     		ldr	r3, [r7, #4]
 4905 007a B3F85A30 		ldrh	r3, [r3, #90]
 4906 007e 013B     		subs	r3, r3, #1
 4907 0080 9AB2     		uxth	r2, r3
 4908 0082 7B68     		ldr	r3, [r7, #4]
 4909 0084 A3F85A20 		strh	r2, [r3, #90]	@ movhi
 4910 0088 7B68     		ldr	r3, [r7, #4]
 4911 008a B3F85A30 		ldrh	r3, [r3, #90]
 4912 008e 002B     		cmp	r3, #0
 4913 0090 2AD1     		bne	.L277
1976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 4914              		.loc 1 1977 0
 4915 0092 7B68     		ldr	r3, [r7, #4]
 4916 0094 1B68     		ldr	r3, [r3]
 4917 0096 7A68     		ldr	r2, [r7, #4]
 4918 0098 1268     		ldr	r2, [r2]
 4919 009a 1268     		ldr	r2, [r2]
 4920 009c 22F02002 		bic	r2, r2, #32
 4921 00a0 1A60     		str	r2, [r3]
1978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       
1979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Check if a transmit Process is ongoing or not */
1980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
 4922              		.loc 1 1980 0
 4923 00a2 7B68     		ldr	r3, [r7, #4]
 4924 00a4 93F86930 		ldrb	r3, [r3, #105]	@ zero_extendqisi2
 4925 00a8 322B     		cmp	r3, #50
 4926 00aa 04D1     		bne	.L278
1981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->State = HAL_UART_STATE_BUSY_TX;
 4927              		.loc 1 1982 0
 4928 00ac 7B68     		ldr	r3, [r7, #4]
 4929 00ae 1222     		movs	r2, #18
 4930 00b0 83F86920 		strb	r2, [r3, #105]
 4931 00b4 13E0     		b	.L279
 4932              	.L278:
1983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt */
1987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
ARM GAS  /tmp/cckWdj4u.s 			page 121


 4933              		.loc 1 1987 0
 4934 00b6 7B68     		ldr	r3, [r7, #4]
 4935 00b8 1B68     		ldr	r3, [r3]
 4936 00ba 7A68     		ldr	r2, [r7, #4]
 4937 00bc 1268     		ldr	r2, [r2]
 4938 00be 1268     		ldr	r2, [r2]
 4939 00c0 22F48072 		bic	r2, r2, #256
 4940 00c4 1A60     		str	r2, [r3]
1988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         
1989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 4941              		.loc 1 1990 0
 4942 00c6 7B68     		ldr	r3, [r7, #4]
 4943 00c8 1B68     		ldr	r3, [r3]
 4944 00ca 7A68     		ldr	r2, [r7, #4]
 4945 00cc 1268     		ldr	r2, [r2]
 4946 00ce 9268     		ldr	r2, [r2, #8]
 4947 00d0 22F00102 		bic	r2, r2, #1
 4948 00d4 9A60     		str	r2, [r3, #8]
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         
1992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->State = HAL_UART_STATE_READY;
 4949              		.loc 1 1992 0
 4950 00d6 7B68     		ldr	r3, [r7, #4]
 4951 00d8 0122     		movs	r2, #1
 4952 00da 83F86920 		strb	r2, [r3, #105]
 4953              	.L279:
1993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       
1995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 4954              		.loc 1 1995 0
 4955 00de 7868     		ldr	r0, [r7, #4]
 4956 00e0 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
1996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       
1997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_OK;
 4957              		.loc 1 1997 0
 4958 00e4 0023     		movs	r3, #0
 4959 00e6 02E0     		b	.L280
 4960              	.L277:
1998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
2000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 4961              		.loc 1 2000 0
 4962 00e8 0023     		movs	r3, #0
 4963 00ea 00E0     		b	.L280
 4964              	.L274:
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY; 
 4965              		.loc 1 2004 0
 4966 00ec 0223     		movs	r3, #2
 4967              	.L280:
2005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4968              		.loc 1 2006 0
 4969 00ee 1846     		mov	r0, r3
 4970 00f0 1037     		adds	r7, r7, #16
ARM GAS  /tmp/cckWdj4u.s 			page 122


 4971              	.LCFI238:
 4972              		.cfi_def_cfa_offset 8
 4973 00f2 BD46     		mov	sp, r7
 4974              	.LCFI239:
 4975              		.cfi_def_cfa_register 13
 4976              		@ sp needed
 4977 00f4 80BD     		pop	{r7, pc}
 4978              		.cfi_endproc
 4979              	.LFE155:
 4981 00f6 00BF     		.text
 4982              	.Letext0:
 4983              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 4984              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 4985              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 4986              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 4987              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 4988              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 4989              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 4990              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/cckWdj4u.s 			page 123


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal_uart.c
     /tmp/cckWdj4u.s:21     .text.HAL_UART_Init:0000000000000000 $t
     /tmp/cckWdj4u.s:26     .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/cckWdj4u.s:638    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/cckWdj4u.s:3072   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/cckWdj4u.s:3615   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/cckWdj4u.s:3816   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/cckWdj4u.s:136    .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/cckWdj4u.s:141    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/cckWdj4u.s:258    .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/cckWdj4u.s:263    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/cckWdj4u.s:400    .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/cckWdj4u.s:405    .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/cckWdj4u.s:543    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/cckWdj4u.s:548    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/cckWdj4u.s:679    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/cckWdj4u.s:633    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/cckWdj4u.s:674    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/cckWdj4u.s:715    .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/cckWdj4u.s:720    .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/cckWdj4u.s:2438   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/cckWdj4u.s:926    .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/cckWdj4u.s:931    .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/cckWdj4u.s:1178   .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/cckWdj4u.s:1183   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/cckWdj4u.s:1318   .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/cckWdj4u.s:1323   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/cckWdj4u.s:1509   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/cckWdj4u.s:1514   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/cckWdj4u.s:1665   .text.HAL_UART_Transmit_DMA:00000000000000dc $d
     /tmp/cckWdj4u.s:4306   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/cckWdj4u.s:4397   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/cckWdj4u.s:4554   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/cckWdj4u.s:1672   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/cckWdj4u.s:1677   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/cckWdj4u.s:1824   .text.HAL_UART_Receive_DMA:00000000000000d4 $d
     /tmp/cckWdj4u.s:4440   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/cckWdj4u.s:4511   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/cckWdj4u.s:1831   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/cckWdj4u.s:1836   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/cckWdj4u.s:1944   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/cckWdj4u.s:1949   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/cckWdj4u.s:2067   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/cckWdj4u.s:2072   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/cckWdj4u.s:2174   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/cckWdj4u.s:2179   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/cckWdj4u.s:2799   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/cckWdj4u.s:2840   .text.HAL_UART_WakeupCallback:0000000000000000 HAL_UART_WakeupCallback
     /tmp/cckWdj4u.s:4821   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
     /tmp/cckWdj4u.s:4616   .text.UART_Transmit_IT:0000000000000000 UART_Transmit_IT
     /tmp/cckWdj4u.s:4748   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/cckWdj4u.s:2433   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/cckWdj4u.s:2630   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/cckWdj4u.s:2635   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/cckWdj4u.s:2671   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/cckWdj4u.s:2676   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
ARM GAS  /tmp/cckWdj4u.s 			page 124


     /tmp/cckWdj4u.s:2712   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/cckWdj4u.s:2717   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/cckWdj4u.s:2753   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/cckWdj4u.s:2758   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/cckWdj4u.s:2794   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/cckWdj4u.s:2835   .text.HAL_UART_WakeupCallback:0000000000000000 $t
     /tmp/cckWdj4u.s:2876   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/cckWdj4u.s:2881   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/cckWdj4u.s:2947   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/cckWdj4u.s:2952   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/cckWdj4u.s:3018   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/cckWdj4u.s:3023   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/cckWdj4u.s:3067   .text.UART_SetConfig:0000000000000000 $t
     /tmp/cckWdj4u.s:3174   .text.UART_SetConfig:00000000000000a0 $d
     /tmp/cckWdj4u.s:3178   .text.UART_SetConfig:00000000000000b0 $t
     /tmp/cckWdj4u.s:3407   .text.UART_SetConfig:0000000000000210 $d
     /tmp/cckWdj4u.s:3416   .text.UART_SetConfig:0000000000000234 $t
     /tmp/cckWdj4u.s:3503   .text.UART_SetConfig:00000000000002c4 $d
     /tmp/cckWdj4u.s:3512   .text.UART_SetConfig:00000000000002e8 $t
     /tmp/cckWdj4u.s:3567   .text.UART_SetConfig:0000000000000344 $d
     /tmp/cckWdj4u.s:3577   .text.UART_SetConfig:0000000000000364 $t
     /tmp/cckWdj4u.s:3610   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/cckWdj4u.s:3811   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/cckWdj4u.s:3903   .text.UART_Wakeup_AddressConfig:0000000000000000 $t
     /tmp/cckWdj4u.s:3908   .text.UART_Wakeup_AddressConfig:0000000000000000 UART_Wakeup_AddressConfig
     /tmp/cckWdj4u.s:3967   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/cckWdj4u.s:3972   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/cckWdj4u.s:4052   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/cckWdj4u.s:4057   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/cckWdj4u.s:4137   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/cckWdj4u.s:4142   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/cckWdj4u.s:4214   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/cckWdj4u.s:4219   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/cckWdj4u.s:4258   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/cckWdj4u.s:4263   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/cckWdj4u.s:4302   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/cckWdj4u.s:4393   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/cckWdj4u.s:4436   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/cckWdj4u.s:4507   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/cckWdj4u.s:4550   .text.UART_DMAError:0000000000000000 $t
     /tmp/cckWdj4u.s:4612   .text.UART_Transmit_IT:0000000000000000 $t
     /tmp/cckWdj4u.s:4744   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/cckWdj4u.s:4817   .text.UART_Receive_IT:0000000000000000 $t
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_GetTick
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetSysClockFreq
