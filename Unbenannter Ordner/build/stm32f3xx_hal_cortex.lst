ARM GAS  /tmp/ccLpvG41.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"stm32f3xx_hal_cortex.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.NVIC_SetPriorityGrouping,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	NVIC_SetPriorityGrouping:
  26              	.LFB95:
  27              		.file 1 "Drivers/CMSIS/Include/core_cm4.h"
   1:Drivers/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:Drivers/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm4.h ****  * @version  V3.20
   5:Drivers/CMSIS/Include/core_cm4.h ****  * @date     25. February 2013
   6:Drivers/CMSIS/Include/core_cm4.h ****  *
   7:Drivers/CMSIS/Include/core_cm4.h ****  * @note
   8:Drivers/CMSIS/Include/core_cm4.h ****  *
   9:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  10:Drivers/CMSIS/Include/core_cm4.h **** /* Copyright (c) 2009 - 2013 ARM LIMITED
  11:Drivers/CMSIS/Include/core_cm4.h **** 
  12:Drivers/CMSIS/Include/core_cm4.h ****    All rights reserved.
  13:Drivers/CMSIS/Include/core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  14:Drivers/CMSIS/Include/core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  15:Drivers/CMSIS/Include/core_cm4.h ****    - Redistributions of source code must retain the above copyright
  16:Drivers/CMSIS/Include/core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  17:Drivers/CMSIS/Include/core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  18:Drivers/CMSIS/Include/core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  19:Drivers/CMSIS/Include/core_cm4.h ****      documentation and/or other materials provided with the distribution.
  20:Drivers/CMSIS/Include/core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:Drivers/CMSIS/Include/core_cm4.h ****      to endorse or promote products derived from this software without
  22:Drivers/CMSIS/Include/core_cm4.h ****      specific prior written permission.
  23:Drivers/CMSIS/Include/core_cm4.h ****    *
  24:Drivers/CMSIS/Include/core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:Drivers/CMSIS/Include/core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:Drivers/CMSIS/Include/core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:Drivers/CMSIS/Include/core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:Drivers/CMSIS/Include/core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:Drivers/CMSIS/Include/core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:Drivers/CMSIS/Include/core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:Drivers/CMSIS/Include/core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
ARM GAS  /tmp/ccLpvG41.s 			page 2


  32:Drivers/CMSIS/Include/core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:Drivers/CMSIS/Include/core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:Drivers/CMSIS/Include/core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:Drivers/CMSIS/Include/core_cm4.h ****    ---------------------------------------------------------------------------*/
  36:Drivers/CMSIS/Include/core_cm4.h **** 
  37:Drivers/CMSIS/Include/core_cm4.h **** 
  38:Drivers/CMSIS/Include/core_cm4.h **** #if defined ( __ICCARM__ )
  39:Drivers/CMSIS/Include/core_cm4.h ****  #pragma system_include  /* treat file as system include file for MISRA check */
  40:Drivers/CMSIS/Include/core_cm4.h **** #endif
  41:Drivers/CMSIS/Include/core_cm4.h **** 
  42:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  43:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
  44:Drivers/CMSIS/Include/core_cm4.h **** #endif
  45:Drivers/CMSIS/Include/core_cm4.h **** 
  46:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  47:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  48:Drivers/CMSIS/Include/core_cm4.h **** 
  49:Drivers/CMSIS/Include/core_cm4.h **** /** \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  50:Drivers/CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  51:Drivers/CMSIS/Include/core_cm4.h **** 
  52:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  53:Drivers/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  54:Drivers/CMSIS/Include/core_cm4.h **** 
  55:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  56:Drivers/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  57:Drivers/CMSIS/Include/core_cm4.h **** 
  58:Drivers/CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  59:Drivers/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  60:Drivers/CMSIS/Include/core_cm4.h ****  */
  61:Drivers/CMSIS/Include/core_cm4.h **** 
  62:Drivers/CMSIS/Include/core_cm4.h **** 
  63:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  64:Drivers/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  65:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  66:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup Cortex_M4
  67:Drivers/CMSIS/Include/core_cm4.h ****   @{
  68:Drivers/CMSIS/Include/core_cm4.h ****  */
  69:Drivers/CMSIS/Include/core_cm4.h **** 
  70:Drivers/CMSIS/Include/core_cm4.h **** /*  CMSIS CM4 definitions */
  71:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x03)                                   /*!< [31:16] CMSIS HAL m
  72:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x20)                                   /*!< [15:0]  CMSIS HAL s
  73:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16) | \
  74:Drivers/CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB          )     /*!< CMSIS HAL version n
  75:Drivers/CMSIS/Include/core_cm4.h **** 
  76:Drivers/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (0x04)                                   /*!< Cortex-M Core      
  77:Drivers/CMSIS/Include/core_cm4.h **** 
  78:Drivers/CMSIS/Include/core_cm4.h **** 
  79:Drivers/CMSIS/Include/core_cm4.h **** #if   defined ( __CC_ARM )
  80:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  81:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  82:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  83:Drivers/CMSIS/Include/core_cm4.h **** 
  84:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
  85:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  86:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
  87:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  88:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccLpvG41.s 			page 3


  89:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TMS470__ )
  90:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
  91:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  92:Drivers/CMSIS/Include/core_cm4.h **** 
  93:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
  94:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  95:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  96:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  97:Drivers/CMSIS/Include/core_cm4.h **** 
  98:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
  99:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 100:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 101:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 102:Drivers/CMSIS/Include/core_cm4.h **** 
 103:Drivers/CMSIS/Include/core_cm4.h **** #endif
 104:Drivers/CMSIS/Include/core_cm4.h **** 
 105:Drivers/CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not. For this, __FPU_PRESENT has to be checked p
 106:Drivers/CMSIS/Include/core_cm4.h **** */
 107:Drivers/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
 108:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
 109:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 110:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 111:Drivers/CMSIS/Include/core_cm4.h ****     #else
 112:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 113:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 114:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 115:Drivers/CMSIS/Include/core_cm4.h ****   #else
 116:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 117:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 118:Drivers/CMSIS/Include/core_cm4.h **** 
 119:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 120:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 121:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 122:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 123:Drivers/CMSIS/Include/core_cm4.h ****     #else
 124:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 125:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 126:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 127:Drivers/CMSIS/Include/core_cm4.h ****   #else
 128:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 129:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 130:Drivers/CMSIS/Include/core_cm4.h **** 
 131:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TMS470__ )
 132:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 133:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 134:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 135:Drivers/CMSIS/Include/core_cm4.h ****     #else
 136:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 137:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 138:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 139:Drivers/CMSIS/Include/core_cm4.h ****   #else
 140:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 141:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 142:Drivers/CMSIS/Include/core_cm4.h **** 
 143:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 144:Drivers/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 145:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
ARM GAS  /tmp/ccLpvG41.s 			page 4


 146:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 147:Drivers/CMSIS/Include/core_cm4.h ****     #else
 148:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 149:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 150:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 151:Drivers/CMSIS/Include/core_cm4.h ****   #else
 152:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 153:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 154:Drivers/CMSIS/Include/core_cm4.h **** 
 155:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 156:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 157:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 158:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 159:Drivers/CMSIS/Include/core_cm4.h ****     #else
 160:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 161:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 162:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 163:Drivers/CMSIS/Include/core_cm4.h ****   #else
 164:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 165:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 166:Drivers/CMSIS/Include/core_cm4.h **** #endif
 167:Drivers/CMSIS/Include/core_cm4.h **** 
 168:Drivers/CMSIS/Include/core_cm4.h **** #include <stdint.h>                      /* standard types definitions                      */
 169:Drivers/CMSIS/Include/core_cm4.h **** #include <core_cmInstr.h>                /* Core Instruction Access                         */
 170:Drivers/CMSIS/Include/core_cm4.h **** #include <core_cmFunc.h>                 /* Core Function Access                            */
 171:Drivers/CMSIS/Include/core_cm4.h **** #include <core_cm4_simd.h>               /* Compiler specific SIMD Intrinsics               */
 172:Drivers/CMSIS/Include/core_cm4.h **** 
 173:Drivers/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 174:Drivers/CMSIS/Include/core_cm4.h **** 
 175:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 176:Drivers/CMSIS/Include/core_cm4.h **** 
 177:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 178:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 179:Drivers/CMSIS/Include/core_cm4.h **** 
 180:Drivers/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 181:Drivers/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 183:Drivers/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000
 184:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 186:Drivers/CMSIS/Include/core_cm4.h **** 
 187:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0
 189:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 191:Drivers/CMSIS/Include/core_cm4.h **** 
 192:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:Drivers/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0
 194:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 196:Drivers/CMSIS/Include/core_cm4.h **** 
 197:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:Drivers/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          4
 199:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 201:Drivers/CMSIS/Include/core_cm4.h **** 
 202:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
ARM GAS  /tmp/ccLpvG41.s 			page 5


 203:Drivers/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0
 204:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 206:Drivers/CMSIS/Include/core_cm4.h **** #endif
 207:Drivers/CMSIS/Include/core_cm4.h **** 
 208:Drivers/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:Drivers/CMSIS/Include/core_cm4.h **** /**
 210:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:Drivers/CMSIS/Include/core_cm4.h **** 
 212:Drivers/CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:Drivers/CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 214:Drivers/CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:Drivers/CMSIS/Include/core_cm4.h **** */
 216:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 217:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions                 */
 218:Drivers/CMSIS/Include/core_cm4.h **** #else
 219:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions                 */
 220:Drivers/CMSIS/Include/core_cm4.h **** #endif
 221:Drivers/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions                */
 222:Drivers/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions              */
 223:Drivers/CMSIS/Include/core_cm4.h **** 
 224:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 225:Drivers/CMSIS/Include/core_cm4.h **** 
 226:Drivers/CMSIS/Include/core_cm4.h **** 
 227:Drivers/CMSIS/Include/core_cm4.h **** 
 228:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 229:Drivers/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 230:Drivers/CMSIS/Include/core_cm4.h ****   Core Register contain:
 231:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register
 232:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 233:Drivers/CMSIS/Include/core_cm4.h ****   - Core SCB Register
 234:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 235:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 236:Drivers/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 237:Drivers/CMSIS/Include/core_cm4.h ****   - Core FPU Register
 238:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 239:Drivers/CMSIS/Include/core_cm4.h **** /** \defgroup CMSIS_core_register Defines and Type Definitions
 240:Drivers/CMSIS/Include/core_cm4.h ****     \brief Type definitions and defines for Cortex-M processor based devices.
 241:Drivers/CMSIS/Include/core_cm4.h **** */
 242:Drivers/CMSIS/Include/core_cm4.h **** 
 243:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup    CMSIS_core_register
 244:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup   CMSIS_CORE  Status and Control Registers
 245:Drivers/CMSIS/Include/core_cm4.h ****     \brief  Core Register type definitions.
 246:Drivers/CMSIS/Include/core_cm4.h ****   @{
 247:Drivers/CMSIS/Include/core_cm4.h ****  */
 248:Drivers/CMSIS/Include/core_cm4.h **** 
 249:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 250:Drivers/CMSIS/Include/core_cm4.h ****  */
 251:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 252:Drivers/CMSIS/Include/core_cm4.h **** {
 253:Drivers/CMSIS/Include/core_cm4.h ****   struct
 254:Drivers/CMSIS/Include/core_cm4.h ****   {
 255:Drivers/CMSIS/Include/core_cm4.h **** #if (__CORTEX_M != 0x04)
 256:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved                           */
 257:Drivers/CMSIS/Include/core_cm4.h **** #else
 258:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved                           */
 259:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
ARM GAS  /tmp/ccLpvG41.s 			page 6


 260:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved                           */
 261:Drivers/CMSIS/Include/core_cm4.h **** #endif
 262:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 263:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 264:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 265:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 266:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 267:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 268:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 269:Drivers/CMSIS/Include/core_cm4.h **** } APSR_Type;
 270:Drivers/CMSIS/Include/core_cm4.h **** 
 271:Drivers/CMSIS/Include/core_cm4.h **** 
 272:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 273:Drivers/CMSIS/Include/core_cm4.h ****  */
 274:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 275:Drivers/CMSIS/Include/core_cm4.h **** {
 276:Drivers/CMSIS/Include/core_cm4.h ****   struct
 277:Drivers/CMSIS/Include/core_cm4.h ****   {
 278:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 279:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved                           */
 280:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 281:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 282:Drivers/CMSIS/Include/core_cm4.h **** } IPSR_Type;
 283:Drivers/CMSIS/Include/core_cm4.h **** 
 284:Drivers/CMSIS/Include/core_cm4.h **** 
 285:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 286:Drivers/CMSIS/Include/core_cm4.h ****  */
 287:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 288:Drivers/CMSIS/Include/core_cm4.h **** {
 289:Drivers/CMSIS/Include/core_cm4.h ****   struct
 290:Drivers/CMSIS/Include/core_cm4.h ****   {
 291:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 292:Drivers/CMSIS/Include/core_cm4.h **** #if (__CORTEX_M != 0x04)
 293:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved                           */
 294:Drivers/CMSIS/Include/core_cm4.h **** #else
 295:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved                           */
 296:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 297:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved                           */
 298:Drivers/CMSIS/Include/core_cm4.h **** #endif
 299:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0)          */
 300:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0)          */
 301:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 302:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 303:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 304:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 305:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 306:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 307:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 308:Drivers/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 309:Drivers/CMSIS/Include/core_cm4.h **** 
 310:Drivers/CMSIS/Include/core_cm4.h **** 
 311:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 312:Drivers/CMSIS/Include/core_cm4.h ****  */
 313:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 314:Drivers/CMSIS/Include/core_cm4.h **** {
 315:Drivers/CMSIS/Include/core_cm4.h ****   struct
 316:Drivers/CMSIS/Include/core_cm4.h ****   {
ARM GAS  /tmp/ccLpvG41.s 			page 7


 317:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 318:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used                   */
 319:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag           */
 320:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved                           */
 321:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 322:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 323:Drivers/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 324:Drivers/CMSIS/Include/core_cm4.h **** 
 325:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 326:Drivers/CMSIS/Include/core_cm4.h **** 
 327:Drivers/CMSIS/Include/core_cm4.h **** 
 328:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup    CMSIS_core_register
 329:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 330:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the NVIC Registers
 331:Drivers/CMSIS/Include/core_cm4.h ****   @{
 332:Drivers/CMSIS/Include/core_cm4.h ****  */
 333:Drivers/CMSIS/Include/core_cm4.h **** 
 334:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 335:Drivers/CMSIS/Include/core_cm4.h ****  */
 336:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 337:Drivers/CMSIS/Include/core_cm4.h **** {
 338:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ISER[8];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register   
 339:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[24];
 340:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ICER[8];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 341:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RSERVED1[24];
 342:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ISPR[8];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register  
 343:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED2[24];
 344:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ICPR[8];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 345:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED3[24];
 346:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t IABR[8];                 /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register   
 347:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED4[56];
 348:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint8_t  IP[240];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 349:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED5[644];
 350:Drivers/CMSIS/Include/core_cm4.h ****   __O  uint32_t STIR;                    /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 351:Drivers/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 352:Drivers/CMSIS/Include/core_cm4.h **** 
 353:Drivers/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 354:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0                                          /*!< STIR: I
 355:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL << NVIC_STIR_INTID_Pos)            /*!< STIR: I
 356:Drivers/CMSIS/Include/core_cm4.h **** 
 357:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 358:Drivers/CMSIS/Include/core_cm4.h **** 
 359:Drivers/CMSIS/Include/core_cm4.h **** 
 360:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 361:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_SCB     System Control Block (SCB)
 362:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the System Control Block Registers
 363:Drivers/CMSIS/Include/core_cm4.h ****   @{
 364:Drivers/CMSIS/Include/core_cm4.h ****  */
 365:Drivers/CMSIS/Include/core_cm4.h **** 
 366:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the System Control Block (SCB).
 367:Drivers/CMSIS/Include/core_cm4.h ****  */
 368:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 369:Drivers/CMSIS/Include/core_cm4.h **** {
 370:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPUID Base Register             
 371:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 372:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t VTOR;                    /*!< Offset: 0x008 (R/W)  Vector Table Offset Register    
 373:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
ARM GAS  /tmp/ccLpvG41.s 			page 8


 374:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register         
 375:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register  
 376:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint8_t  SHP[12];                 /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 377:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and State
 378:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CFSR;                    /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 379:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t HFSR;                    /*!< Offset: 0x02C (R/W)  HardFault Status Register       
 380:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t DFSR;                    /*!< Offset: 0x030 (R/W)  Debug Fault Status Register     
 381:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t MMFAR;                   /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 382:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t BFAR;                    /*!< Offset: 0x038 (R/W)  BusFault Address Register       
 383:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t AFSR;                    /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 384:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PFR[2];                  /*!< Offset: 0x040 (R/ )  Processor Feature Register      
 385:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t DFR;                     /*!< Offset: 0x048 (R/ )  Debug Feature Register          
 386:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t ADR;                     /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register      
 387:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t MMFR[4];                 /*!< Offset: 0x050 (R/ )  Memory Model Feature Register   
 388:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 389:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[5];
 390:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CPACR;                   /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 391:Drivers/CMSIS/Include/core_cm4.h **** } SCB_Type;
 392:Drivers/CMSIS/Include/core_cm4.h **** 
 393:Drivers/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 394:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 395:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 396:Drivers/CMSIS/Include/core_cm4.h **** 
 397:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 398:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 399:Drivers/CMSIS/Include/core_cm4.h **** 
 400:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 401:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 402:Drivers/CMSIS/Include/core_cm4.h **** 
 403:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 404:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 405:Drivers/CMSIS/Include/core_cm4.h **** 
 406:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 407:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 408:Drivers/CMSIS/Include/core_cm4.h **** 
 409:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 410:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 411:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 412:Drivers/CMSIS/Include/core_cm4.h **** 
 413:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 414:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 415:Drivers/CMSIS/Include/core_cm4.h **** 
 416:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 417:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 418:Drivers/CMSIS/Include/core_cm4.h **** 
 419:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 420:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 421:Drivers/CMSIS/Include/core_cm4.h **** 
 422:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 423:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 424:Drivers/CMSIS/Include/core_cm4.h **** 
 425:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 426:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 427:Drivers/CMSIS/Include/core_cm4.h **** 
 428:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 429:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 430:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccLpvG41.s 			page 9


 431:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 432:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 433:Drivers/CMSIS/Include/core_cm4.h **** 
 434:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 435:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 436:Drivers/CMSIS/Include/core_cm4.h **** 
 437:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 438:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 439:Drivers/CMSIS/Include/core_cm4.h **** 
 440:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 441:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 442:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 443:Drivers/CMSIS/Include/core_cm4.h **** 
 444:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 445:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 446:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 447:Drivers/CMSIS/Include/core_cm4.h **** 
 448:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 449:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 450:Drivers/CMSIS/Include/core_cm4.h **** 
 451:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 452:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 453:Drivers/CMSIS/Include/core_cm4.h **** 
 454:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 455:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 456:Drivers/CMSIS/Include/core_cm4.h **** 
 457:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 458:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 459:Drivers/CMSIS/Include/core_cm4.h **** 
 460:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 461:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 462:Drivers/CMSIS/Include/core_cm4.h **** 
 463:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 464:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 465:Drivers/CMSIS/Include/core_cm4.h **** 
 466:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 467:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 468:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 469:Drivers/CMSIS/Include/core_cm4.h **** 
 470:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 471:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 472:Drivers/CMSIS/Include/core_cm4.h **** 
 473:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 474:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 475:Drivers/CMSIS/Include/core_cm4.h **** 
 476:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 477:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 478:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 479:Drivers/CMSIS/Include/core_cm4.h **** 
 480:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 481:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 482:Drivers/CMSIS/Include/core_cm4.h **** 
 483:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 484:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 485:Drivers/CMSIS/Include/core_cm4.h **** 
 486:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 487:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
ARM GAS  /tmp/ccLpvG41.s 			page 10


 488:Drivers/CMSIS/Include/core_cm4.h **** 
 489:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 490:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 491:Drivers/CMSIS/Include/core_cm4.h **** 
 492:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 493:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 494:Drivers/CMSIS/Include/core_cm4.h **** 
 495:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 496:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 497:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 498:Drivers/CMSIS/Include/core_cm4.h **** 
 499:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 500:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 501:Drivers/CMSIS/Include/core_cm4.h **** 
 502:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 503:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 504:Drivers/CMSIS/Include/core_cm4.h **** 
 505:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 506:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 507:Drivers/CMSIS/Include/core_cm4.h **** 
 508:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 509:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 510:Drivers/CMSIS/Include/core_cm4.h **** 
 511:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 513:Drivers/CMSIS/Include/core_cm4.h **** 
 514:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 516:Drivers/CMSIS/Include/core_cm4.h **** 
 517:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 519:Drivers/CMSIS/Include/core_cm4.h **** 
 520:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 521:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 522:Drivers/CMSIS/Include/core_cm4.h **** 
 523:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 525:Drivers/CMSIS/Include/core_cm4.h **** 
 526:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 527:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 528:Drivers/CMSIS/Include/core_cm4.h **** 
 529:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 530:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 531:Drivers/CMSIS/Include/core_cm4.h **** 
 532:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 533:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 534:Drivers/CMSIS/Include/core_cm4.h **** 
 535:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 537:Drivers/CMSIS/Include/core_cm4.h **** 
 538:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Registers Definitions */
 539:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 540:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm4.h **** 
 542:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 543:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 544:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccLpvG41.s 			page 11


 545:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 546:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 547:Drivers/CMSIS/Include/core_cm4.h **** 
 548:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Registers Definitions */
 549:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 550:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm4.h **** 
 552:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 553:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 554:Drivers/CMSIS/Include/core_cm4.h **** 
 555:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 556:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 557:Drivers/CMSIS/Include/core_cm4.h **** 
 558:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 559:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 560:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 561:Drivers/CMSIS/Include/core_cm4.h **** 
 562:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 563:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 564:Drivers/CMSIS/Include/core_cm4.h **** 
 565:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 566:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 567:Drivers/CMSIS/Include/core_cm4.h **** 
 568:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 569:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm4.h **** 
 571:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 572:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 573:Drivers/CMSIS/Include/core_cm4.h **** 
 574:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 575:Drivers/CMSIS/Include/core_cm4.h **** 
 576:Drivers/CMSIS/Include/core_cm4.h **** 
 577:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 578:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 579:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the System Control and ID Register not in the SCB
 580:Drivers/CMSIS/Include/core_cm4.h ****   @{
 581:Drivers/CMSIS/Include/core_cm4.h ****  */
 582:Drivers/CMSIS/Include/core_cm4.h **** 
 583:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the System Control and ID Register not in the SCB.
 584:Drivers/CMSIS/Include/core_cm4.h ****  */
 585:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 586:Drivers/CMSIS/Include/core_cm4.h **** {
 587:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[1];
 588:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t ICTR;                    /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 589:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ACTLR;                   /*!< Offset: 0x008 (R/W)  Auxiliary Control Register      
 590:Drivers/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 591:Drivers/CMSIS/Include/core_cm4.h **** 
 592:Drivers/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 593:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0                                          /*!< ICTR: I
 594:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL << SCnSCB_ICTR_INTLINESNUM_Pos)      /*!< ICTR: I
 595:Drivers/CMSIS/Include/core_cm4.h **** 
 596:Drivers/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 597:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9                                          /*!< ACTLR: 
 598:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 599:Drivers/CMSIS/Include/core_cm4.h **** 
 600:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8                                          /*!< ACTLR: 
 601:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
ARM GAS  /tmp/ccLpvG41.s 			page 12


 602:Drivers/CMSIS/Include/core_cm4.h **** 
 603:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2                                          /*!< ACTLR: 
 604:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 605:Drivers/CMSIS/Include/core_cm4.h **** 
 606:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1                                          /*!< ACTLR: 
 607:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 608:Drivers/CMSIS/Include/core_cm4.h **** 
 609:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0                                          /*!< ACTLR: 
 610:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL << SCnSCB_ACTLR_DISMCYCINT_Pos)        /*!< ACTLR: 
 611:Drivers/CMSIS/Include/core_cm4.h **** 
 612:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 613:Drivers/CMSIS/Include/core_cm4.h **** 
 614:Drivers/CMSIS/Include/core_cm4.h **** 
 615:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 616:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 617:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the System Timer Registers.
 618:Drivers/CMSIS/Include/core_cm4.h ****   @{
 619:Drivers/CMSIS/Include/core_cm4.h ****  */
 620:Drivers/CMSIS/Include/core_cm4.h **** 
 621:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the System Timer (SysTick).
 622:Drivers/CMSIS/Include/core_cm4.h ****  */
 623:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 624:Drivers/CMSIS/Include/core_cm4.h **** {
 625:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 626:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register   
 627:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register  
 628:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register    
 629:Drivers/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 630:Drivers/CMSIS/Include/core_cm4.h **** 
 631:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 632:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 633:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 634:Drivers/CMSIS/Include/core_cm4.h **** 
 635:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 636:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 637:Drivers/CMSIS/Include/core_cm4.h **** 
 638:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 639:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 640:Drivers/CMSIS/Include/core_cm4.h **** 
 641:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 642:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 643:Drivers/CMSIS/Include/core_cm4.h **** 
 644:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 645:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 646:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 647:Drivers/CMSIS/Include/core_cm4.h **** 
 648:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 649:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 650:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 651:Drivers/CMSIS/Include/core_cm4.h **** 
 652:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 653:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 654:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 655:Drivers/CMSIS/Include/core_cm4.h **** 
 656:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 657:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 658:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccLpvG41.s 			page 13


 659:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 660:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 661:Drivers/CMSIS/Include/core_cm4.h **** 
 662:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 663:Drivers/CMSIS/Include/core_cm4.h **** 
 664:Drivers/CMSIS/Include/core_cm4.h **** 
 665:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 666:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 667:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the Instrumentation Trace Macrocell (ITM)
 668:Drivers/CMSIS/Include/core_cm4.h ****   @{
 669:Drivers/CMSIS/Include/core_cm4.h ****  */
 670:Drivers/CMSIS/Include/core_cm4.h **** 
 671:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 672:Drivers/CMSIS/Include/core_cm4.h ****  */
 673:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 674:Drivers/CMSIS/Include/core_cm4.h **** {
 675:Drivers/CMSIS/Include/core_cm4.h ****   __O  union
 676:Drivers/CMSIS/Include/core_cm4.h ****   {
 677:Drivers/CMSIS/Include/core_cm4.h ****     __O  uint8_t    u8;                  /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit         
 678:Drivers/CMSIS/Include/core_cm4.h ****     __O  uint16_t   u16;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit        
 679:Drivers/CMSIS/Include/core_cm4.h ****     __O  uint32_t   u32;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit        
 680:Drivers/CMSIS/Include/core_cm4.h ****   }  PORT [32];                          /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers     
 681:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[864];
 682:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t TER;                     /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register       
 683:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED1[15];
 684:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t TPR;                     /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register    
 685:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED2[15];
 686:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t TCR;                     /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register      
 687:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED3[29];
 688:Drivers/CMSIS/Include/core_cm4.h ****   __O  uint32_t IWR;                     /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register  
 689:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t IRR;                     /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register   
 690:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t IMCR;                    /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 691:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED4[43];
 692:Drivers/CMSIS/Include/core_cm4.h ****   __O  uint32_t LAR;                     /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register        
 693:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t LSR;                     /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register        
 694:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED5[6];
 695:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID4;                    /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 696:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID5;                    /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 697:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID6;                    /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 698:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID7;                    /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 699:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID0;                    /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 700:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID1;                    /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 701:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID2;                    /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 702:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID3;                    /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 703:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t CID0;                    /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 704:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t CID1;                    /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 705:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t CID2;                    /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 706:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t CID3;                    /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 707:Drivers/CMSIS/Include/core_cm4.h **** } ITM_Type;
 708:Drivers/CMSIS/Include/core_cm4.h **** 
 709:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 710:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 711:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 712:Drivers/CMSIS/Include/core_cm4.h **** 
 713:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 714:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 715:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
ARM GAS  /tmp/ccLpvG41.s 			page 14


 716:Drivers/CMSIS/Include/core_cm4.h **** 
 717:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16                                             /*!< ITM 
 718:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 719:Drivers/CMSIS/Include/core_cm4.h **** 
 720:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10                                             /*!< ITM 
 721:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 722:Drivers/CMSIS/Include/core_cm4.h **** 
 723:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 724:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 725:Drivers/CMSIS/Include/core_cm4.h **** 
 726:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 727:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 728:Drivers/CMSIS/Include/core_cm4.h **** 
 729:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 730:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 731:Drivers/CMSIS/Include/core_cm4.h **** 
 732:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 733:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 734:Drivers/CMSIS/Include/core_cm4.h **** 
 735:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 736:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 737:Drivers/CMSIS/Include/core_cm4.h **** 
 738:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 739:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 740:Drivers/CMSIS/Include/core_cm4.h **** 
 741:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Write Register Definitions */
 742:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 743:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 744:Drivers/CMSIS/Include/core_cm4.h **** 
 745:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Read Register Definitions */
 746:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 747:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 748:Drivers/CMSIS/Include/core_cm4.h **** 
 749:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 750:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 751:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 752:Drivers/CMSIS/Include/core_cm4.h **** 
 753:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 754:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 755:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 756:Drivers/CMSIS/Include/core_cm4.h **** 
 757:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 758:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 759:Drivers/CMSIS/Include/core_cm4.h **** 
 760:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 761:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL << ITM_LSR_Present_Pos)                   /*!< ITM 
 762:Drivers/CMSIS/Include/core_cm4.h **** 
 763:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 764:Drivers/CMSIS/Include/core_cm4.h **** 
 765:Drivers/CMSIS/Include/core_cm4.h **** 
 766:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 767:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 768:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the Data Watchpoint and Trace (DWT)
 769:Drivers/CMSIS/Include/core_cm4.h ****   @{
 770:Drivers/CMSIS/Include/core_cm4.h ****  */
 771:Drivers/CMSIS/Include/core_cm4.h **** 
 772:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
ARM GAS  /tmp/ccLpvG41.s 			page 15


 773:Drivers/CMSIS/Include/core_cm4.h ****  */
 774:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 775:Drivers/CMSIS/Include/core_cm4.h **** {
 776:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  Control Register                
 777:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CYCCNT;                  /*!< Offset: 0x004 (R/W)  Cycle Count Register            
 778:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CPICNT;                  /*!< Offset: 0x008 (R/W)  CPI Count Register              
 779:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t EXCCNT;                  /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 780:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t SLEEPCNT;                /*!< Offset: 0x010 (R/W)  Sleep Count Register            
 781:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t LSUCNT;                  /*!< Offset: 0x014 (R/W)  LSU Count Register              
 782:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FOLDCNT;                 /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 783:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PCSR;                    /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 784:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t COMP0;                   /*!< Offset: 0x020 (R/W)  Comparator Register 0           
 785:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t MASK0;                   /*!< Offset: 0x024 (R/W)  Mask Register 0                 
 786:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FUNCTION0;               /*!< Offset: 0x028 (R/W)  Function Register 0             
 787:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[1];
 788:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t COMP1;                   /*!< Offset: 0x030 (R/W)  Comparator Register 1           
 789:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t MASK1;                   /*!< Offset: 0x034 (R/W)  Mask Register 1                 
 790:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FUNCTION1;               /*!< Offset: 0x038 (R/W)  Function Register 1             
 791:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED1[1];
 792:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t COMP2;                   /*!< Offset: 0x040 (R/W)  Comparator Register 2           
 793:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t MASK2;                   /*!< Offset: 0x044 (R/W)  Mask Register 2                 
 794:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FUNCTION2;               /*!< Offset: 0x048 (R/W)  Function Register 2             
 795:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED2[1];
 796:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t COMP3;                   /*!< Offset: 0x050 (R/W)  Comparator Register 3           
 797:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t MASK3;                   /*!< Offset: 0x054 (R/W)  Mask Register 3                 
 798:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FUNCTION3;               /*!< Offset: 0x058 (R/W)  Function Register 3             
 799:Drivers/CMSIS/Include/core_cm4.h **** } DWT_Type;
 800:Drivers/CMSIS/Include/core_cm4.h **** 
 801:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
 802:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28                                          /*!< DWT CTR
 803:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 804:Drivers/CMSIS/Include/core_cm4.h **** 
 805:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27                                          /*!< DWT CTR
 806:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 807:Drivers/CMSIS/Include/core_cm4.h **** 
 808:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26                                          /*!< DWT CTR
 809:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 810:Drivers/CMSIS/Include/core_cm4.h **** 
 811:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25                                          /*!< DWT CTR
 812:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 813:Drivers/CMSIS/Include/core_cm4.h **** 
 814:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24                                          /*!< DWT CTR
 815:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 816:Drivers/CMSIS/Include/core_cm4.h **** 
 817:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22                                          /*!< DWT CTR
 818:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 819:Drivers/CMSIS/Include/core_cm4.h **** 
 820:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21                                          /*!< DWT CTR
 821:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 822:Drivers/CMSIS/Include/core_cm4.h **** 
 823:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20                                          /*!< DWT CTR
 824:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 825:Drivers/CMSIS/Include/core_cm4.h **** 
 826:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19                                          /*!< DWT CTR
 827:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 828:Drivers/CMSIS/Include/core_cm4.h **** 
 829:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18                                          /*!< DWT CTR
ARM GAS  /tmp/ccLpvG41.s 			page 16


 830:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 831:Drivers/CMSIS/Include/core_cm4.h **** 
 832:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17                                          /*!< DWT CTR
 833:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 834:Drivers/CMSIS/Include/core_cm4.h **** 
 835:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16                                          /*!< DWT CTR
 836:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 837:Drivers/CMSIS/Include/core_cm4.h **** 
 838:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12                                          /*!< DWT CTR
 839:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 840:Drivers/CMSIS/Include/core_cm4.h **** 
 841:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10                                          /*!< DWT CTR
 842:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 843:Drivers/CMSIS/Include/core_cm4.h **** 
 844:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9                                          /*!< DWT CTR
 845:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 846:Drivers/CMSIS/Include/core_cm4.h **** 
 847:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5                                          /*!< DWT CTR
 848:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 849:Drivers/CMSIS/Include/core_cm4.h **** 
 850:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1                                          /*!< DWT CTR
 851:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 852:Drivers/CMSIS/Include/core_cm4.h **** 
 853:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0                                          /*!< DWT CTR
 854:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL << DWT_CTRL_CYCCNTENA_Pos)           /*!< DWT CTR
 855:Drivers/CMSIS/Include/core_cm4.h **** 
 856:Drivers/CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 857:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0                                          /*!< DWT CPI
 858:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL << DWT_CPICNT_CPICNT_Pos)           /*!< DWT CPI
 859:Drivers/CMSIS/Include/core_cm4.h **** 
 860:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 861:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0                                          /*!< DWT EXC
 862:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL << DWT_EXCCNT_EXCCNT_Pos)           /*!< DWT EXC
 863:Drivers/CMSIS/Include/core_cm4.h **** 
 864:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 865:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0                                          /*!< DWT SLE
 866:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL << DWT_SLEEPCNT_SLEEPCNT_Pos)       /*!< DWT SLE
 867:Drivers/CMSIS/Include/core_cm4.h **** 
 868:Drivers/CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 869:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0                                          /*!< DWT LSU
 870:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL << DWT_LSUCNT_LSUCNT_Pos)           /*!< DWT LSU
 871:Drivers/CMSIS/Include/core_cm4.h **** 
 872:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 873:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0                                          /*!< DWT FOL
 874:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL << DWT_FOLDCNT_FOLDCNT_Pos)         /*!< DWT FOL
 875:Drivers/CMSIS/Include/core_cm4.h **** 
 876:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
 877:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0                                          /*!< DWT MAS
 878:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL << DWT_MASK_MASK_Pos)               /*!< DWT MAS
 879:Drivers/CMSIS/Include/core_cm4.h **** 
 880:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
 881:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24                                          /*!< DWT FUN
 882:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 883:Drivers/CMSIS/Include/core_cm4.h **** 
 884:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16                                          /*!< DWT FUN
 885:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 886:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccLpvG41.s 			page 17


 887:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12                                          /*!< DWT FUN
 888:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 889:Drivers/CMSIS/Include/core_cm4.h **** 
 890:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10                                          /*!< DWT FUN
 891:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 892:Drivers/CMSIS/Include/core_cm4.h **** 
 893:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9                                          /*!< DWT FUN
 894:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 895:Drivers/CMSIS/Include/core_cm4.h **** 
 896:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8                                          /*!< DWT FUN
 897:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 898:Drivers/CMSIS/Include/core_cm4.h **** 
 899:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7                                          /*!< DWT FUN
 900:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 901:Drivers/CMSIS/Include/core_cm4.h **** 
 902:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5                                          /*!< DWT FUN
 903:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 904:Drivers/CMSIS/Include/core_cm4.h **** 
 905:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0                                          /*!< DWT FUN
 906:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL << DWT_FUNCTION_FUNCTION_Pos)        /*!< DWT FUN
 907:Drivers/CMSIS/Include/core_cm4.h **** 
 908:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
 909:Drivers/CMSIS/Include/core_cm4.h **** 
 910:Drivers/CMSIS/Include/core_cm4.h **** 
 911:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 912:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 913:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the Trace Port Interface (TPI)
 914:Drivers/CMSIS/Include/core_cm4.h ****   @{
 915:Drivers/CMSIS/Include/core_cm4.h ****  */
 916:Drivers/CMSIS/Include/core_cm4.h **** 
 917:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Trace Port Interface Register (TPI).
 918:Drivers/CMSIS/Include/core_cm4.h ****  */
 919:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 920:Drivers/CMSIS/Include/core_cm4.h **** {
 921:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t SSPSR;                   /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 922:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CSPSR;                   /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 923:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[2];
 924:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ACPR;                    /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 925:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED1[55];
 926:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t SPPR;                    /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
 927:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED2[131];
 928:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t FFSR;                    /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
 929:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FFCR;                    /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
 930:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t FSCR;                    /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
 931:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED3[759];
 932:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t TRIGGER;                 /*!< Offset: 0xEE8 (R/ )  TRIGGER */
 933:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t FIFO0;                   /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
 934:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t ITATBCTR2;               /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
 935:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED4[1];
 936:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t ITATBCTR0;               /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
 937:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t FIFO1;                   /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
 938:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ITCTRL;                  /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
 939:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED5[39];
 940:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CLAIMSET;                /*!< Offset: 0xFA0 (R/W)  Claim tag set */
 941:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CLAIMCLR;                /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
 942:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED7[8];
 943:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t DEVID;                   /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
ARM GAS  /tmp/ccLpvG41.s 			page 18


 944:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t DEVTYPE;                 /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
 945:Drivers/CMSIS/Include/core_cm4.h **** } TPI_Type;
 946:Drivers/CMSIS/Include/core_cm4.h **** 
 947:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
 948:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0                                          /*!< TPI ACP
 949:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL << TPI_ACPR_PRESCALER_Pos)        /*!< TPI ACP
 950:Drivers/CMSIS/Include/core_cm4.h **** 
 951:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
 952:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0                                          /*!< TPI SPP
 953:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL << TPI_SPPR_TXMODE_Pos)              /*!< TPI SPP
 954:Drivers/CMSIS/Include/core_cm4.h **** 
 955:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
 956:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3                                          /*!< TPI FFS
 957:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
 958:Drivers/CMSIS/Include/core_cm4.h **** 
 959:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2                                          /*!< TPI FFS
 960:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
 961:Drivers/CMSIS/Include/core_cm4.h **** 
 962:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1                                          /*!< TPI FFS
 963:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
 964:Drivers/CMSIS/Include/core_cm4.h **** 
 965:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0                                          /*!< TPI FFS
 966:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL << TPI_FFSR_FlInProg_Pos)            /*!< TPI FFS
 967:Drivers/CMSIS/Include/core_cm4.h **** 
 968:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
 969:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8                                          /*!< TPI FFC
 970:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
 971:Drivers/CMSIS/Include/core_cm4.h **** 
 972:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1                                          /*!< TPI FFC
 973:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
 974:Drivers/CMSIS/Include/core_cm4.h **** 
 975:Drivers/CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
 976:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0                                          /*!< TPI TRI
 977:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL << TPI_TRIGGER_TRIGGER_Pos)          /*!< TPI TRI
 978:Drivers/CMSIS/Include/core_cm4.h **** 
 979:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
 980:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
 981:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
 982:Drivers/CMSIS/Include/core_cm4.h **** 
 983:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27                                          /*!< TPI FIF
 984:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
 985:Drivers/CMSIS/Include/core_cm4.h **** 
 986:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
 987:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
 988:Drivers/CMSIS/Include/core_cm4.h **** 
 989:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24                                          /*!< TPI FIF
 990:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
 991:Drivers/CMSIS/Include/core_cm4.h **** 
 992:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16                                          /*!< TPI FIF
 993:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
 994:Drivers/CMSIS/Include/core_cm4.h **** 
 995:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8                                          /*!< TPI FIF
 996:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
 997:Drivers/CMSIS/Include/core_cm4.h **** 
 998:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0                                          /*!< TPI FIF
 999:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL << TPI_FIFO0_ETM0_Pos)              /*!< TPI FIF
1000:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccLpvG41.s 			page 19


1001:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1002:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0                                          /*!< TPI ITA
1003:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL << TPI_ITATBCTR2_ATREADY_Pos)        /*!< TPI ITA
1004:Drivers/CMSIS/Include/core_cm4.h **** 
1005:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1006:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
1007:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1008:Drivers/CMSIS/Include/core_cm4.h **** 
1009:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27                                          /*!< TPI FIF
1010:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1011:Drivers/CMSIS/Include/core_cm4.h **** 
1012:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
1013:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1014:Drivers/CMSIS/Include/core_cm4.h **** 
1015:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24                                          /*!< TPI FIF
1016:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1017:Drivers/CMSIS/Include/core_cm4.h **** 
1018:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16                                          /*!< TPI FIF
1019:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1020:Drivers/CMSIS/Include/core_cm4.h **** 
1021:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8                                          /*!< TPI FIF
1022:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1023:Drivers/CMSIS/Include/core_cm4.h **** 
1024:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0                                          /*!< TPI FIF
1025:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL << TPI_FIFO1_ITM0_Pos)              /*!< TPI FIF
1026:Drivers/CMSIS/Include/core_cm4.h **** 
1027:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1028:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0                                          /*!< TPI ITA
1029:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL << TPI_ITATBCTR0_ATREADY_Pos)        /*!< TPI ITA
1030:Drivers/CMSIS/Include/core_cm4.h **** 
1031:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1032:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0                                          /*!< TPI ITC
1033:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL << TPI_ITCTRL_Mode_Pos)              /*!< TPI ITC
1034:Drivers/CMSIS/Include/core_cm4.h **** 
1035:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1036:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11                                          /*!< TPI DEV
1037:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1038:Drivers/CMSIS/Include/core_cm4.h **** 
1039:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10                                          /*!< TPI DEV
1040:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1041:Drivers/CMSIS/Include/core_cm4.h **** 
1042:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9                                          /*!< TPI DEV
1043:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1044:Drivers/CMSIS/Include/core_cm4.h **** 
1045:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6                                          /*!< TPI DEV
1046:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1047:Drivers/CMSIS/Include/core_cm4.h **** 
1048:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5                                          /*!< TPI DEV
1049:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1050:Drivers/CMSIS/Include/core_cm4.h **** 
1051:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0                                          /*!< TPI DEV
1052:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL << TPI_DEVID_NrTraceInput_Pos)      /*!< TPI DEV
1053:Drivers/CMSIS/Include/core_cm4.h **** 
1054:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1055:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0                                          /*!< TPI DEV
1056:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL << TPI_DEVTYPE_SubType_Pos)          /*!< TPI DEV
1057:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccLpvG41.s 			page 20


1058:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4                                          /*!< TPI DEV
1059:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1060:Drivers/CMSIS/Include/core_cm4.h **** 
1061:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1062:Drivers/CMSIS/Include/core_cm4.h **** 
1063:Drivers/CMSIS/Include/core_cm4.h **** 
1064:Drivers/CMSIS/Include/core_cm4.h **** #if (__MPU_PRESENT == 1)
1065:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
1066:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1067:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the Memory Protection Unit (MPU)
1068:Drivers/CMSIS/Include/core_cm4.h ****   @{
1069:Drivers/CMSIS/Include/core_cm4.h ****  */
1070:Drivers/CMSIS/Include/core_cm4.h **** 
1071:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
1072:Drivers/CMSIS/Include/core_cm4.h ****  */
1073:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1074:Drivers/CMSIS/Include/core_cm4.h **** {
1075:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t TYPE;                    /*!< Offset: 0x000 (R/ )  MPU Type Register               
1076:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x004 (R/W)  MPU Control Register            
1077:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RNR;                     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register      
1078:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RBAR;                    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1079:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RASR;                    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1080:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RBAR_A1;                 /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1081:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RASR_A1;                 /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1082:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RBAR_A2;                 /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1083:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RASR_A2;                 /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1084:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RBAR_A3;                 /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1085:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RASR_A3;                 /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1086:Drivers/CMSIS/Include/core_cm4.h **** } MPU_Type;
1087:Drivers/CMSIS/Include/core_cm4.h **** 
1088:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Type Register */
1089:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
1090:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1091:Drivers/CMSIS/Include/core_cm4.h **** 
1092:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
1093:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1094:Drivers/CMSIS/Include/core_cm4.h **** 
1095:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
1096:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
1097:Drivers/CMSIS/Include/core_cm4.h **** 
1098:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Control Register */
1099:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
1100:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1101:Drivers/CMSIS/Include/core_cm4.h **** 
1102:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
1103:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1104:Drivers/CMSIS/Include/core_cm4.h **** 
1105:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
1106:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
1107:Drivers/CMSIS/Include/core_cm4.h **** 
1108:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register */
1109:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
1110:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL << MPU_RNR_REGION_Pos)                 /*!< MPU 
1111:Drivers/CMSIS/Include/core_cm4.h **** 
1112:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register */
1113:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
1114:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
ARM GAS  /tmp/ccLpvG41.s 			page 21


1115:Drivers/CMSIS/Include/core_cm4.h **** 
1116:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
1117:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1118:Drivers/CMSIS/Include/core_cm4.h **** 
1119:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
1120:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL << MPU_RBAR_REGION_Pos)                 /*!< MPU 
1121:Drivers/CMSIS/Include/core_cm4.h **** 
1122:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register */
1123:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16                                             /*!< MPU 
1124:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1125:Drivers/CMSIS/Include/core_cm4.h **** 
1126:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
1127:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1128:Drivers/CMSIS/Include/core_cm4.h **** 
1129:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
1130:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1131:Drivers/CMSIS/Include/core_cm4.h **** 
1132:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
1133:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1134:Drivers/CMSIS/Include/core_cm4.h **** 
1135:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
1136:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1137:Drivers/CMSIS/Include/core_cm4.h **** 
1138:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
1139:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1140:Drivers/CMSIS/Include/core_cm4.h **** 
1141:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
1142:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1143:Drivers/CMSIS/Include/core_cm4.h **** 
1144:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
1145:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1146:Drivers/CMSIS/Include/core_cm4.h **** 
1147:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
1148:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1149:Drivers/CMSIS/Include/core_cm4.h **** 
1150:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0                                             /*!< MPU 
1151:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL << MPU_RASR_ENABLE_Pos)                   /*!< MPU 
1152:Drivers/CMSIS/Include/core_cm4.h **** 
1153:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1154:Drivers/CMSIS/Include/core_cm4.h **** #endif
1155:Drivers/CMSIS/Include/core_cm4.h **** 
1156:Drivers/CMSIS/Include/core_cm4.h **** 
1157:Drivers/CMSIS/Include/core_cm4.h **** #if (__FPU_PRESENT == 1)
1158:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
1159:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1160:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the Floating Point Unit (FPU)
1161:Drivers/CMSIS/Include/core_cm4.h ****   @{
1162:Drivers/CMSIS/Include/core_cm4.h ****  */
1163:Drivers/CMSIS/Include/core_cm4.h **** 
1164:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Floating Point Unit (FPU).
1165:Drivers/CMSIS/Include/core_cm4.h ****  */
1166:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1167:Drivers/CMSIS/Include/core_cm4.h **** {
1168:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[1];
1169:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FPCCR;                   /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1170:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FPCAR;                   /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1171:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FPDSCR;                  /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
ARM GAS  /tmp/ccLpvG41.s 			page 22


1172:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t MVFR0;                   /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1173:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t MVFR1;                   /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1174:Drivers/CMSIS/Include/core_cm4.h **** } FPU_Type;
1175:Drivers/CMSIS/Include/core_cm4.h **** 
1176:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register */
1177:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31                                             /*!< FPCC
1178:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1179:Drivers/CMSIS/Include/core_cm4.h **** 
1180:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30                                             /*!< FPCC
1181:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1182:Drivers/CMSIS/Include/core_cm4.h **** 
1183:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8                                             /*!< FPCC
1184:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1185:Drivers/CMSIS/Include/core_cm4.h **** 
1186:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6                                             /*!< FPCC
1187:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1188:Drivers/CMSIS/Include/core_cm4.h **** 
1189:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5                                             /*!< FPCC
1190:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1191:Drivers/CMSIS/Include/core_cm4.h **** 
1192:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4                                             /*!< FPCC
1193:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1194:Drivers/CMSIS/Include/core_cm4.h **** 
1195:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3                                             /*!< FPCC
1196:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1197:Drivers/CMSIS/Include/core_cm4.h **** 
1198:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1                                             /*!< FPCC
1199:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1200:Drivers/CMSIS/Include/core_cm4.h **** 
1201:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0                                             /*!< FPCC
1202:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL << FPU_FPCCR_LSPACT_Pos)                  /*!< FPCC
1203:Drivers/CMSIS/Include/core_cm4.h **** 
1204:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register */
1205:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3                                             /*!< FPCA
1206:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1207:Drivers/CMSIS/Include/core_cm4.h **** 
1208:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register */
1209:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26                                             /*!< FPDS
1210:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1211:Drivers/CMSIS/Include/core_cm4.h **** 
1212:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25                                             /*!< FPDS
1213:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1214:Drivers/CMSIS/Include/core_cm4.h **** 
1215:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24                                             /*!< FPDS
1216:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1217:Drivers/CMSIS/Include/core_cm4.h **** 
1218:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22                                             /*!< FPDS
1219:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1220:Drivers/CMSIS/Include/core_cm4.h **** 
1221:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 */
1222:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28                                             /*!< MVFR
1223:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1224:Drivers/CMSIS/Include/core_cm4.h **** 
1225:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24                                             /*!< MVFR
1226:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1227:Drivers/CMSIS/Include/core_cm4.h **** 
1228:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20                                             /*!< MVFR
ARM GAS  /tmp/ccLpvG41.s 			page 23


1229:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1230:Drivers/CMSIS/Include/core_cm4.h **** 
1231:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16                                             /*!< MVFR
1232:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1233:Drivers/CMSIS/Include/core_cm4.h **** 
1234:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12                                             /*!< MVFR
1235:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1236:Drivers/CMSIS/Include/core_cm4.h **** 
1237:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8                                             /*!< MVFR
1238:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1239:Drivers/CMSIS/Include/core_cm4.h **** 
1240:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4                                             /*!< MVFR
1241:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1242:Drivers/CMSIS/Include/core_cm4.h **** 
1243:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0                                             /*!< MVFR
1244:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL << FPU_MVFR0_A_SIMD_registers_Pos)      /*!< MVFR
1245:Drivers/CMSIS/Include/core_cm4.h **** 
1246:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 */
1247:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28                                             /*!< MVFR
1248:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1249:Drivers/CMSIS/Include/core_cm4.h **** 
1250:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24                                             /*!< MVFR
1251:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1252:Drivers/CMSIS/Include/core_cm4.h **** 
1253:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4                                             /*!< MVFR
1254:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1255:Drivers/CMSIS/Include/core_cm4.h **** 
1256:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0                                             /*!< MVFR
1257:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL << FPU_MVFR1_FtZ_mode_Pos)              /*!< MVFR
1258:Drivers/CMSIS/Include/core_cm4.h **** 
1259:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1260:Drivers/CMSIS/Include/core_cm4.h **** #endif
1261:Drivers/CMSIS/Include/core_cm4.h **** 
1262:Drivers/CMSIS/Include/core_cm4.h **** 
1263:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
1264:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1265:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the Core Debug Registers
1266:Drivers/CMSIS/Include/core_cm4.h ****   @{
1267:Drivers/CMSIS/Include/core_cm4.h ****  */
1268:Drivers/CMSIS/Include/core_cm4.h **** 
1269:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
1270:Drivers/CMSIS/Include/core_cm4.h ****  */
1271:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1272:Drivers/CMSIS/Include/core_cm4.h **** {
1273:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t DHCSR;                   /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1274:Drivers/CMSIS/Include/core_cm4.h ****   __O  uint32_t DCRSR;                   /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1275:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t DCRDR;                   /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1276:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t DEMCR;                   /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1277:Drivers/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1278:Drivers/CMSIS/Include/core_cm4.h **** 
1279:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register */
1280:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
1281:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1282:Drivers/CMSIS/Include/core_cm4.h **** 
1283:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
1284:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1285:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccLpvG41.s 			page 24


1286:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
1287:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1288:Drivers/CMSIS/Include/core_cm4.h **** 
1289:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
1290:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1291:Drivers/CMSIS/Include/core_cm4.h **** 
1292:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
1293:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1294:Drivers/CMSIS/Include/core_cm4.h **** 
1295:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
1296:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1297:Drivers/CMSIS/Include/core_cm4.h **** 
1298:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
1299:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1300:Drivers/CMSIS/Include/core_cm4.h **** 
1301:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
1302:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1303:Drivers/CMSIS/Include/core_cm4.h **** 
1304:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
1305:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1306:Drivers/CMSIS/Include/core_cm4.h **** 
1307:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
1308:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1309:Drivers/CMSIS/Include/core_cm4.h **** 
1310:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
1311:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1312:Drivers/CMSIS/Include/core_cm4.h **** 
1313:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
1314:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
1315:Drivers/CMSIS/Include/core_cm4.h **** 
1316:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register */
1317:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
1318:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1319:Drivers/CMSIS/Include/core_cm4.h **** 
1320:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
1321:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
1322:Drivers/CMSIS/Include/core_cm4.h **** 
1323:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register */
1324:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
1325:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1326:Drivers/CMSIS/Include/core_cm4.h **** 
1327:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
1328:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1329:Drivers/CMSIS/Include/core_cm4.h **** 
1330:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
1331:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1332:Drivers/CMSIS/Include/core_cm4.h **** 
1333:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
1334:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1335:Drivers/CMSIS/Include/core_cm4.h **** 
1336:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
1337:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1338:Drivers/CMSIS/Include/core_cm4.h **** 
1339:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
1340:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1341:Drivers/CMSIS/Include/core_cm4.h **** 
1342:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
ARM GAS  /tmp/ccLpvG41.s 			page 25


1343:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1344:Drivers/CMSIS/Include/core_cm4.h **** 
1345:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
1346:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1347:Drivers/CMSIS/Include/core_cm4.h **** 
1348:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
1349:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1350:Drivers/CMSIS/Include/core_cm4.h **** 
1351:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
1352:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1353:Drivers/CMSIS/Include/core_cm4.h **** 
1354:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
1355:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1356:Drivers/CMSIS/Include/core_cm4.h **** 
1357:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
1358:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1359:Drivers/CMSIS/Include/core_cm4.h **** 
1360:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
1361:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
1362:Drivers/CMSIS/Include/core_cm4.h **** 
1363:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1364:Drivers/CMSIS/Include/core_cm4.h **** 
1365:Drivers/CMSIS/Include/core_cm4.h **** 
1366:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup    CMSIS_core_register
1367:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup   CMSIS_core_base     Core Definitions
1368:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Definitions for base addresses, unions, and structures.
1369:Drivers/CMSIS/Include/core_cm4.h ****   @{
1370:Drivers/CMSIS/Include/core_cm4.h ****  */
1371:Drivers/CMSIS/Include/core_cm4.h **** 
1372:Drivers/CMSIS/Include/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1373:Drivers/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1374:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
1375:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address        
1376:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address        
1377:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1378:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
1379:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
1380:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1381:Drivers/CMSIS/Include/core_cm4.h **** 
1382:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1383:Drivers/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1384:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1385:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1386:Drivers/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1387:Drivers/CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1388:Drivers/CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1389:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1390:Drivers/CMSIS/Include/core_cm4.h **** 
1391:Drivers/CMSIS/Include/core_cm4.h **** #if (__MPU_PRESENT == 1)
1392:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit  
1393:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit  
1394:Drivers/CMSIS/Include/core_cm4.h **** #endif
1395:Drivers/CMSIS/Include/core_cm4.h **** 
1396:Drivers/CMSIS/Include/core_cm4.h **** #if (__FPU_PRESENT == 1)
1397:Drivers/CMSIS/Include/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit     
1398:Drivers/CMSIS/Include/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit     
1399:Drivers/CMSIS/Include/core_cm4.h **** #endif
ARM GAS  /tmp/ccLpvG41.s 			page 26


1400:Drivers/CMSIS/Include/core_cm4.h **** 
1401:Drivers/CMSIS/Include/core_cm4.h **** /*@} */
1402:Drivers/CMSIS/Include/core_cm4.h **** 
1403:Drivers/CMSIS/Include/core_cm4.h **** 
1404:Drivers/CMSIS/Include/core_cm4.h **** 
1405:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1406:Drivers/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1407:Drivers/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1408:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1409:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1410:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1411:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1412:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1413:Drivers/CMSIS/Include/core_cm4.h **** /** \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1414:Drivers/CMSIS/Include/core_cm4.h **** */
1415:Drivers/CMSIS/Include/core_cm4.h **** 
1416:Drivers/CMSIS/Include/core_cm4.h **** 
1417:Drivers/CMSIS/Include/core_cm4.h **** 
1418:Drivers/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1419:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1420:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1421:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Functions that manage interrupts and exceptions via the NVIC.
1422:Drivers/CMSIS/Include/core_cm4.h ****     @{
1423:Drivers/CMSIS/Include/core_cm4.h ****  */
1424:Drivers/CMSIS/Include/core_cm4.h **** 
1425:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Set Priority Grouping
1426:Drivers/CMSIS/Include/core_cm4.h **** 
1427:Drivers/CMSIS/Include/core_cm4.h ****   The function sets the priority grouping field using the required unlock sequence.
1428:Drivers/CMSIS/Include/core_cm4.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1429:Drivers/CMSIS/Include/core_cm4.h ****   Only values from 0..7 are used.
1430:Drivers/CMSIS/Include/core_cm4.h ****   In case of a conflict between priority grouping and available
1431:Drivers/CMSIS/Include/core_cm4.h ****   priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1432:Drivers/CMSIS/Include/core_cm4.h **** 
1433:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]      PriorityGroup  Priority grouping field.
1434:Drivers/CMSIS/Include/core_cm4.h ****  */
1435:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1436:Drivers/CMSIS/Include/core_cm4.h **** {
  28              		.loc 1 1436 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 85B0     		sub	sp, sp, #20
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
1437:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
1438:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07);               /* only values 0..7 a
  44              		.loc 1 1438 0
  45 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccLpvG41.s 			page 27


  46 000a 03F00703 		and	r3, r3, #7
  47 000e FB60     		str	r3, [r7, #12]
1439:Drivers/CMSIS/Include/core_cm4.h **** 
1440:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
  48              		.loc 1 1440 0
  49 0010 0C4B     		ldr	r3, .L2
  50 0012 DB68     		ldr	r3, [r3, #12]
  51 0014 BB60     		str	r3, [r7, #8]
1441:Drivers/CMSIS/Include/core_cm4.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
  52              		.loc 1 1441 0
  53 0016 BA68     		ldr	r2, [r7, #8]
  54 0018 4FF6FF03 		movw	r3, #63743
  55 001c 1340     		ands	r3, r3, r2
  56 001e BB60     		str	r3, [r7, #8]
1442:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                 |
1443:Drivers/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1444:Drivers/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
  57              		.loc 1 1444 0
  58 0020 FB68     		ldr	r3, [r7, #12]
  59 0022 1A02     		lsls	r2, r3, #8
1443:Drivers/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
  60              		.loc 1 1443 0
  61 0024 BB68     		ldr	r3, [r7, #8]
  62 0026 1343     		orrs	r3, r3, r2
1442:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                 |
  63              		.loc 1 1442 0
  64 0028 43F0BF63 		orr	r3, r3, #100139008
  65 002c 43F40033 		orr	r3, r3, #131072
  66 0030 BB60     		str	r3, [r7, #8]
1445:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
  67              		.loc 1 1445 0
  68 0032 044A     		ldr	r2, .L2
  69 0034 BB68     		ldr	r3, [r7, #8]
  70 0036 D360     		str	r3, [r2, #12]
1446:Drivers/CMSIS/Include/core_cm4.h **** }
  71              		.loc 1 1446 0
  72 0038 00BF     		nop
  73 003a 1437     		adds	r7, r7, #20
  74              	.LCFI3:
  75              		.cfi_def_cfa_offset 4
  76 003c BD46     		mov	sp, r7
  77              	.LCFI4:
  78              		.cfi_def_cfa_register 13
  79              		@ sp needed
  80 003e 5DF8047B 		ldr	r7, [sp], #4
  81              	.LCFI5:
  82              		.cfi_restore 7
  83              		.cfi_def_cfa_offset 0
  84 0042 7047     		bx	lr
  85              	.L3:
  86              		.align	2
  87              	.L2:
  88 0044 00ED00E0 		.word	-536810240
  89              		.cfi_endproc
  90              	.LFE95:
  92              		.section	.text.NVIC_GetPriorityGrouping,"ax",%progbits
  93              		.align	2
ARM GAS  /tmp/ccLpvG41.s 			page 28


  94              		.thumb
  95              		.thumb_func
  97              	NVIC_GetPriorityGrouping:
  98              	.LFB96:
1447:Drivers/CMSIS/Include/core_cm4.h **** 
1448:Drivers/CMSIS/Include/core_cm4.h **** 
1449:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Get Priority Grouping
1450:Drivers/CMSIS/Include/core_cm4.h **** 
1451:Drivers/CMSIS/Include/core_cm4.h ****   The function reads the priority grouping field from the NVIC Interrupt Controller.
1452:Drivers/CMSIS/Include/core_cm4.h **** 
1453:Drivers/CMSIS/Include/core_cm4.h ****     \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1454:Drivers/CMSIS/Include/core_cm4.h ****  */
1455:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1456:Drivers/CMSIS/Include/core_cm4.h **** {
  99              		.loc 1 1456 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 1, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104 0000 80B4     		push	{r7}
 105              	.LCFI6:
 106              		.cfi_def_cfa_offset 4
 107              		.cfi_offset 7, -4
 108 0002 00AF     		add	r7, sp, #0
 109              	.LCFI7:
 110              		.cfi_def_cfa_register 7
1457:Drivers/CMSIS/Include/core_cm4.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
 111              		.loc 1 1457 0
 112 0004 044B     		ldr	r3, .L6
 113 0006 DB68     		ldr	r3, [r3, #12]
 114 0008 03F4E063 		and	r3, r3, #1792
 115 000c 1B0A     		lsrs	r3, r3, #8
1458:Drivers/CMSIS/Include/core_cm4.h **** }
 116              		.loc 1 1458 0
 117 000e 1846     		mov	r0, r3
 118 0010 BD46     		mov	sp, r7
 119              	.LCFI8:
 120              		.cfi_def_cfa_register 13
 121              		@ sp needed
 122 0012 5DF8047B 		ldr	r7, [sp], #4
 123              	.LCFI9:
 124              		.cfi_restore 7
 125              		.cfi_def_cfa_offset 0
 126 0016 7047     		bx	lr
 127              	.L7:
 128              		.align	2
 129              	.L6:
 130 0018 00ED00E0 		.word	-536810240
 131              		.cfi_endproc
 132              	.LFE96:
 134              		.section	.text.NVIC_EnableIRQ,"ax",%progbits
 135              		.align	2
 136              		.thumb
 137              		.thumb_func
 139              	NVIC_EnableIRQ:
 140              	.LFB97:
1459:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccLpvG41.s 			page 29


1460:Drivers/CMSIS/Include/core_cm4.h **** 
1461:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Enable External Interrupt
1462:Drivers/CMSIS/Include/core_cm4.h **** 
1463:Drivers/CMSIS/Include/core_cm4.h ****     The function enables a device-specific interrupt in the NVIC interrupt controller.
1464:Drivers/CMSIS/Include/core_cm4.h **** 
1465:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1466:Drivers/CMSIS/Include/core_cm4.h ****  */
1467:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1468:Drivers/CMSIS/Include/core_cm4.h **** {
 141              		.loc 1 1468 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 8
 144              		@ frame_needed = 1, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146 0000 80B4     		push	{r7}
 147              	.LCFI10:
 148              		.cfi_def_cfa_offset 4
 149              		.cfi_offset 7, -4
 150 0002 83B0     		sub	sp, sp, #12
 151              	.LCFI11:
 152              		.cfi_def_cfa_offset 16
 153 0004 00AF     		add	r7, sp, #0
 154              	.LCFI12:
 155              		.cfi_def_cfa_register 7
 156 0006 0346     		mov	r3, r0
 157 0008 FB71     		strb	r3, [r7, #7]
1469:Drivers/CMSIS/Include/core_cm4.h **** /*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
1470:Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32
 158              		.loc 1 1470 0
 159 000a 0949     		ldr	r1, .L9
 160 000c 97F90730 		ldrsb	r3, [r7, #7]
 161 0010 5B09     		lsrs	r3, r3, #5
 162 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 163 0014 02F01F02 		and	r2, r2, #31
 164 0018 0120     		movs	r0, #1
 165 001a 00FA02F2 		lsl	r2, r0, r2
 166 001e 41F82320 		str	r2, [r1, r3, lsl #2]
1471:Drivers/CMSIS/Include/core_cm4.h **** }
 167              		.loc 1 1471 0
 168 0022 00BF     		nop
 169 0024 0C37     		adds	r7, r7, #12
 170              	.LCFI13:
 171              		.cfi_def_cfa_offset 4
 172 0026 BD46     		mov	sp, r7
 173              	.LCFI14:
 174              		.cfi_def_cfa_register 13
 175              		@ sp needed
 176 0028 5DF8047B 		ldr	r7, [sp], #4
 177              	.LCFI15:
 178              		.cfi_restore 7
 179              		.cfi_def_cfa_offset 0
 180 002c 7047     		bx	lr
 181              	.L10:
 182 002e 00BF     		.align	2
 183              	.L9:
 184 0030 00E100E0 		.word	-536813312
 185              		.cfi_endproc
ARM GAS  /tmp/ccLpvG41.s 			page 30


 186              	.LFE97:
 188              		.section	.text.NVIC_DisableIRQ,"ax",%progbits
 189              		.align	2
 190              		.thumb
 191              		.thumb_func
 193              	NVIC_DisableIRQ:
 194              	.LFB98:
1472:Drivers/CMSIS/Include/core_cm4.h **** 
1473:Drivers/CMSIS/Include/core_cm4.h **** 
1474:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Disable External Interrupt
1475:Drivers/CMSIS/Include/core_cm4.h **** 
1476:Drivers/CMSIS/Include/core_cm4.h ****     The function disables a device-specific interrupt in the NVIC interrupt controller.
1477:Drivers/CMSIS/Include/core_cm4.h **** 
1478:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1479:Drivers/CMSIS/Include/core_cm4.h ****  */
1480:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1481:Drivers/CMSIS/Include/core_cm4.h **** {
 195              		.loc 1 1481 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 8
 198              		@ frame_needed = 1, uses_anonymous_args = 0
 199              		@ link register save eliminated.
 200 0000 80B4     		push	{r7}
 201              	.LCFI16:
 202              		.cfi_def_cfa_offset 4
 203              		.cfi_offset 7, -4
 204 0002 83B0     		sub	sp, sp, #12
 205              	.LCFI17:
 206              		.cfi_def_cfa_offset 16
 207 0004 00AF     		add	r7, sp, #0
 208              	.LCFI18:
 209              		.cfi_def_cfa_register 7
 210 0006 0346     		mov	r3, r0
 211 0008 FB71     		strb	r3, [r7, #7]
1482:Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
 212              		.loc 1 1482 0
 213 000a 0949     		ldr	r1, .L12
 214 000c 97F90730 		ldrsb	r3, [r7, #7]
 215 0010 5B09     		lsrs	r3, r3, #5
 216 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 217 0014 02F01F02 		and	r2, r2, #31
 218 0018 0120     		movs	r0, #1
 219 001a 00FA02F2 		lsl	r2, r0, r2
 220 001e 2033     		adds	r3, r3, #32
 221 0020 41F82320 		str	r2, [r1, r3, lsl #2]
1483:Drivers/CMSIS/Include/core_cm4.h **** }
 222              		.loc 1 1483 0
 223 0024 00BF     		nop
 224 0026 0C37     		adds	r7, r7, #12
 225              	.LCFI19:
 226              		.cfi_def_cfa_offset 4
 227 0028 BD46     		mov	sp, r7
 228              	.LCFI20:
 229              		.cfi_def_cfa_register 13
 230              		@ sp needed
 231 002a 5DF8047B 		ldr	r7, [sp], #4
 232              	.LCFI21:
ARM GAS  /tmp/ccLpvG41.s 			page 31


 233              		.cfi_restore 7
 234              		.cfi_def_cfa_offset 0
 235 002e 7047     		bx	lr
 236              	.L13:
 237              		.align	2
 238              	.L12:
 239 0030 00E100E0 		.word	-536813312
 240              		.cfi_endproc
 241              	.LFE98:
 243              		.section	.text.NVIC_GetPendingIRQ,"ax",%progbits
 244              		.align	2
 245              		.thumb
 246              		.thumb_func
 248              	NVIC_GetPendingIRQ:
 249              	.LFB99:
1484:Drivers/CMSIS/Include/core_cm4.h **** 
1485:Drivers/CMSIS/Include/core_cm4.h **** 
1486:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Get Pending Interrupt
1487:Drivers/CMSIS/Include/core_cm4.h **** 
1488:Drivers/CMSIS/Include/core_cm4.h ****     The function reads the pending register in the NVIC and returns the pending bit
1489:Drivers/CMSIS/Include/core_cm4.h ****     for the specified interrupt.
1490:Drivers/CMSIS/Include/core_cm4.h **** 
1491:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1492:Drivers/CMSIS/Include/core_cm4.h **** 
1493:Drivers/CMSIS/Include/core_cm4.h ****     \return             0  Interrupt status is not pending.
1494:Drivers/CMSIS/Include/core_cm4.h ****     \return             1  Interrupt status is pending.
1495:Drivers/CMSIS/Include/core_cm4.h ****  */
1496:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1497:Drivers/CMSIS/Include/core_cm4.h **** {
 250              		.loc 1 1497 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 8
 253              		@ frame_needed = 1, uses_anonymous_args = 0
 254              		@ link register save eliminated.
 255 0000 80B4     		push	{r7}
 256              	.LCFI22:
 257              		.cfi_def_cfa_offset 4
 258              		.cfi_offset 7, -4
 259 0002 83B0     		sub	sp, sp, #12
 260              	.LCFI23:
 261              		.cfi_def_cfa_offset 16
 262 0004 00AF     		add	r7, sp, #0
 263              	.LCFI24:
 264              		.cfi_def_cfa_register 7
 265 0006 0346     		mov	r3, r0
 266 0008 FB71     		strb	r3, [r7, #7]
1498:Drivers/CMSIS/Include/core_cm4.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
 267              		.loc 1 1498 0
 268 000a 0C4A     		ldr	r2, .L18
 269 000c 97F90730 		ldrsb	r3, [r7, #7]
 270 0010 5B09     		lsrs	r3, r3, #5
 271 0012 4033     		adds	r3, r3, #64
 272 0014 52F82330 		ldr	r3, [r2, r3, lsl #2]
 273 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 274 001a 02F01F02 		and	r2, r2, #31
 275 001e 0121     		movs	r1, #1
 276 0020 01FA02F2 		lsl	r2, r1, r2
ARM GAS  /tmp/ccLpvG41.s 			page 32


 277 0024 1340     		ands	r3, r3, r2
 278 0026 002B     		cmp	r3, #0
 279 0028 01D0     		beq	.L15
 280              		.loc 1 1498 0 is_stmt 0 discriminator 1
 281 002a 0123     		movs	r3, #1
 282 002c 00E0     		b	.L17
 283              	.L15:
 284              		.loc 1 1498 0 discriminator 2
 285 002e 0023     		movs	r3, #0
 286              	.L17:
1499:Drivers/CMSIS/Include/core_cm4.h **** }
 287              		.loc 1 1499 0 is_stmt 1 discriminator 5
 288 0030 1846     		mov	r0, r3
 289 0032 0C37     		adds	r7, r7, #12
 290              	.LCFI25:
 291              		.cfi_def_cfa_offset 4
 292 0034 BD46     		mov	sp, r7
 293              	.LCFI26:
 294              		.cfi_def_cfa_register 13
 295              		@ sp needed
 296 0036 5DF8047B 		ldr	r7, [sp], #4
 297              	.LCFI27:
 298              		.cfi_restore 7
 299              		.cfi_def_cfa_offset 0
 300 003a 7047     		bx	lr
 301              	.L19:
 302              		.align	2
 303              	.L18:
 304 003c 00E100E0 		.word	-536813312
 305              		.cfi_endproc
 306              	.LFE99:
 308              		.section	.text.NVIC_SetPendingIRQ,"ax",%progbits
 309              		.align	2
 310              		.thumb
 311              		.thumb_func
 313              	NVIC_SetPendingIRQ:
 314              	.LFB100:
1500:Drivers/CMSIS/Include/core_cm4.h **** 
1501:Drivers/CMSIS/Include/core_cm4.h **** 
1502:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Set Pending Interrupt
1503:Drivers/CMSIS/Include/core_cm4.h **** 
1504:Drivers/CMSIS/Include/core_cm4.h ****     The function sets the pending bit of an external interrupt.
1505:Drivers/CMSIS/Include/core_cm4.h **** 
1506:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  Interrupt number. Value cannot be negative.
1507:Drivers/CMSIS/Include/core_cm4.h ****  */
1508:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1509:Drivers/CMSIS/Include/core_cm4.h **** {
 315              		.loc 1 1509 0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 8
 318              		@ frame_needed = 1, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 320 0000 80B4     		push	{r7}
 321              	.LCFI28:
 322              		.cfi_def_cfa_offset 4
 323              		.cfi_offset 7, -4
 324 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccLpvG41.s 			page 33


 325              	.LCFI29:
 326              		.cfi_def_cfa_offset 16
 327 0004 00AF     		add	r7, sp, #0
 328              	.LCFI30:
 329              		.cfi_def_cfa_register 7
 330 0006 0346     		mov	r3, r0
 331 0008 FB71     		strb	r3, [r7, #7]
1510:Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
 332              		.loc 1 1510 0
 333 000a 0949     		ldr	r1, .L21
 334 000c 97F90730 		ldrsb	r3, [r7, #7]
 335 0010 5B09     		lsrs	r3, r3, #5
 336 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 337 0014 02F01F02 		and	r2, r2, #31
 338 0018 0120     		movs	r0, #1
 339 001a 00FA02F2 		lsl	r2, r0, r2
 340 001e 4033     		adds	r3, r3, #64
 341 0020 41F82320 		str	r2, [r1, r3, lsl #2]
1511:Drivers/CMSIS/Include/core_cm4.h **** }
 342              		.loc 1 1511 0
 343 0024 00BF     		nop
 344 0026 0C37     		adds	r7, r7, #12
 345              	.LCFI31:
 346              		.cfi_def_cfa_offset 4
 347 0028 BD46     		mov	sp, r7
 348              	.LCFI32:
 349              		.cfi_def_cfa_register 13
 350              		@ sp needed
 351 002a 5DF8047B 		ldr	r7, [sp], #4
 352              	.LCFI33:
 353              		.cfi_restore 7
 354              		.cfi_def_cfa_offset 0
 355 002e 7047     		bx	lr
 356              	.L22:
 357              		.align	2
 358              	.L21:
 359 0030 00E100E0 		.word	-536813312
 360              		.cfi_endproc
 361              	.LFE100:
 363              		.section	.text.NVIC_ClearPendingIRQ,"ax",%progbits
 364              		.align	2
 365              		.thumb
 366              		.thumb_func
 368              	NVIC_ClearPendingIRQ:
 369              	.LFB101:
1512:Drivers/CMSIS/Include/core_cm4.h **** 
1513:Drivers/CMSIS/Include/core_cm4.h **** 
1514:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Clear Pending Interrupt
1515:Drivers/CMSIS/Include/core_cm4.h **** 
1516:Drivers/CMSIS/Include/core_cm4.h ****     The function clears the pending bit of an external interrupt.
1517:Drivers/CMSIS/Include/core_cm4.h **** 
1518:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1519:Drivers/CMSIS/Include/core_cm4.h ****  */
1520:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1521:Drivers/CMSIS/Include/core_cm4.h **** {
 370              		.loc 1 1521 0
 371              		.cfi_startproc
ARM GAS  /tmp/ccLpvG41.s 			page 34


 372              		@ args = 0, pretend = 0, frame = 8
 373              		@ frame_needed = 1, uses_anonymous_args = 0
 374              		@ link register save eliminated.
 375 0000 80B4     		push	{r7}
 376              	.LCFI34:
 377              		.cfi_def_cfa_offset 4
 378              		.cfi_offset 7, -4
 379 0002 83B0     		sub	sp, sp, #12
 380              	.LCFI35:
 381              		.cfi_def_cfa_offset 16
 382 0004 00AF     		add	r7, sp, #0
 383              	.LCFI36:
 384              		.cfi_def_cfa_register 7
 385 0006 0346     		mov	r3, r0
 386 0008 FB71     		strb	r3, [r7, #7]
1522:Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
 387              		.loc 1 1522 0
 388 000a 0949     		ldr	r1, .L24
 389 000c 97F90730 		ldrsb	r3, [r7, #7]
 390 0010 5B09     		lsrs	r3, r3, #5
 391 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 392 0014 02F01F02 		and	r2, r2, #31
 393 0018 0120     		movs	r0, #1
 394 001a 00FA02F2 		lsl	r2, r0, r2
 395 001e 6033     		adds	r3, r3, #96
 396 0020 41F82320 		str	r2, [r1, r3, lsl #2]
1523:Drivers/CMSIS/Include/core_cm4.h **** }
 397              		.loc 1 1523 0
 398 0024 00BF     		nop
 399 0026 0C37     		adds	r7, r7, #12
 400              	.LCFI37:
 401              		.cfi_def_cfa_offset 4
 402 0028 BD46     		mov	sp, r7
 403              	.LCFI38:
 404              		.cfi_def_cfa_register 13
 405              		@ sp needed
 406 002a 5DF8047B 		ldr	r7, [sp], #4
 407              	.LCFI39:
 408              		.cfi_restore 7
 409              		.cfi_def_cfa_offset 0
 410 002e 7047     		bx	lr
 411              	.L25:
 412              		.align	2
 413              	.L24:
 414 0030 00E100E0 		.word	-536813312
 415              		.cfi_endproc
 416              	.LFE101:
 418              		.section	.text.NVIC_GetActive,"ax",%progbits
 419              		.align	2
 420              		.thumb
 421              		.thumb_func
 423              	NVIC_GetActive:
 424              	.LFB102:
1524:Drivers/CMSIS/Include/core_cm4.h **** 
1525:Drivers/CMSIS/Include/core_cm4.h **** 
1526:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Get Active Interrupt
1527:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccLpvG41.s 			page 35


1528:Drivers/CMSIS/Include/core_cm4.h ****     The function reads the active register in NVIC and returns the active bit.
1529:Drivers/CMSIS/Include/core_cm4.h **** 
1530:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1531:Drivers/CMSIS/Include/core_cm4.h **** 
1532:Drivers/CMSIS/Include/core_cm4.h ****     \return             0  Interrupt status is not active.
1533:Drivers/CMSIS/Include/core_cm4.h ****     \return             1  Interrupt status is active.
1534:Drivers/CMSIS/Include/core_cm4.h ****  */
1535:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1536:Drivers/CMSIS/Include/core_cm4.h **** {
 425              		.loc 1 1536 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 8
 428              		@ frame_needed = 1, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 430 0000 80B4     		push	{r7}
 431              	.LCFI40:
 432              		.cfi_def_cfa_offset 4
 433              		.cfi_offset 7, -4
 434 0002 83B0     		sub	sp, sp, #12
 435              	.LCFI41:
 436              		.cfi_def_cfa_offset 16
 437 0004 00AF     		add	r7, sp, #0
 438              	.LCFI42:
 439              		.cfi_def_cfa_register 7
 440 0006 0346     		mov	r3, r0
 441 0008 FB71     		strb	r3, [r7, #7]
1537:Drivers/CMSIS/Include/core_cm4.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
 442              		.loc 1 1537 0
 443 000a 0C4A     		ldr	r2, .L30
 444 000c 97F90730 		ldrsb	r3, [r7, #7]
 445 0010 5B09     		lsrs	r3, r3, #5
 446 0012 8033     		adds	r3, r3, #128
 447 0014 52F82330 		ldr	r3, [r2, r3, lsl #2]
 448 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 449 001a 02F01F02 		and	r2, r2, #31
 450 001e 0121     		movs	r1, #1
 451 0020 01FA02F2 		lsl	r2, r1, r2
 452 0024 1340     		ands	r3, r3, r2
 453 0026 002B     		cmp	r3, #0
 454 0028 01D0     		beq	.L27
 455              		.loc 1 1537 0 is_stmt 0 discriminator 1
 456 002a 0123     		movs	r3, #1
 457 002c 00E0     		b	.L29
 458              	.L27:
 459              		.loc 1 1537 0 discriminator 2
 460 002e 0023     		movs	r3, #0
 461              	.L29:
1538:Drivers/CMSIS/Include/core_cm4.h **** }
 462              		.loc 1 1538 0 is_stmt 1 discriminator 5
 463 0030 1846     		mov	r0, r3
 464 0032 0C37     		adds	r7, r7, #12
 465              	.LCFI43:
 466              		.cfi_def_cfa_offset 4
 467 0034 BD46     		mov	sp, r7
 468              	.LCFI44:
 469              		.cfi_def_cfa_register 13
 470              		@ sp needed
ARM GAS  /tmp/ccLpvG41.s 			page 36


 471 0036 5DF8047B 		ldr	r7, [sp], #4
 472              	.LCFI45:
 473              		.cfi_restore 7
 474              		.cfi_def_cfa_offset 0
 475 003a 7047     		bx	lr
 476              	.L31:
 477              		.align	2
 478              	.L30:
 479 003c 00E100E0 		.word	-536813312
 480              		.cfi_endproc
 481              	.LFE102:
 483              		.section	.text.NVIC_SetPriority,"ax",%progbits
 484              		.align	2
 485              		.thumb
 486              		.thumb_func
 488              	NVIC_SetPriority:
 489              	.LFB103:
1539:Drivers/CMSIS/Include/core_cm4.h **** 
1540:Drivers/CMSIS/Include/core_cm4.h **** 
1541:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Set Interrupt Priority
1542:Drivers/CMSIS/Include/core_cm4.h **** 
1543:Drivers/CMSIS/Include/core_cm4.h ****     The function sets the priority of an interrupt.
1544:Drivers/CMSIS/Include/core_cm4.h **** 
1545:Drivers/CMSIS/Include/core_cm4.h ****     \note The priority cannot be set for every core interrupt.
1546:Drivers/CMSIS/Include/core_cm4.h **** 
1547:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1548:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]  priority  Priority to set.
1549:Drivers/CMSIS/Include/core_cm4.h ****  */
1550:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1551:Drivers/CMSIS/Include/core_cm4.h **** {
 490              		.loc 1 1551 0
 491              		.cfi_startproc
 492              		@ args = 0, pretend = 0, frame = 8
 493              		@ frame_needed = 1, uses_anonymous_args = 0
 494              		@ link register save eliminated.
 495 0000 80B4     		push	{r7}
 496              	.LCFI46:
 497              		.cfi_def_cfa_offset 4
 498              		.cfi_offset 7, -4
 499 0002 83B0     		sub	sp, sp, #12
 500              	.LCFI47:
 501              		.cfi_def_cfa_offset 16
 502 0004 00AF     		add	r7, sp, #0
 503              	.LCFI48:
 504              		.cfi_def_cfa_register 7
 505 0006 0346     		mov	r3, r0
 506 0008 3960     		str	r1, [r7]
 507 000a FB71     		strb	r3, [r7, #7]
1552:Drivers/CMSIS/Include/core_cm4.h ****   if(IRQn < 0) {
 508              		.loc 1 1552 0
 509 000c 97F90730 		ldrsb	r3, [r7, #7]
 510 0010 002B     		cmp	r3, #0
 511 0012 0BDA     		bge	.L33
1553:Drivers/CMSIS/Include/core_cm4.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
 512              		.loc 1 1553 0
 513 0014 0D49     		ldr	r1, .L36
 514 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  /tmp/ccLpvG41.s 			page 37


 515 0018 03F00F03 		and	r3, r3, #15
 516 001c 043B     		subs	r3, r3, #4
 517 001e 3A68     		ldr	r2, [r7]
 518 0020 D2B2     		uxtb	r2, r2
 519 0022 1201     		lsls	r2, r2, #4
 520 0024 D2B2     		uxtb	r2, r2
 521 0026 0B44     		add	r3, r3, r1
 522 0028 1A76     		strb	r2, [r3, #24]
1554:Drivers/CMSIS/Include/core_cm4.h ****   else {
1555:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
1556:Drivers/CMSIS/Include/core_cm4.h **** }
 523              		.loc 1 1556 0
 524 002a 09E0     		b	.L35
 525              	.L33:
1555:Drivers/CMSIS/Include/core_cm4.h **** }
 526              		.loc 1 1555 0
 527 002c 0849     		ldr	r1, .L36+4
 528 002e 97F90730 		ldrsb	r3, [r7, #7]
 529 0032 3A68     		ldr	r2, [r7]
 530 0034 D2B2     		uxtb	r2, r2
 531 0036 1201     		lsls	r2, r2, #4
 532 0038 D2B2     		uxtb	r2, r2
 533 003a 0B44     		add	r3, r3, r1
 534 003c 83F80023 		strb	r2, [r3, #768]
 535              	.L35:
 536              		.loc 1 1556 0
 537 0040 00BF     		nop
 538 0042 0C37     		adds	r7, r7, #12
 539              	.LCFI49:
 540              		.cfi_def_cfa_offset 4
 541 0044 BD46     		mov	sp, r7
 542              	.LCFI50:
 543              		.cfi_def_cfa_register 13
 544              		@ sp needed
 545 0046 5DF8047B 		ldr	r7, [sp], #4
 546              	.LCFI51:
 547              		.cfi_restore 7
 548              		.cfi_def_cfa_offset 0
 549 004a 7047     		bx	lr
 550              	.L37:
 551              		.align	2
 552              	.L36:
 553 004c 00ED00E0 		.word	-536810240
 554 0050 00E100E0 		.word	-536813312
 555              		.cfi_endproc
 556              	.LFE103:
 558              		.section	.text.NVIC_GetPriority,"ax",%progbits
 559              		.align	2
 560              		.thumb
 561              		.thumb_func
 563              	NVIC_GetPriority:
 564              	.LFB104:
1557:Drivers/CMSIS/Include/core_cm4.h **** 
1558:Drivers/CMSIS/Include/core_cm4.h **** 
1559:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Get Interrupt Priority
1560:Drivers/CMSIS/Include/core_cm4.h **** 
1561:Drivers/CMSIS/Include/core_cm4.h ****     The function reads the priority of an interrupt. The interrupt
ARM GAS  /tmp/ccLpvG41.s 			page 38


1562:Drivers/CMSIS/Include/core_cm4.h ****     number can be positive to specify an external (device specific)
1563:Drivers/CMSIS/Include/core_cm4.h ****     interrupt, or negative to specify an internal (core) interrupt.
1564:Drivers/CMSIS/Include/core_cm4.h **** 
1565:Drivers/CMSIS/Include/core_cm4.h **** 
1566:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]   IRQn  Interrupt number.
1567:Drivers/CMSIS/Include/core_cm4.h ****     \return             Interrupt Priority. Value is aligned automatically to the implemented
1568:Drivers/CMSIS/Include/core_cm4.h ****                         priority bits of the microcontroller.
1569:Drivers/CMSIS/Include/core_cm4.h ****  */
1570:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1571:Drivers/CMSIS/Include/core_cm4.h **** {
 565              		.loc 1 1571 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 8
 568              		@ frame_needed = 1, uses_anonymous_args = 0
 569              		@ link register save eliminated.
 570 0000 80B4     		push	{r7}
 571              	.LCFI52:
 572              		.cfi_def_cfa_offset 4
 573              		.cfi_offset 7, -4
 574 0002 83B0     		sub	sp, sp, #12
 575              	.LCFI53:
 576              		.cfi_def_cfa_offset 16
 577 0004 00AF     		add	r7, sp, #0
 578              	.LCFI54:
 579              		.cfi_def_cfa_register 7
 580 0006 0346     		mov	r3, r0
 581 0008 FB71     		strb	r3, [r7, #7]
1572:Drivers/CMSIS/Include/core_cm4.h **** 
1573:Drivers/CMSIS/Include/core_cm4.h ****   if(IRQn < 0) {
 582              		.loc 1 1573 0
 583 000a 97F90730 		ldrsb	r3, [r7, #7]
 584 000e 002B     		cmp	r3, #0
 585 0010 0ADA     		bge	.L39
1574:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] >> (8 - __NVIC_PRIO_BITS)));  } /* get p
 586              		.loc 1 1574 0
 587 0012 0D4A     		ldr	r2, .L41
 588 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 589 0016 03F00F03 		and	r3, r3, #15
 590 001a 043B     		subs	r3, r3, #4
 591 001c 1344     		add	r3, r3, r2
 592 001e 1B7E     		ldrb	r3, [r3, #24]
 593 0020 DBB2     		uxtb	r3, r3
 594 0022 1B09     		lsrs	r3, r3, #4
 595 0024 DBB2     		uxtb	r3, r3
 596 0026 08E0     		b	.L40
 597              	.L39:
1575:Drivers/CMSIS/Include/core_cm4.h ****   else {
1576:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(NVIC->IP[(uint32_t)(IRQn)]           >> (8 - __NVIC_PRIO_BITS)));  } /* get p
 598              		.loc 1 1576 0
 599 0028 084A     		ldr	r2, .L41+4
 600 002a 97F90730 		ldrsb	r3, [r7, #7]
 601 002e 1344     		add	r3, r3, r2
 602 0030 93F80033 		ldrb	r3, [r3, #768]
 603 0034 DBB2     		uxtb	r3, r3
 604 0036 1B09     		lsrs	r3, r3, #4
 605 0038 DBB2     		uxtb	r3, r3
 606              	.L40:
ARM GAS  /tmp/ccLpvG41.s 			page 39


1577:Drivers/CMSIS/Include/core_cm4.h **** }
 607              		.loc 1 1577 0
 608 003a 1846     		mov	r0, r3
 609 003c 0C37     		adds	r7, r7, #12
 610              	.LCFI55:
 611              		.cfi_def_cfa_offset 4
 612 003e BD46     		mov	sp, r7
 613              	.LCFI56:
 614              		.cfi_def_cfa_register 13
 615              		@ sp needed
 616 0040 5DF8047B 		ldr	r7, [sp], #4
 617              	.LCFI57:
 618              		.cfi_restore 7
 619              		.cfi_def_cfa_offset 0
 620 0044 7047     		bx	lr
 621              	.L42:
 622 0046 00BF     		.align	2
 623              	.L41:
 624 0048 00ED00E0 		.word	-536810240
 625 004c 00E100E0 		.word	-536813312
 626              		.cfi_endproc
 627              	.LFE104:
 629              		.section	.text.NVIC_EncodePriority,"ax",%progbits
 630              		.align	2
 631              		.thumb
 632              		.thumb_func
 634              	NVIC_EncodePriority:
 635              	.LFB105:
1578:Drivers/CMSIS/Include/core_cm4.h **** 
1579:Drivers/CMSIS/Include/core_cm4.h **** 
1580:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Encode Priority
1581:Drivers/CMSIS/Include/core_cm4.h **** 
1582:Drivers/CMSIS/Include/core_cm4.h ****     The function encodes the priority for an interrupt with the given priority group,
1583:Drivers/CMSIS/Include/core_cm4.h ****     preemptive priority value, and subpriority value.
1584:Drivers/CMSIS/Include/core_cm4.h ****     In case of a conflict between priority grouping and available
1585:Drivers/CMSIS/Include/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS), the samllest possible priority group is set.
1586:Drivers/CMSIS/Include/core_cm4.h **** 
1587:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group.
1588:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1589:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]       SubPriority  Subpriority value (starting from 0).
1590:Drivers/CMSIS/Include/core_cm4.h ****     \return                        Encoded priority. Value can be used in the function \ref NVIC_Se
1591:Drivers/CMSIS/Include/core_cm4.h ****  */
1592:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1593:Drivers/CMSIS/Include/core_cm4.h **** {
 636              		.loc 1 1593 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 32
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640              		@ link register save eliminated.
 641 0000 80B4     		push	{r7}
 642              	.LCFI58:
 643              		.cfi_def_cfa_offset 4
 644              		.cfi_offset 7, -4
 645 0002 89B0     		sub	sp, sp, #36
 646              	.LCFI59:
 647              		.cfi_def_cfa_offset 40
 648 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccLpvG41.s 			page 40


 649              	.LCFI60:
 650              		.cfi_def_cfa_register 7
 651 0006 F860     		str	r0, [r7, #12]
 652 0008 B960     		str	r1, [r7, #8]
 653 000a 7A60     		str	r2, [r7, #4]
1594:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
 654              		.loc 1 1594 0
 655 000c FB68     		ldr	r3, [r7, #12]
 656 000e 03F00703 		and	r3, r3, #7
 657 0012 FB61     		str	r3, [r7, #28]
1595:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1596:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1597:Drivers/CMSIS/Include/core_cm4.h **** 
1598:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
 658              		.loc 1 1598 0
 659 0014 FB69     		ldr	r3, [r7, #28]
 660 0016 C3F10703 		rsb	r3, r3, #7
 661 001a 042B     		cmp	r3, #4
 662 001c 28BF     		it	cs
 663 001e 0423     		movcs	r3, #4
 664 0020 BB61     		str	r3, [r7, #24]
1599:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
 665              		.loc 1 1599 0
 666 0022 FB69     		ldr	r3, [r7, #28]
 667 0024 0433     		adds	r3, r3, #4
 668 0026 062B     		cmp	r3, #6
 669 0028 02D9     		bls	.L44
 670              		.loc 1 1599 0 is_stmt 0 discriminator 1
 671 002a FB69     		ldr	r3, [r7, #28]
 672 002c 033B     		subs	r3, r3, #3
 673 002e 00E0     		b	.L45
 674              	.L44:
 675              		.loc 1 1599 0 discriminator 2
 676 0030 0023     		movs	r3, #0
 677              	.L45:
 678              		.loc 1 1599 0 discriminator 4
 679 0032 7B61     		str	r3, [r7, #20]
1600:Drivers/CMSIS/Include/core_cm4.h **** 
1601:Drivers/CMSIS/Include/core_cm4.h ****   return (
1602:Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
 680              		.loc 1 1602 0 is_stmt 1 discriminator 4
 681 0034 0122     		movs	r2, #1
 682 0036 BB69     		ldr	r3, [r7, #24]
 683 0038 02FA03F3 		lsl	r3, r2, r3
 684 003c 013B     		subs	r3, r3, #1
 685 003e 1A46     		mov	r2, r3
 686 0040 BB68     		ldr	r3, [r7, #8]
 687 0042 1A40     		ands	r2, r2, r3
 688 0044 7B69     		ldr	r3, [r7, #20]
 689 0046 9A40     		lsls	r2, r2, r3
1603:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & ((1 << (SubPriorityBits    )) - 1)))
 690              		.loc 1 1603 0 discriminator 4
 691 0048 0121     		movs	r1, #1
 692 004a 7B69     		ldr	r3, [r7, #20]
 693 004c 01FA03F3 		lsl	r3, r1, r3
 694 0050 013B     		subs	r3, r3, #1
 695 0052 1946     		mov	r1, r3
ARM GAS  /tmp/ccLpvG41.s 			page 41


 696 0054 7B68     		ldr	r3, [r7, #4]
 697 0056 0B40     		ands	r3, r3, r1
1601:Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
 698              		.loc 1 1601 0 discriminator 4
 699 0058 1343     		orrs	r3, r3, r2
1604:Drivers/CMSIS/Include/core_cm4.h ****          );
1605:Drivers/CMSIS/Include/core_cm4.h **** }
 700              		.loc 1 1605 0 discriminator 4
 701 005a 1846     		mov	r0, r3
 702 005c 2437     		adds	r7, r7, #36
 703              	.LCFI61:
 704              		.cfi_def_cfa_offset 4
 705 005e BD46     		mov	sp, r7
 706              	.LCFI62:
 707              		.cfi_def_cfa_register 13
 708              		@ sp needed
 709 0060 5DF8047B 		ldr	r7, [sp], #4
 710              	.LCFI63:
 711              		.cfi_restore 7
 712              		.cfi_def_cfa_offset 0
 713 0064 7047     		bx	lr
 714              		.cfi_endproc
 715              	.LFE105:
 717 0066 00BF     		.section	.text.NVIC_DecodePriority,"ax",%progbits
 718              		.align	2
 719              		.thumb
 720              		.thumb_func
 722              	NVIC_DecodePriority:
 723              	.LFB106:
1606:Drivers/CMSIS/Include/core_cm4.h **** 
1607:Drivers/CMSIS/Include/core_cm4.h **** 
1608:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Decode Priority
1609:Drivers/CMSIS/Include/core_cm4.h **** 
1610:Drivers/CMSIS/Include/core_cm4.h ****     The function decodes an interrupt priority value with a given priority group to
1611:Drivers/CMSIS/Include/core_cm4.h ****     preemptive priority value and subpriority value.
1612:Drivers/CMSIS/Include/core_cm4.h ****     In case of a conflict between priority grouping and available
1613:Drivers/CMSIS/Include/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.
1614:Drivers/CMSIS/Include/core_cm4.h **** 
1615:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]         Priority   Priority value, which can be retrieved with the function \ref NV
1616:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group.
1617:Drivers/CMSIS/Include/core_cm4.h ****     \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1618:Drivers/CMSIS/Include/core_cm4.h ****     \param [out]     pSubPriority  Subpriority value (starting from 0).
1619:Drivers/CMSIS/Include/core_cm4.h ****  */
1620:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* pPre
1621:Drivers/CMSIS/Include/core_cm4.h **** {
 724              		.loc 1 1621 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 32
 727              		@ frame_needed = 1, uses_anonymous_args = 0
 728              		@ link register save eliminated.
 729 0000 80B4     		push	{r7}
 730              	.LCFI64:
 731              		.cfi_def_cfa_offset 4
 732              		.cfi_offset 7, -4
 733 0002 89B0     		sub	sp, sp, #36
 734              	.LCFI65:
 735              		.cfi_def_cfa_offset 40
ARM GAS  /tmp/ccLpvG41.s 			page 42


 736 0004 00AF     		add	r7, sp, #0
 737              	.LCFI66:
 738              		.cfi_def_cfa_register 7
 739 0006 F860     		str	r0, [r7, #12]
 740 0008 B960     		str	r1, [r7, #8]
 741 000a 7A60     		str	r2, [r7, #4]
 742 000c 3B60     		str	r3, [r7]
1622:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
 743              		.loc 1 1622 0
 744 000e BB68     		ldr	r3, [r7, #8]
 745 0010 03F00703 		and	r3, r3, #7
 746 0014 FB61     		str	r3, [r7, #28]
1623:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1624:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1625:Drivers/CMSIS/Include/core_cm4.h **** 
1626:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
 747              		.loc 1 1626 0
 748 0016 FB69     		ldr	r3, [r7, #28]
 749 0018 C3F10703 		rsb	r3, r3, #7
 750 001c 042B     		cmp	r3, #4
 751 001e 28BF     		it	cs
 752 0020 0423     		movcs	r3, #4
 753 0022 BB61     		str	r3, [r7, #24]
1627:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
 754              		.loc 1 1627 0
 755 0024 FB69     		ldr	r3, [r7, #28]
 756 0026 0433     		adds	r3, r3, #4
 757 0028 062B     		cmp	r3, #6
 758 002a 02D9     		bls	.L48
 759              		.loc 1 1627 0 is_stmt 0 discriminator 1
 760 002c FB69     		ldr	r3, [r7, #28]
 761 002e 033B     		subs	r3, r3, #3
 762 0030 00E0     		b	.L49
 763              	.L48:
 764              		.loc 1 1627 0 discriminator 2
 765 0032 0023     		movs	r3, #0
 766              	.L49:
 767              		.loc 1 1627 0 discriminator 4
 768 0034 7B61     		str	r3, [r7, #20]
1628:Drivers/CMSIS/Include/core_cm4.h **** 
1629:Drivers/CMSIS/Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & ((1 << (PreemptPriorityBits)) - 1);
 769              		.loc 1 1629 0 is_stmt 1 discriminator 4
 770 0036 FA68     		ldr	r2, [r7, #12]
 771 0038 7B69     		ldr	r3, [r7, #20]
 772 003a 22FA03F3 		lsr	r3, r2, r3
 773 003e 0121     		movs	r1, #1
 774 0040 BA69     		ldr	r2, [r7, #24]
 775 0042 01FA02F2 		lsl	r2, r1, r2
 776 0046 013A     		subs	r2, r2, #1
 777 0048 1A40     		ands	r2, r2, r3
 778 004a 7B68     		ldr	r3, [r7, #4]
 779 004c 1A60     		str	r2, [r3]
1630:Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & ((1 << (SubPriorityBits    )) - 1);
 780              		.loc 1 1630 0 discriminator 4
 781 004e 0122     		movs	r2, #1
 782 0050 7B69     		ldr	r3, [r7, #20]
 783 0052 02FA03F3 		lsl	r3, r2, r3
ARM GAS  /tmp/ccLpvG41.s 			page 43


 784 0056 013B     		subs	r3, r3, #1
 785 0058 1A46     		mov	r2, r3
 786 005a FB68     		ldr	r3, [r7, #12]
 787 005c 1A40     		ands	r2, r2, r3
 788 005e 3B68     		ldr	r3, [r7]
 789 0060 1A60     		str	r2, [r3]
1631:Drivers/CMSIS/Include/core_cm4.h **** }
 790              		.loc 1 1631 0 discriminator 4
 791 0062 00BF     		nop
 792 0064 2437     		adds	r7, r7, #36
 793              	.LCFI67:
 794              		.cfi_def_cfa_offset 4
 795 0066 BD46     		mov	sp, r7
 796              	.LCFI68:
 797              		.cfi_def_cfa_register 13
 798              		@ sp needed
 799 0068 5DF8047B 		ldr	r7, [sp], #4
 800              	.LCFI69:
 801              		.cfi_restore 7
 802              		.cfi_def_cfa_offset 0
 803 006c 7047     		bx	lr
 804              		.cfi_endproc
 805              	.LFE106:
 807 006e 00BF     		.section	.text.NVIC_SystemReset,"ax",%progbits
 808              		.align	2
 809              		.thumb
 810              		.thumb_func
 812              	NVIC_SystemReset:
 813              	.LFB107:
1632:Drivers/CMSIS/Include/core_cm4.h **** 
1633:Drivers/CMSIS/Include/core_cm4.h **** 
1634:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  System Reset
1635:Drivers/CMSIS/Include/core_cm4.h **** 
1636:Drivers/CMSIS/Include/core_cm4.h ****     The function initiates a system reset request to reset the MCU.
1637:Drivers/CMSIS/Include/core_cm4.h ****  */
1638:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1639:Drivers/CMSIS/Include/core_cm4.h **** {
 814              		.loc 1 1639 0
 815              		.cfi_startproc
 816              		@ args = 0, pretend = 0, frame = 0
 817              		@ frame_needed = 1, uses_anonymous_args = 0
 818              		@ link register save eliminated.
 819 0000 80B4     		push	{r7}
 820              	.LCFI70:
 821              		.cfi_def_cfa_offset 4
 822              		.cfi_offset 7, -4
 823 0002 00AF     		add	r7, sp, #0
 824              	.LCFI71:
 825              		.cfi_def_cfa_register 7
 826              	.LBB6:
 827              	.LBB7:
 828              		.file 2 "Drivers/CMSIS/Include/core_cmInstr.h"
   1:Drivers/CMSIS/Include/core_cmInstr.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:Drivers/CMSIS/Include/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:Drivers/CMSIS/Include/core_cmInstr.h ****  * @version  V3.20
   5:Drivers/CMSIS/Include/core_cmInstr.h ****  * @date     05. March 2013
ARM GAS  /tmp/ccLpvG41.s 			page 44


   6:Drivers/CMSIS/Include/core_cmInstr.h ****  *
   7:Drivers/CMSIS/Include/core_cmInstr.h ****  * @note
   8:Drivers/CMSIS/Include/core_cmInstr.h ****  *
   9:Drivers/CMSIS/Include/core_cmInstr.h ****  ******************************************************************************/
  10:Drivers/CMSIS/Include/core_cmInstr.h **** /* Copyright (c) 2009 - 2013 ARM LIMITED
  11:Drivers/CMSIS/Include/core_cmInstr.h **** 
  12:Drivers/CMSIS/Include/core_cmInstr.h ****    All rights reserved.
  13:Drivers/CMSIS/Include/core_cmInstr.h ****    Redistribution and use in source and binary forms, with or without
  14:Drivers/CMSIS/Include/core_cmInstr.h ****    modification, are permitted provided that the following conditions are met:
  15:Drivers/CMSIS/Include/core_cmInstr.h ****    - Redistributions of source code must retain the above copyright
  16:Drivers/CMSIS/Include/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer.
  17:Drivers/CMSIS/Include/core_cmInstr.h ****    - Redistributions in binary form must reproduce the above copyright
  18:Drivers/CMSIS/Include/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer in the
  19:Drivers/CMSIS/Include/core_cmInstr.h ****      documentation and/or other materials provided with the distribution.
  20:Drivers/CMSIS/Include/core_cmInstr.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:Drivers/CMSIS/Include/core_cmInstr.h ****      to endorse or promote products derived from this software without
  22:Drivers/CMSIS/Include/core_cmInstr.h ****      specific prior written permission.
  23:Drivers/CMSIS/Include/core_cmInstr.h ****    *
  24:Drivers/CMSIS/Include/core_cmInstr.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:Drivers/CMSIS/Include/core_cmInstr.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:Drivers/CMSIS/Include/core_cmInstr.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:Drivers/CMSIS/Include/core_cmInstr.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:Drivers/CMSIS/Include/core_cmInstr.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:Drivers/CMSIS/Include/core_cmInstr.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:Drivers/CMSIS/Include/core_cmInstr.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:Drivers/CMSIS/Include/core_cmInstr.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:Drivers/CMSIS/Include/core_cmInstr.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:Drivers/CMSIS/Include/core_cmInstr.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:Drivers/CMSIS/Include/core_cmInstr.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:Drivers/CMSIS/Include/core_cmInstr.h ****    ---------------------------------------------------------------------------*/
  36:Drivers/CMSIS/Include/core_cmInstr.h **** 
  37:Drivers/CMSIS/Include/core_cmInstr.h **** 
  38:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  39:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CORE_CMINSTR_H
  40:Drivers/CMSIS/Include/core_cmInstr.h **** 
  41:Drivers/CMSIS/Include/core_cmInstr.h **** 
  42:Drivers/CMSIS/Include/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  43:Drivers/CMSIS/Include/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  44:Drivers/CMSIS/Include/core_cmInstr.h ****   Access to dedicated instructions
  45:Drivers/CMSIS/Include/core_cmInstr.h ****   @{
  46:Drivers/CMSIS/Include/core_cmInstr.h **** */
  47:Drivers/CMSIS/Include/core_cmInstr.h **** 
  48:Drivers/CMSIS/Include/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  49:Drivers/CMSIS/Include/core_cmInstr.h **** /* ARM armcc specific functions */
  50:Drivers/CMSIS/Include/core_cmInstr.h **** 
  51:Drivers/CMSIS/Include/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  52:Drivers/CMSIS/Include/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  53:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
  54:Drivers/CMSIS/Include/core_cmInstr.h **** 
  55:Drivers/CMSIS/Include/core_cmInstr.h **** 
  56:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
  57:Drivers/CMSIS/Include/core_cmInstr.h **** 
  58:Drivers/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  59:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  60:Drivers/CMSIS/Include/core_cmInstr.h **** #define __NOP                             __nop
  61:Drivers/CMSIS/Include/core_cmInstr.h **** 
  62:Drivers/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  /tmp/ccLpvG41.s 			page 45


  63:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
  64:Drivers/CMSIS/Include/core_cmInstr.h **** 
  65:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  66:Drivers/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
  67:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  68:Drivers/CMSIS/Include/core_cmInstr.h **** #define __WFI                             __wfi
  69:Drivers/CMSIS/Include/core_cmInstr.h **** 
  70:Drivers/CMSIS/Include/core_cmInstr.h **** 
  71:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
  72:Drivers/CMSIS/Include/core_cmInstr.h **** 
  73:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  74:Drivers/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  75:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  76:Drivers/CMSIS/Include/core_cmInstr.h **** #define __WFE                             __wfe
  77:Drivers/CMSIS/Include/core_cmInstr.h **** 
  78:Drivers/CMSIS/Include/core_cmInstr.h **** 
  79:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
  80:Drivers/CMSIS/Include/core_cmInstr.h **** 
  81:Drivers/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  82:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  83:Drivers/CMSIS/Include/core_cmInstr.h **** #define __SEV                             __sev
  84:Drivers/CMSIS/Include/core_cmInstr.h **** 
  85:Drivers/CMSIS/Include/core_cmInstr.h **** 
  86:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  87:Drivers/CMSIS/Include/core_cmInstr.h **** 
  88:Drivers/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
  89:Drivers/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
  90:Drivers/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
  91:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  92:Drivers/CMSIS/Include/core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  93:Drivers/CMSIS/Include/core_cmInstr.h **** 
  94:Drivers/CMSIS/Include/core_cmInstr.h **** 
  95:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  96:Drivers/CMSIS/Include/core_cmInstr.h **** 
  97:Drivers/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
  98:Drivers/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  99:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 100:Drivers/CMSIS/Include/core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
 101:Drivers/CMSIS/Include/core_cmInstr.h **** 
 102:Drivers/CMSIS/Include/core_cmInstr.h **** 
 103:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 104:Drivers/CMSIS/Include/core_cmInstr.h **** 
 105:Drivers/CMSIS/Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 106:Drivers/CMSIS/Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 107:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 108:Drivers/CMSIS/Include/core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
 109:Drivers/CMSIS/Include/core_cmInstr.h **** 
 110:Drivers/CMSIS/Include/core_cmInstr.h **** 
 111:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 112:Drivers/CMSIS/Include/core_cmInstr.h **** 
 113:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 114:Drivers/CMSIS/Include/core_cmInstr.h **** 
 115:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 116:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 117:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 118:Drivers/CMSIS/Include/core_cmInstr.h **** #define __REV                             __rev
 119:Drivers/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  /tmp/ccLpvG41.s 			page 46


 120:Drivers/CMSIS/Include/core_cmInstr.h **** 
 121:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 122:Drivers/CMSIS/Include/core_cmInstr.h **** 
 123:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 124:Drivers/CMSIS/Include/core_cmInstr.h **** 
 125:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 127:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 128:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 129:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)
 130:Drivers/CMSIS/Include/core_cmInstr.h **** {
 131:Drivers/CMSIS/Include/core_cmInstr.h ****   rev16 r0, r0
 132:Drivers/CMSIS/Include/core_cmInstr.h ****   bx lr
 133:Drivers/CMSIS/Include/core_cmInstr.h **** }
 134:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 135:Drivers/CMSIS/Include/core_cmInstr.h **** 
 136:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 137:Drivers/CMSIS/Include/core_cmInstr.h **** 
 138:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 139:Drivers/CMSIS/Include/core_cmInstr.h **** 
 140:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 141:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 142:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 143:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 144:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int32_t __REVSH(int32_t value)
 145:Drivers/CMSIS/Include/core_cmInstr.h **** {
 146:Drivers/CMSIS/Include/core_cmInstr.h ****   revsh r0, r0
 147:Drivers/CMSIS/Include/core_cmInstr.h ****   bx lr
 148:Drivers/CMSIS/Include/core_cmInstr.h **** }
 149:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 150:Drivers/CMSIS/Include/core_cmInstr.h **** 
 151:Drivers/CMSIS/Include/core_cmInstr.h **** 
 152:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 153:Drivers/CMSIS/Include/core_cmInstr.h **** 
 154:Drivers/CMSIS/Include/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 155:Drivers/CMSIS/Include/core_cmInstr.h **** 
 156:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 157:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 158:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Rotated value
 159:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 160:Drivers/CMSIS/Include/core_cmInstr.h **** #define __ROR                             __ror
 161:Drivers/CMSIS/Include/core_cmInstr.h **** 
 162:Drivers/CMSIS/Include/core_cmInstr.h **** 
 163:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Breakpoint
 164:Drivers/CMSIS/Include/core_cmInstr.h **** 
 165:Drivers/CMSIS/Include/core_cmInstr.h ****     This function causes the processor to enter Debug state.
 166:Drivers/CMSIS/Include/core_cmInstr.h ****     Debug tools can use this to investigate system state when the instruction at a particular addre
 167:Drivers/CMSIS/Include/core_cmInstr.h **** 
 168:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  is ignored by the processor.
 169:Drivers/CMSIS/Include/core_cmInstr.h ****                    If required, a debugger can use it to store additional information about the bre
 170:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 171:Drivers/CMSIS/Include/core_cmInstr.h **** #define __BKPT(value)                       __breakpoint(value)
 172:Drivers/CMSIS/Include/core_cmInstr.h **** 
 173:Drivers/CMSIS/Include/core_cmInstr.h **** 
 174:Drivers/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 175:Drivers/CMSIS/Include/core_cmInstr.h **** 
 176:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse bit order of value
ARM GAS  /tmp/ccLpvG41.s 			page 47


 177:Drivers/CMSIS/Include/core_cmInstr.h **** 
 178:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 179:Drivers/CMSIS/Include/core_cmInstr.h **** 
 180:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 181:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 182:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 183:Drivers/CMSIS/Include/core_cmInstr.h **** #define __RBIT                            __rbit
 184:Drivers/CMSIS/Include/core_cmInstr.h **** 
 185:Drivers/CMSIS/Include/core_cmInstr.h **** 
 186:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 187:Drivers/CMSIS/Include/core_cmInstr.h **** 
 188:Drivers/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 189:Drivers/CMSIS/Include/core_cmInstr.h **** 
 190:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 191:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 192:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 193:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 194:Drivers/CMSIS/Include/core_cmInstr.h **** 
 195:Drivers/CMSIS/Include/core_cmInstr.h **** 
 196:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 197:Drivers/CMSIS/Include/core_cmInstr.h **** 
 198:Drivers/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 199:Drivers/CMSIS/Include/core_cmInstr.h **** 
 200:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 201:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 202:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 203:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 204:Drivers/CMSIS/Include/core_cmInstr.h **** 
 205:Drivers/CMSIS/Include/core_cmInstr.h **** 
 206:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 207:Drivers/CMSIS/Include/core_cmInstr.h **** 
 208:Drivers/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 209:Drivers/CMSIS/Include/core_cmInstr.h **** 
 210:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 211:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 212:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 213:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 214:Drivers/CMSIS/Include/core_cmInstr.h **** 
 215:Drivers/CMSIS/Include/core_cmInstr.h **** 
 216:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 217:Drivers/CMSIS/Include/core_cmInstr.h **** 
 218:Drivers/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 219:Drivers/CMSIS/Include/core_cmInstr.h **** 
 220:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 221:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 222:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 223:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 224:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 225:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 226:Drivers/CMSIS/Include/core_cmInstr.h **** 
 227:Drivers/CMSIS/Include/core_cmInstr.h **** 
 228:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 229:Drivers/CMSIS/Include/core_cmInstr.h **** 
 230:Drivers/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 231:Drivers/CMSIS/Include/core_cmInstr.h **** 
 232:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 233:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
ARM GAS  /tmp/ccLpvG41.s 			page 48


 234:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 235:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 236:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 237:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 238:Drivers/CMSIS/Include/core_cmInstr.h **** 
 239:Drivers/CMSIS/Include/core_cmInstr.h **** 
 240:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 241:Drivers/CMSIS/Include/core_cmInstr.h **** 
 242:Drivers/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 243:Drivers/CMSIS/Include/core_cmInstr.h **** 
 244:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 245:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 246:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 247:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 248:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 249:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 250:Drivers/CMSIS/Include/core_cmInstr.h **** 
 251:Drivers/CMSIS/Include/core_cmInstr.h **** 
 252:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 253:Drivers/CMSIS/Include/core_cmInstr.h **** 
 254:Drivers/CMSIS/Include/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 255:Drivers/CMSIS/Include/core_cmInstr.h **** 
 256:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 257:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CLREX                           __clrex
 258:Drivers/CMSIS/Include/core_cmInstr.h **** 
 259:Drivers/CMSIS/Include/core_cmInstr.h **** 
 260:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Signed Saturate
 261:Drivers/CMSIS/Include/core_cmInstr.h **** 
 262:Drivers/CMSIS/Include/core_cmInstr.h ****     This function saturates a signed value.
 263:Drivers/CMSIS/Include/core_cmInstr.h **** 
 264:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 265:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 266:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 267:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 268:Drivers/CMSIS/Include/core_cmInstr.h **** #define __SSAT                            __ssat
 269:Drivers/CMSIS/Include/core_cmInstr.h **** 
 270:Drivers/CMSIS/Include/core_cmInstr.h **** 
 271:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Unsigned Saturate
 272:Drivers/CMSIS/Include/core_cmInstr.h **** 
 273:Drivers/CMSIS/Include/core_cmInstr.h ****     This function saturates an unsigned value.
 274:Drivers/CMSIS/Include/core_cmInstr.h **** 
 275:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 276:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 277:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 278:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 279:Drivers/CMSIS/Include/core_cmInstr.h **** #define __USAT                            __usat
 280:Drivers/CMSIS/Include/core_cmInstr.h **** 
 281:Drivers/CMSIS/Include/core_cmInstr.h **** 
 282:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Count leading zeros
 283:Drivers/CMSIS/Include/core_cmInstr.h **** 
 284:Drivers/CMSIS/Include/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 285:Drivers/CMSIS/Include/core_cmInstr.h **** 
 286:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 287:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             number of leading zeros in value
 288:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 289:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CLZ                             __clz
 290:Drivers/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  /tmp/ccLpvG41.s 			page 49


 291:Drivers/CMSIS/Include/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
 292:Drivers/CMSIS/Include/core_cmInstr.h **** 
 293:Drivers/CMSIS/Include/core_cmInstr.h **** 
 294:Drivers/CMSIS/Include/core_cmInstr.h **** 
 295:Drivers/CMSIS/Include/core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 296:Drivers/CMSIS/Include/core_cmInstr.h **** /* IAR iccarm specific functions */
 297:Drivers/CMSIS/Include/core_cmInstr.h **** 
 298:Drivers/CMSIS/Include/core_cmInstr.h **** #include <cmsis_iar.h>
 299:Drivers/CMSIS/Include/core_cmInstr.h **** 
 300:Drivers/CMSIS/Include/core_cmInstr.h **** 
 301:Drivers/CMSIS/Include/core_cmInstr.h **** #elif defined ( __TMS470__ ) /*---------------- TI CCS Compiler ------------------*/
 302:Drivers/CMSIS/Include/core_cmInstr.h **** /* TI CCS specific functions */
 303:Drivers/CMSIS/Include/core_cmInstr.h **** 
 304:Drivers/CMSIS/Include/core_cmInstr.h **** #include <cmsis_ccs.h>
 305:Drivers/CMSIS/Include/core_cmInstr.h **** 
 306:Drivers/CMSIS/Include/core_cmInstr.h **** 
 307:Drivers/CMSIS/Include/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 308:Drivers/CMSIS/Include/core_cmInstr.h **** /* GNU gcc specific functions */
 309:Drivers/CMSIS/Include/core_cmInstr.h **** 
 310:Drivers/CMSIS/Include/core_cmInstr.h **** /* Define macros for porting to both thumb1 and thumb2.
 311:Drivers/CMSIS/Include/core_cmInstr.h ****  * For thumb1, use low register (r0-r7), specified by constrant "l"
 312:Drivers/CMSIS/Include/core_cmInstr.h ****  * Otherwise, use general registers, specified by constrant "r" */
 313:Drivers/CMSIS/Include/core_cmInstr.h **** #if defined (__thumb__) && !defined (__thumb2__)
 314:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 315:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 316:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 317:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 318:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 319:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 320:Drivers/CMSIS/Include/core_cmInstr.h **** 
 321:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
 322:Drivers/CMSIS/Include/core_cmInstr.h **** 
 323:Drivers/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 324:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 325:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
 326:Drivers/CMSIS/Include/core_cmInstr.h **** {
 327:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("nop");
 328:Drivers/CMSIS/Include/core_cmInstr.h **** }
 329:Drivers/CMSIS/Include/core_cmInstr.h **** 
 330:Drivers/CMSIS/Include/core_cmInstr.h **** 
 331:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
 332:Drivers/CMSIS/Include/core_cmInstr.h **** 
 333:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 334:Drivers/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
 335:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 336:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFI(void)
 337:Drivers/CMSIS/Include/core_cmInstr.h **** {
 338:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfi");
 339:Drivers/CMSIS/Include/core_cmInstr.h **** }
 340:Drivers/CMSIS/Include/core_cmInstr.h **** 
 341:Drivers/CMSIS/Include/core_cmInstr.h **** 
 342:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
 343:Drivers/CMSIS/Include/core_cmInstr.h **** 
 344:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 345:Drivers/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 346:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 347:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFE(void)
ARM GAS  /tmp/ccLpvG41.s 			page 50


 348:Drivers/CMSIS/Include/core_cmInstr.h **** {
 349:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfe");
 350:Drivers/CMSIS/Include/core_cmInstr.h **** }
 351:Drivers/CMSIS/Include/core_cmInstr.h **** 
 352:Drivers/CMSIS/Include/core_cmInstr.h **** 
 353:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
 354:Drivers/CMSIS/Include/core_cmInstr.h **** 
 355:Drivers/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 356:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 357:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __SEV(void)
 358:Drivers/CMSIS/Include/core_cmInstr.h **** {
 359:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("sev");
 360:Drivers/CMSIS/Include/core_cmInstr.h **** }
 361:Drivers/CMSIS/Include/core_cmInstr.h **** 
 362:Drivers/CMSIS/Include/core_cmInstr.h **** 
 363:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 364:Drivers/CMSIS/Include/core_cmInstr.h **** 
 365:Drivers/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
 366:Drivers/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
 367:Drivers/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
 368:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 369:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __ISB(void)
 370:Drivers/CMSIS/Include/core_cmInstr.h **** {
 371:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("isb");
 372:Drivers/CMSIS/Include/core_cmInstr.h **** }
 373:Drivers/CMSIS/Include/core_cmInstr.h **** 
 374:Drivers/CMSIS/Include/core_cmInstr.h **** 
 375:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 376:Drivers/CMSIS/Include/core_cmInstr.h **** 
 377:Drivers/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 378:Drivers/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 379:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 380:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
 381:Drivers/CMSIS/Include/core_cmInstr.h **** {
 382:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("dsb");
 829              		.loc 2 382 0
 830              		.syntax unified
 831              	@ 382 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 832 0004 BFF34F8F 		dsb
 833              	@ 0 "" 2
 834              		.thumb
 835              		.syntax unified
 836              	.LBE7:
 837              	.LBE6:
1640:Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                     /* Ensure all outstanding memory acc
1641:Drivers/CMSIS/Include/core_cm4.h ****                                                                   buffered write are completed befo
1642:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR  = ((0x5FA << SCB_AIRCR_VECTKEY_Pos)      |
 838              		.loc 1 1642 0
 839 0008 0549     		ldr	r1, .L52
1643:Drivers/CMSIS/Include/core_cm4.h ****                  (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 840              		.loc 1 1643 0
 841 000a 054B     		ldr	r3, .L52
 842 000c DB68     		ldr	r3, [r3, #12]
 843 000e 03F4E062 		and	r2, r3, #1792
 844 0012 044B     		ldr	r3, .L52+4
 845 0014 1343     		orrs	r3, r3, r2
1642:Drivers/CMSIS/Include/core_cm4.h ****                  (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
ARM GAS  /tmp/ccLpvG41.s 			page 51


 846              		.loc 1 1642 0
 847 0016 CB60     		str	r3, [r1, #12]
 848              	.LBB8:
 849              	.LBB9:
 850              		.loc 2 382 0
 851              		.syntax unified
 852              	@ 382 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 853 0018 BFF34F8F 		dsb
 854              	@ 0 "" 2
 855              		.thumb
 856              		.syntax unified
 857              	.L51:
 858              	.LBE9:
 859              	.LBE8:
1644:Drivers/CMSIS/Include/core_cm4.h ****                  SCB_AIRCR_SYSRESETREQ_Msk);                   /* Keep priority group unchanged */
1645:Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                     /* Ensure completion of memory acces
1646:Drivers/CMSIS/Include/core_cm4.h ****   while(1);                                                    /* wait until reset */
 860              		.loc 1 1646 0 discriminator 1
 861 001c FEE7     		b	.L51
 862              	.L53:
 863 001e 00BF     		.align	2
 864              	.L52:
 865 0020 00ED00E0 		.word	-536810240
 866 0024 0400FA05 		.word	100270084
 867              		.cfi_endproc
 868              	.LFE107:
 870              		.section	.text.SysTick_Config,"ax",%progbits
 871              		.align	2
 872              		.thumb
 873              		.thumb_func
 875              	SysTick_Config:
 876              	.LFB108:
1647:Drivers/CMSIS/Include/core_cm4.h **** }
1648:Drivers/CMSIS/Include/core_cm4.h **** 
1649:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1650:Drivers/CMSIS/Include/core_cm4.h **** 
1651:Drivers/CMSIS/Include/core_cm4.h **** 
1652:Drivers/CMSIS/Include/core_cm4.h **** 
1653:Drivers/CMSIS/Include/core_cm4.h **** /* ##################################    SysTick function  ########################################
1654:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1655:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
1656:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Functions that configure the System.
1657:Drivers/CMSIS/Include/core_cm4.h ****   @{
1658:Drivers/CMSIS/Include/core_cm4.h ****  */
1659:Drivers/CMSIS/Include/core_cm4.h **** 
1660:Drivers/CMSIS/Include/core_cm4.h **** #if (__Vendor_SysTickConfig == 0)
1661:Drivers/CMSIS/Include/core_cm4.h **** 
1662:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  System Tick Configuration
1663:Drivers/CMSIS/Include/core_cm4.h **** 
1664:Drivers/CMSIS/Include/core_cm4.h ****     The function initializes the System Timer and its interrupt, and starts the System Tick Timer.
1665:Drivers/CMSIS/Include/core_cm4.h ****     Counter is in free running mode to generate periodic interrupts.
1666:Drivers/CMSIS/Include/core_cm4.h **** 
1667:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]  ticks  Number of ticks between two interrupts.
1668:Drivers/CMSIS/Include/core_cm4.h **** 
1669:Drivers/CMSIS/Include/core_cm4.h ****     \return          0  Function succeeded.
1670:Drivers/CMSIS/Include/core_cm4.h ****     \return          1  Function failed.
1671:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccLpvG41.s 			page 52


1672:Drivers/CMSIS/Include/core_cm4.h ****     \note     When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
1673:Drivers/CMSIS/Include/core_cm4.h ****     function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
1674:Drivers/CMSIS/Include/core_cm4.h ****     must contain a vendor-specific implementation of this function.
1675:Drivers/CMSIS/Include/core_cm4.h **** 
1676:Drivers/CMSIS/Include/core_cm4.h ****  */
1677:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
1678:Drivers/CMSIS/Include/core_cm4.h **** {
 877              		.loc 1 1678 0
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 8
 880              		@ frame_needed = 1, uses_anonymous_args = 0
 881 0000 80B5     		push	{r7, lr}
 882              	.LCFI72:
 883              		.cfi_def_cfa_offset 8
 884              		.cfi_offset 7, -8
 885              		.cfi_offset 14, -4
 886 0002 82B0     		sub	sp, sp, #8
 887              	.LCFI73:
 888              		.cfi_def_cfa_offset 16
 889 0004 00AF     		add	r7, sp, #0
 890              	.LCFI74:
 891              		.cfi_def_cfa_register 7
 892 0006 7860     		str	r0, [r7, #4]
1679:Drivers/CMSIS/Include/core_cm4.h ****   if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */
 893              		.loc 1 1679 0
 894 0008 7B68     		ldr	r3, [r7, #4]
 895 000a 013B     		subs	r3, r3, #1
 896 000c B3F1807F 		cmp	r3, #16777216
 897 0010 01D3     		bcc	.L55
 898              		.loc 1 1679 0 is_stmt 0 discriminator 1
 899 0012 0123     		movs	r3, #1
 900 0014 0FE0     		b	.L56
 901              	.L55:
1680:Drivers/CMSIS/Include/core_cm4.h **** 
1681:Drivers/CMSIS/Include/core_cm4.h ****   SysTick->LOAD  = ticks - 1;                                  /* set reload register */
 902              		.loc 1 1681 0 is_stmt 1
 903 0016 0A4A     		ldr	r2, .L57
 904 0018 7B68     		ldr	r3, [r7, #4]
 905 001a 013B     		subs	r3, r3, #1
 906 001c 5360     		str	r3, [r2, #4]
1682:Drivers/CMSIS/Include/core_cm4.h ****   NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Systick Interrup
 907              		.loc 1 1682 0
 908 001e 0F21     		movs	r1, #15
 909 0020 4FF0FF30 		mov	r0, #-1
 910 0024 FFF7FEFF 		bl	NVIC_SetPriority
1683:Drivers/CMSIS/Include/core_cm4.h ****   SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
 911              		.loc 1 1683 0
 912 0028 054B     		ldr	r3, .L57
 913 002a 0022     		movs	r2, #0
 914 002c 9A60     		str	r2, [r3, #8]
1684:Drivers/CMSIS/Include/core_cm4.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 915              		.loc 1 1684 0
 916 002e 044B     		ldr	r3, .L57
 917 0030 0722     		movs	r2, #7
 918 0032 1A60     		str	r2, [r3]
1685:Drivers/CMSIS/Include/core_cm4.h ****                    SysTick_CTRL_TICKINT_Msk   |
1686:Drivers/CMSIS/Include/core_cm4.h ****                    SysTick_CTRL_ENABLE_Msk;                    /* Enable SysTick IRQ and SysTick Ti
ARM GAS  /tmp/ccLpvG41.s 			page 53


1687:Drivers/CMSIS/Include/core_cm4.h ****   return (0);                                                  /* Function successful */
 919              		.loc 1 1687 0
 920 0034 0023     		movs	r3, #0
 921              	.L56:
1688:Drivers/CMSIS/Include/core_cm4.h **** }
 922              		.loc 1 1688 0
 923 0036 1846     		mov	r0, r3
 924 0038 0837     		adds	r7, r7, #8
 925              	.LCFI75:
 926              		.cfi_def_cfa_offset 8
 927 003a BD46     		mov	sp, r7
 928              	.LCFI76:
 929              		.cfi_def_cfa_register 13
 930              		@ sp needed
 931 003c 80BD     		pop	{r7, pc}
 932              	.L58:
 933 003e 00BF     		.align	2
 934              	.L57:
 935 0040 10E000E0 		.word	-536813552
 936              		.cfi_endproc
 937              	.LFE108:
 939              		.section	.text.HAL_NVIC_SetPriorityGrouping,"ax",%progbits
 940              		.align	2
 941              		.global	HAL_NVIC_SetPriorityGrouping
 942              		.thumb
 943              		.thumb_func
 945              	HAL_NVIC_SetPriorityGrouping:
 946              	.LFB112:
 947              		.file 3 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @file    stm32f3xx_hal_cortex.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @version V1.1.0
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @date    12-Sept-2014
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @brief   CORTEX HAL module driver.
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *          This file provides firmware functions to manage the following
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *          functionalities of the CORTEX:
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *           + Initialization/de-initialization functions
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *           + Peripheral Control functions
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *  @verbatim
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   ==============================================================================
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****                         ##### How to use this driver #####
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   ==============================================================================
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****     [..]
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****     *** How to configure Interrupts using Cortex HAL driver ***
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****     ===========================================================
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****     [..]
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****     This section provide functions allowing to configure the NVIC interrupts (IRQ).
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****     The Cortex-M4 exceptions are managed by CMSIS functions.
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****     (#) Configure the NVIC Priority Grouping using HAL_NVIC_SetPriorityGrouping()
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****         function according to the following table.
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
ARM GAS  /tmp/ccLpvG41.s 			page 54


  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****      @brief  CORTEX_NVIC_Priority_Table
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****      The table below gives the allowed values of the pre-emption priority and subpriority according
  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****      to the Priority Grouping configuration performed by HAL_NVIC_SetPriorityGrouping() function
  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****        ============================================================================================
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****          NVIC_PriorityGroup   | NVIC_IRQChannelPreemptionPriority | NVIC_IRQChannelSubPriority  |  
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****        ============================================================================================
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****         NVIC_PRIORITYGROUP_0  |                0                  |            0-15             | 0
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****                               |                                   |                             | 4
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****        --------------------------------------------------------------------------------------------
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****         NVIC_PRIORITYGROUP_1  |                0-1                |            0-7              | 1
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****                               |                                   |                             | 3
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****        --------------------------------------------------------------------------------------------
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****         NVIC_PRIORITYGROUP_2  |                0-3                |            0-3              | 2
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****                               |                                   |                             | 2
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****        --------------------------------------------------------------------------------------------
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****         NVIC_PRIORITYGROUP_3  |                0-7                |            0-1              | 3
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****                               |                                   |                             | 1
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****        --------------------------------------------------------------------------------------------
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****         NVIC_PRIORITYGROUP_4  |                0-15               |            0                | 4
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****                               |                                   |                             | 0
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****        ============================================================================================
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****      (#)  Configure the priority of the selected IRQ Channels using HAL_NVIC_SetPriority()
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****      (#)  Enable the selected IRQ Channels using HAL_NVIC_EnableIRQ()
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****      -@- When the NVIC_PRIORITYGROUP_0 is selected, IRQ pre-emption is no more possible.
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****          The pending IRQ priority will be managed only by the sub priority.
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****      -@- IRQ priority order (sorted by highest to lowest priority):
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****         (+@) Lowest pre-emption priority
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****         (+@) Lowest sub priority
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****         (+@) Lowest hardware priority (IRQ number)
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****     [..]
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****     *** How to configure Systick using Cortex HAL driver ***
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****     ========================================================
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****     [..]
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****     Setup SysTick Timer for time base.
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****            
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****    (+) The HAL_SYSTICK_Config()function calls the SysTick_Config() function which
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****        is a CMSIS function that:
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****         (++) Configures the SysTick Reload register with value passed as function parameter.
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****         (++) Configures the SysTick IRQ priority to the lowest value (0x0F).
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****         (++) Resets the SysTick Counter register.
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****         (++) Configures the SysTick Counter clock source to be Core Clock Source (HCLK).
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****         (++) Enables the SysTick Interrupt.
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****         (++) Starts the SysTick Counter.
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****     
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****    (+) You can change the SysTick Clock source to be HCLK_Div8 by calling the macro
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****        __HAL_CORTEX_SYSTICKCLK_CONFIG(SYSTICK_CLKSOURCE_HCLK_DIV8) just after the
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****        HAL_SYSTICK_Config() function call. The __HAL_CORTEX_SYSTICKCLK_CONFIG() macro is defined
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****        inside the stm32f3xx_hal_cortex.h file.
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****    (+) You can change the SysTick IRQ priority by calling the
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****        HAL_NVIC_SetPriority(SysTick_IRQn,...) function just after the HAL_SYSTICK_Config() function
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****        call. The HAL_NVIC_SetPriority() call the NVIC_SetPriority() function which is a CMSIS funct
ARM GAS  /tmp/ccLpvG41.s 			page 55


  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****    (+) To adjust the SysTick time base, use the following formula:
  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****        Reload Value = SysTick Counter Clock (Hz) x  Desired Time base (s)
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****        (++) Reload Value is the parameter to be passed for HAL_SYSTICK_Config() function
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****        (++) Reload Value should not exceed 0xFFFFFF
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   @endverbatim
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   ******************************************************************************
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @attention
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2014 STMicroelectronics</center></h2>
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * Redistribution and use in source and binary forms, with or without modification,
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * are permitted provided that the following conditions are met:
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *      this list of conditions and the following disclaimer.
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *      this list of conditions and the following disclaimer in the documentation
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *      and/or other materials provided with the distribution.
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *      may be used to endorse or promote products derived from this software
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *      without specific prior written permission.
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   ******************************************************************************  
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   */
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /* Includes ------------------------------------------------------------------*/
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** #include "stm32f3xx_hal.h"
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /** @addtogroup STM32F3xx_HAL_Driver
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @{
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   */
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /** @defgroup CORTEX CORTEX HAL module driver
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @brief CORTEX HAL module driver
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @{
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   */
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** #ifdef HAL_CORTEX_MODULE_ENABLED
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /* Private typedef -----------------------------------------------------------*/
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /* Private define ------------------------------------------------------------*/
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /* Private macro -------------------------------------------------------------*/
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /* Private variables ---------------------------------------------------------*/
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /* Private function prototypes -----------------------------------------------*/
ARM GAS  /tmp/ccLpvG41.s 			page 56


 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /* Exported functions --------------------------------------------------------*/
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions CORTEX Exported Functions
 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @{
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   */
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group1 Initialization and de-initialization functions
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****  *  @brief    Initialization and Configuration functions
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****  *
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** @verbatim
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   ==============================================================================
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****               ##### Initialization and de-initialization functions #####
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   ==============================================================================
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****     [..]
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****       This section provide the Cortex HAL driver functions allowing to configure Interrupts
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****       Systick functionalities
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** @endverbatim
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @{
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   */
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /**
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @brief  Sets the priority grouping field (pre-emption priority and subpriority)
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         using the required unlock sequence.
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @param  PriorityGroup: The priority grouping bits length.
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_0: 0 bits for pre-emption priority
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *                                    4 bits for subpriority
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_1: 1 bits for pre-emption priority
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *                                    3 bits for subpriority
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_2: 2 bits for pre-emption priority
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *                                    2 bits for subpriority
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_3: 3 bits for pre-emption priority
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *                                    1 bits for subpriority
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_4: 4 bits for pre-emption priority
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *                                    0 bits for subpriority
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible.
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         The pending IRQ priority will be managed only by the subpriority.
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @retval None
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   */
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** {
 948              		.loc 3 186 0
 949              		.cfi_startproc
 950              		@ args = 0, pretend = 0, frame = 8
 951              		@ frame_needed = 1, uses_anonymous_args = 0
 952 0000 80B5     		push	{r7, lr}
 953              	.LCFI77:
 954              		.cfi_def_cfa_offset 8
 955              		.cfi_offset 7, -8
 956              		.cfi_offset 14, -4
 957 0002 82B0     		sub	sp, sp, #8
 958              	.LCFI78:
 959              		.cfi_def_cfa_offset 16
 960 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccLpvG41.s 			page 57


 961              	.LCFI79:
 962              		.cfi_def_cfa_register 7
 963 0006 7860     		str	r0, [r7, #4]
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   /* Check the parameters */
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   NVIC_SetPriorityGrouping(PriorityGroup);
 964              		.loc 3 191 0
 965 0008 7868     		ldr	r0, [r7, #4]
 966 000a FFF7FEFF 		bl	NVIC_SetPriorityGrouping
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** }
 967              		.loc 3 192 0
 968 000e 00BF     		nop
 969 0010 0837     		adds	r7, r7, #8
 970              	.LCFI80:
 971              		.cfi_def_cfa_offset 8
 972 0012 BD46     		mov	sp, r7
 973              	.LCFI81:
 974              		.cfi_def_cfa_register 13
 975              		@ sp needed
 976 0014 80BD     		pop	{r7, pc}
 977              		.cfi_endproc
 978              	.LFE112:
 980 0016 00BF     		.section	.text.HAL_NVIC_SetPriority,"ax",%progbits
 981              		.align	2
 982              		.global	HAL_NVIC_SetPriority
 983              		.thumb
 984              		.thumb_func
 986              	HAL_NVIC_SetPriority:
 987              	.LFB113:
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /**
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @brief  Sets the priority of an interrupt.
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @param  IRQn: External interrupt number
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @param  PreemptPriority: The pre-emption priority for the IRQn channel.
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15 as described in the table CORTEX_NVIC_Pr
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority
 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @param  SubPriority: the subpriority level for the IRQ channel.
 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15 as described in the table CORTEX_NVIC_Pr
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority.
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @retval None
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   */
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** {
 988              		.loc 3 208 0
 989              		.cfi_startproc
 990              		@ args = 0, pretend = 0, frame = 24
 991              		@ frame_needed = 1, uses_anonymous_args = 0
 992 0000 80B5     		push	{r7, lr}
 993              	.LCFI82:
 994              		.cfi_def_cfa_offset 8
 995              		.cfi_offset 7, -8
 996              		.cfi_offset 14, -4
 997 0002 86B0     		sub	sp, sp, #24
ARM GAS  /tmp/ccLpvG41.s 			page 58


 998              	.LCFI83:
 999              		.cfi_def_cfa_offset 32
 1000 0004 00AF     		add	r7, sp, #0
 1001              	.LCFI84:
 1002              		.cfi_def_cfa_register 7
 1003 0006 0346     		mov	r3, r0
 1004 0008 B960     		str	r1, [r7, #8]
 1005 000a 7A60     		str	r2, [r7, #4]
 1006 000c FB73     		strb	r3, [r7, #15]
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   uint32_t prioritygroup = 0x00;
 1007              		.loc 3 209 0
 1008 000e 0023     		movs	r3, #0
 1009 0010 7B61     		str	r3, [r7, #20]
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   /* Check the parameters */
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   prioritygroup = NVIC_GetPriorityGrouping();
 1010              		.loc 3 215 0
 1011 0012 FFF7FEFF 		bl	NVIC_GetPriorityGrouping
 1012 0016 7861     		str	r0, [r7, #20]
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 1013              		.loc 3 217 0
 1014 0018 7A68     		ldr	r2, [r7, #4]
 1015 001a B968     		ldr	r1, [r7, #8]
 1016 001c 7869     		ldr	r0, [r7, #20]
 1017 001e FFF7FEFF 		bl	NVIC_EncodePriority
 1018 0022 0246     		mov	r2, r0
 1019 0024 97F90F30 		ldrsb	r3, [r7, #15]
 1020 0028 1146     		mov	r1, r2
 1021 002a 1846     		mov	r0, r3
 1022 002c FFF7FEFF 		bl	NVIC_SetPriority
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** }
 1023              		.loc 3 218 0
 1024 0030 00BF     		nop
 1025 0032 1837     		adds	r7, r7, #24
 1026              	.LCFI85:
 1027              		.cfi_def_cfa_offset 8
 1028 0034 BD46     		mov	sp, r7
 1029              	.LCFI86:
 1030              		.cfi_def_cfa_register 13
 1031              		@ sp needed
 1032 0036 80BD     		pop	{r7, pc}
 1033              		.cfi_endproc
 1034              	.LFE113:
 1036              		.section	.text.HAL_NVIC_EnableIRQ,"ax",%progbits
 1037              		.align	2
 1038              		.global	HAL_NVIC_EnableIRQ
 1039              		.thumb
 1040              		.thumb_func
 1042              	HAL_NVIC_EnableIRQ:
 1043              	.LFB114:
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /**
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @brief  Enables a device specific interrupt in the NVIC interrupt controller.
ARM GAS  /tmp/ccLpvG41.s 			page 59


 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         function should be called before.
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @retval None
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   */
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** {
 1044              		.loc 3 230 0
 1045              		.cfi_startproc
 1046              		@ args = 0, pretend = 0, frame = 8
 1047              		@ frame_needed = 1, uses_anonymous_args = 0
 1048 0000 80B5     		push	{r7, lr}
 1049              	.LCFI87:
 1050              		.cfi_def_cfa_offset 8
 1051              		.cfi_offset 7, -8
 1052              		.cfi_offset 14, -4
 1053 0002 82B0     		sub	sp, sp, #8
 1054              	.LCFI88:
 1055              		.cfi_def_cfa_offset 16
 1056 0004 00AF     		add	r7, sp, #0
 1057              	.LCFI89:
 1058              		.cfi_def_cfa_register 7
 1059 0006 0346     		mov	r3, r0
 1060 0008 FB71     		strb	r3, [r7, #7]
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   /* Enable interrupt */
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   NVIC_EnableIRQ(IRQn);
 1061              		.loc 3 232 0
 1062 000a 97F90730 		ldrsb	r3, [r7, #7]
 1063 000e 1846     		mov	r0, r3
 1064 0010 FFF7FEFF 		bl	NVIC_EnableIRQ
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** }
 1065              		.loc 3 233 0
 1066 0014 00BF     		nop
 1067 0016 0837     		adds	r7, r7, #8
 1068              	.LCFI90:
 1069              		.cfi_def_cfa_offset 8
 1070 0018 BD46     		mov	sp, r7
 1071              	.LCFI91:
 1072              		.cfi_def_cfa_register 13
 1073              		@ sp needed
 1074 001a 80BD     		pop	{r7, pc}
 1075              		.cfi_endproc
 1076              	.LFE114:
 1078              		.section	.text.HAL_NVIC_DisableIRQ,"ax",%progbits
 1079              		.align	2
 1080              		.global	HAL_NVIC_DisableIRQ
 1081              		.thumb
 1082              		.thumb_func
 1084              	HAL_NVIC_DisableIRQ:
 1085              	.LFB115:
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /**
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @brief  Disables a device specific interrupt in the NVIC interrupt controller.
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
ARM GAS  /tmp/ccLpvG41.s 			page 60


 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @retval None
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   */
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** {
 1086              		.loc 3 243 0
 1087              		.cfi_startproc
 1088              		@ args = 0, pretend = 0, frame = 8
 1089              		@ frame_needed = 1, uses_anonymous_args = 0
 1090 0000 80B5     		push	{r7, lr}
 1091              	.LCFI92:
 1092              		.cfi_def_cfa_offset 8
 1093              		.cfi_offset 7, -8
 1094              		.cfi_offset 14, -4
 1095 0002 82B0     		sub	sp, sp, #8
 1096              	.LCFI93:
 1097              		.cfi_def_cfa_offset 16
 1098 0004 00AF     		add	r7, sp, #0
 1099              	.LCFI94:
 1100              		.cfi_def_cfa_register 7
 1101 0006 0346     		mov	r3, r0
 1102 0008 FB71     		strb	r3, [r7, #7]
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   /* Disable interrupt */
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   NVIC_DisableIRQ(IRQn);
 1103              		.loc 3 245 0
 1104 000a 97F90730 		ldrsb	r3, [r7, #7]
 1105 000e 1846     		mov	r0, r3
 1106 0010 FFF7FEFF 		bl	NVIC_DisableIRQ
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** }
 1107              		.loc 3 246 0
 1108 0014 00BF     		nop
 1109 0016 0837     		adds	r7, r7, #8
 1110              	.LCFI95:
 1111              		.cfi_def_cfa_offset 8
 1112 0018 BD46     		mov	sp, r7
 1113              	.LCFI96:
 1114              		.cfi_def_cfa_register 13
 1115              		@ sp needed
 1116 001a 80BD     		pop	{r7, pc}
 1117              		.cfi_endproc
 1118              	.LFE115:
 1120              		.section	.text.HAL_NVIC_SystemReset,"ax",%progbits
 1121              		.align	2
 1122              		.global	HAL_NVIC_SystemReset
 1123              		.thumb
 1124              		.thumb_func
 1126              	HAL_NVIC_SystemReset:
 1127              	.LFB116:
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /**
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @brief  Initiates a system reset request to reset the MCU.
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @retval None
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   */
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** void HAL_NVIC_SystemReset(void)
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** {
 1128              		.loc 3 253 0
 1129              		.cfi_startproc
ARM GAS  /tmp/ccLpvG41.s 			page 61


 1130              		@ args = 0, pretend = 0, frame = 0
 1131              		@ frame_needed = 1, uses_anonymous_args = 0
 1132 0000 80B5     		push	{r7, lr}
 1133              	.LCFI97:
 1134              		.cfi_def_cfa_offset 8
 1135              		.cfi_offset 7, -8
 1136              		.cfi_offset 14, -4
 1137 0002 00AF     		add	r7, sp, #0
 1138              	.LCFI98:
 1139              		.cfi_def_cfa_register 7
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   /* System Reset */
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   NVIC_SystemReset();
 1140              		.loc 3 255 0
 1141 0004 FFF7FEFF 		bl	NVIC_SystemReset
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** }
 1142              		.loc 3 256 0
 1143 0008 00BF     		nop
 1144 000a 80BD     		pop	{r7, pc}
 1145              		.cfi_endproc
 1146              	.LFE116:
 1148              		.section	.text.HAL_SYSTICK_Config,"ax",%progbits
 1149              		.align	2
 1150              		.global	HAL_SYSTICK_Config
 1151              		.thumb
 1152              		.thumb_func
 1154              	HAL_SYSTICK_Config:
 1155              	.LFB117:
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /**
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @brief  Initializes the System Timer and its interrupt, and starts the System Tick Timer.
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         Counter is in free running mode to generate periodic interrupts.
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @param  TicksNumb: Specifies the ticks Number of ticks between two interrupts.
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @retval status:  - 0  Function succeeded.
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *                  - 1  Function failed.
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   */
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** {
 1156              		.loc 3 266 0
 1157              		.cfi_startproc
 1158              		@ args = 0, pretend = 0, frame = 8
 1159              		@ frame_needed = 1, uses_anonymous_args = 0
 1160 0000 80B5     		push	{r7, lr}
 1161              	.LCFI99:
 1162              		.cfi_def_cfa_offset 8
 1163              		.cfi_offset 7, -8
 1164              		.cfi_offset 14, -4
 1165 0002 82B0     		sub	sp, sp, #8
 1166              	.LCFI100:
 1167              		.cfi_def_cfa_offset 16
 1168 0004 00AF     		add	r7, sp, #0
 1169              	.LCFI101:
 1170              		.cfi_def_cfa_register 7
 1171 0006 7860     		str	r0, [r7, #4]
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****    return SysTick_Config(TicksNumb);
 1172              		.loc 3 267 0
 1173 0008 7868     		ldr	r0, [r7, #4]
 1174 000a FFF7FEFF 		bl	SysTick_Config
ARM GAS  /tmp/ccLpvG41.s 			page 62


 1175 000e 0346     		mov	r3, r0
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** }
 1176              		.loc 3 268 0
 1177 0010 1846     		mov	r0, r3
 1178 0012 0837     		adds	r7, r7, #8
 1179              	.LCFI102:
 1180              		.cfi_def_cfa_offset 8
 1181 0014 BD46     		mov	sp, r7
 1182              	.LCFI103:
 1183              		.cfi_def_cfa_register 13
 1184              		@ sp needed
 1185 0016 80BD     		pop	{r7, pc}
 1186              		.cfi_endproc
 1187              	.LFE117:
 1189              		.section	.text.HAL_NVIC_GetPriorityGrouping,"ax",%progbits
 1190              		.align	2
 1191              		.global	HAL_NVIC_GetPriorityGrouping
 1192              		.thumb
 1193              		.thumb_func
 1195              	HAL_NVIC_GetPriorityGrouping:
 1196              	.LFB118:
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /**
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @}
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   */
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group2 Peripheral Control functions
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****  *  @brief   Cortex control functions
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****  *
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** @verbatim
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   ==============================================================================
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****                       ##### Peripheral Control functions #####
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   ==============================================================================
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****     [..]
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****       This subsection provides a set of functions allowing to control the CORTEX
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****       (NVIC, SYSTICK) functionalities.
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** @endverbatim
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @{
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   */
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /**
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @brief  Gets the priority grouping field from the NVIC Interrupt Controller.
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @retval Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field)
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   */
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPriorityGrouping(void)
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** {
 1197              		.loc 3 294 0
 1198              		.cfi_startproc
 1199              		@ args = 0, pretend = 0, frame = 0
 1200              		@ frame_needed = 1, uses_anonymous_args = 0
 1201 0000 80B5     		push	{r7, lr}
 1202              	.LCFI104:
 1203              		.cfi_def_cfa_offset 8
 1204              		.cfi_offset 7, -8
 1205              		.cfi_offset 14, -4
 1206 0002 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccLpvG41.s 			page 63


 1207              	.LCFI105:
 1208              		.cfi_def_cfa_register 7
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   /* Get the PRIGROUP[10:8] field value */
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   return NVIC_GetPriorityGrouping();
 1209              		.loc 3 296 0
 1210 0004 FFF7FEFF 		bl	NVIC_GetPriorityGrouping
 1211 0008 0346     		mov	r3, r0
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** }
 1212              		.loc 3 297 0
 1213 000a 1846     		mov	r0, r3
 1214 000c 80BD     		pop	{r7, pc}
 1215              		.cfi_endproc
 1216              	.LFE118:
 1218 000e 00BF     		.section	.text.HAL_NVIC_GetPriority,"ax",%progbits
 1219              		.align	2
 1220              		.global	HAL_NVIC_GetPriority
 1221              		.thumb
 1222              		.thumb_func
 1224              	HAL_NVIC_GetPriority:
 1225              	.LFB119:
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /**
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @brief  Gets the priority of an interrupt.
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @param  IRQn: External interrupt number
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @param   PriorityGroup: the priority grouping bits length.
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_0: 0 bits for pre-emption priority
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *                                      4 bits for subpriority
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_1: 1 bits for pre-emption priority
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *                                      3 bits for subpriority
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_2: 2 bits for pre-emption priority
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *                                      2 bits for subpriority
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_3: 3 bits for pre-emption priority
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *                                      1 bits for subpriority
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_4: 4 bits for pre-emption priority
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *                                      0 bits for subpriority
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @param  pPreemptPriority: Pointer on the Preemptive priority value (starting from 0).
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @param  pSubPriority: Pointer on the Subpriority value (starting from 0).
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @retval None
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   */
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** void HAL_NVIC_GetPriority(IRQn_Type IRQn, uint32_t PriorityGroup, uint32_t* pPreemptPriority, uint3
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** {
 1226              		.loc 3 321 0
 1227              		.cfi_startproc
 1228              		@ args = 0, pretend = 0, frame = 16
 1229              		@ frame_needed = 1, uses_anonymous_args = 0
 1230 0000 80B5     		push	{r7, lr}
 1231              	.LCFI106:
 1232              		.cfi_def_cfa_offset 8
 1233              		.cfi_offset 7, -8
 1234              		.cfi_offset 14, -4
 1235 0002 84B0     		sub	sp, sp, #16
 1236              	.LCFI107:
 1237              		.cfi_def_cfa_offset 24
 1238 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccLpvG41.s 			page 64


 1239              	.LCFI108:
 1240              		.cfi_def_cfa_register 7
 1241 0006 B960     		str	r1, [r7, #8]
 1242 0008 7A60     		str	r2, [r7, #4]
 1243 000a 3B60     		str	r3, [r7]
 1244 000c 0346     		mov	r3, r0
 1245 000e FB73     		strb	r3, [r7, #15]
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   /* Check the parameters */
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   /* Get priority for Cortex-M system or device specific interrupts */
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   NVIC_DecodePriority(NVIC_GetPriority(IRQn), PriorityGroup, pPreemptPriority, pSubPriority);
 1246              		.loc 3 325 0
 1247 0010 97F90F30 		ldrsb	r3, [r7, #15]
 1248 0014 1846     		mov	r0, r3
 1249 0016 FFF7FEFF 		bl	NVIC_GetPriority
 1250 001a 3B68     		ldr	r3, [r7]
 1251 001c 7A68     		ldr	r2, [r7, #4]
 1252 001e B968     		ldr	r1, [r7, #8]
 1253 0020 FFF7FEFF 		bl	NVIC_DecodePriority
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** }
 1254              		.loc 3 326 0
 1255 0024 00BF     		nop
 1256 0026 1037     		adds	r7, r7, #16
 1257              	.LCFI109:
 1258              		.cfi_def_cfa_offset 8
 1259 0028 BD46     		mov	sp, r7
 1260              	.LCFI110:
 1261              		.cfi_def_cfa_register 13
 1262              		@ sp needed
 1263 002a 80BD     		pop	{r7, pc}
 1264              		.cfi_endproc
 1265              	.LFE119:
 1267              		.section	.text.HAL_NVIC_SetPendingIRQ,"ax",%progbits
 1268              		.align	2
 1269              		.global	HAL_NVIC_SetPendingIRQ
 1270              		.thumb
 1271              		.thumb_func
 1273              	HAL_NVIC_SetPendingIRQ:
 1274              	.LFB120:
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /**
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @brief  Sets Pending bit of an external interrupt.
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @retval None
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   */
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** void HAL_NVIC_SetPendingIRQ(IRQn_Type IRQn)
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** {
 1275              		.loc 3 336 0
 1276              		.cfi_startproc
 1277              		@ args = 0, pretend = 0, frame = 8
 1278              		@ frame_needed = 1, uses_anonymous_args = 0
 1279 0000 80B5     		push	{r7, lr}
 1280              	.LCFI111:
 1281              		.cfi_def_cfa_offset 8
 1282              		.cfi_offset 7, -8
ARM GAS  /tmp/ccLpvG41.s 			page 65


 1283              		.cfi_offset 14, -4
 1284 0002 82B0     		sub	sp, sp, #8
 1285              	.LCFI112:
 1286              		.cfi_def_cfa_offset 16
 1287 0004 00AF     		add	r7, sp, #0
 1288              	.LCFI113:
 1289              		.cfi_def_cfa_register 7
 1290 0006 0346     		mov	r3, r0
 1291 0008 FB71     		strb	r3, [r7, #7]
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   /* Set interrupt pending */
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   NVIC_SetPendingIRQ(IRQn);
 1292              		.loc 3 338 0
 1293 000a 97F90730 		ldrsb	r3, [r7, #7]
 1294 000e 1846     		mov	r0, r3
 1295 0010 FFF7FEFF 		bl	NVIC_SetPendingIRQ
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** }
 1296              		.loc 3 339 0
 1297 0014 00BF     		nop
 1298 0016 0837     		adds	r7, r7, #8
 1299              	.LCFI114:
 1300              		.cfi_def_cfa_offset 8
 1301 0018 BD46     		mov	sp, r7
 1302              	.LCFI115:
 1303              		.cfi_def_cfa_register 13
 1304              		@ sp needed
 1305 001a 80BD     		pop	{r7, pc}
 1306              		.cfi_endproc
 1307              	.LFE120:
 1309              		.section	.text.HAL_NVIC_GetPendingIRQ,"ax",%progbits
 1310              		.align	2
 1311              		.global	HAL_NVIC_GetPendingIRQ
 1312              		.thumb
 1313              		.thumb_func
 1315              	HAL_NVIC_GetPendingIRQ:
 1316              	.LFB121:
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /**
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @brief  Gets Pending Interrupt (reads the pending register in the NVIC
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         and returns the pending bit for the specified interrupt).
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   */
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPendingIRQ(IRQn_Type IRQn)
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** {
 1317              		.loc 3 351 0
 1318              		.cfi_startproc
 1319              		@ args = 0, pretend = 0, frame = 8
 1320              		@ frame_needed = 1, uses_anonymous_args = 0
 1321 0000 80B5     		push	{r7, lr}
 1322              	.LCFI116:
 1323              		.cfi_def_cfa_offset 8
 1324              		.cfi_offset 7, -8
 1325              		.cfi_offset 14, -4
 1326 0002 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccLpvG41.s 			page 66


 1327              	.LCFI117:
 1328              		.cfi_def_cfa_offset 16
 1329 0004 00AF     		add	r7, sp, #0
 1330              	.LCFI118:
 1331              		.cfi_def_cfa_register 7
 1332 0006 0346     		mov	r3, r0
 1333 0008 FB71     		strb	r3, [r7, #7]
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   /* Return 1 if pending else 0 */
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   return NVIC_GetPendingIRQ(IRQn);
 1334              		.loc 3 353 0
 1335 000a 97F90730 		ldrsb	r3, [r7, #7]
 1336 000e 1846     		mov	r0, r3
 1337 0010 FFF7FEFF 		bl	NVIC_GetPendingIRQ
 1338 0014 0346     		mov	r3, r0
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** }
 1339              		.loc 3 354 0
 1340 0016 1846     		mov	r0, r3
 1341 0018 0837     		adds	r7, r7, #8
 1342              	.LCFI119:
 1343              		.cfi_def_cfa_offset 8
 1344 001a BD46     		mov	sp, r7
 1345              	.LCFI120:
 1346              		.cfi_def_cfa_register 13
 1347              		@ sp needed
 1348 001c 80BD     		pop	{r7, pc}
 1349              		.cfi_endproc
 1350              	.LFE121:
 1352 001e 00BF     		.section	.text.HAL_NVIC_ClearPendingIRQ,"ax",%progbits
 1353              		.align	2
 1354              		.global	HAL_NVIC_ClearPendingIRQ
 1355              		.thumb
 1356              		.thumb_func
 1358              	HAL_NVIC_ClearPendingIRQ:
 1359              	.LFB122:
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /**
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @brief  Clears the pending bit of an external interrupt.
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @retval None
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   */
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** {
 1360              		.loc 3 364 0
 1361              		.cfi_startproc
 1362              		@ args = 0, pretend = 0, frame = 8
 1363              		@ frame_needed = 1, uses_anonymous_args = 0
 1364 0000 80B5     		push	{r7, lr}
 1365              	.LCFI121:
 1366              		.cfi_def_cfa_offset 8
 1367              		.cfi_offset 7, -8
 1368              		.cfi_offset 14, -4
 1369 0002 82B0     		sub	sp, sp, #8
 1370              	.LCFI122:
 1371              		.cfi_def_cfa_offset 16
 1372 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccLpvG41.s 			page 67


 1373              	.LCFI123:
 1374              		.cfi_def_cfa_register 7
 1375 0006 0346     		mov	r3, r0
 1376 0008 FB71     		strb	r3, [r7, #7]
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   /* Clear pending interrupt */
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   NVIC_ClearPendingIRQ(IRQn);
 1377              		.loc 3 366 0
 1378 000a 97F90730 		ldrsb	r3, [r7, #7]
 1379 000e 1846     		mov	r0, r3
 1380 0010 FFF7FEFF 		bl	NVIC_ClearPendingIRQ
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** }
 1381              		.loc 3 367 0
 1382 0014 00BF     		nop
 1383 0016 0837     		adds	r7, r7, #8
 1384              	.LCFI124:
 1385              		.cfi_def_cfa_offset 8
 1386 0018 BD46     		mov	sp, r7
 1387              	.LCFI125:
 1388              		.cfi_def_cfa_register 13
 1389              		@ sp needed
 1390 001a 80BD     		pop	{r7, pc}
 1391              		.cfi_endproc
 1392              	.LFE122:
 1394              		.section	.text.HAL_NVIC_GetActive,"ax",%progbits
 1395              		.align	2
 1396              		.global	HAL_NVIC_GetActive
 1397              		.thumb
 1398              		.thumb_func
 1400              	HAL_NVIC_GetActive:
 1401              	.LFB123:
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /**
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @brief  Gets active interrupt ( reads the active register in NVIC and returns the active bit).
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   */
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** uint32_t HAL_NVIC_GetActive(IRQn_Type IRQn)
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** {
 1402              		.loc 3 378 0
 1403              		.cfi_startproc
 1404              		@ args = 0, pretend = 0, frame = 8
 1405              		@ frame_needed = 1, uses_anonymous_args = 0
 1406 0000 80B5     		push	{r7, lr}
 1407              	.LCFI126:
 1408              		.cfi_def_cfa_offset 8
 1409              		.cfi_offset 7, -8
 1410              		.cfi_offset 14, -4
 1411 0002 82B0     		sub	sp, sp, #8
 1412              	.LCFI127:
 1413              		.cfi_def_cfa_offset 16
 1414 0004 00AF     		add	r7, sp, #0
 1415              	.LCFI128:
 1416              		.cfi_def_cfa_register 7
 1417 0006 0346     		mov	r3, r0
ARM GAS  /tmp/ccLpvG41.s 			page 68


 1418 0008 FB71     		strb	r3, [r7, #7]
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   /* Return 1 if active else 0 */
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   return NVIC_GetActive(IRQn);
 1419              		.loc 3 380 0
 1420 000a 97F90730 		ldrsb	r3, [r7, #7]
 1421 000e 1846     		mov	r0, r3
 1422 0010 FFF7FEFF 		bl	NVIC_GetActive
 1423 0014 0346     		mov	r3, r0
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** }
 1424              		.loc 3 381 0
 1425 0016 1846     		mov	r0, r3
 1426 0018 0837     		adds	r7, r7, #8
 1427              	.LCFI129:
 1428              		.cfi_def_cfa_offset 8
 1429 001a BD46     		mov	sp, r7
 1430              	.LCFI130:
 1431              		.cfi_def_cfa_register 13
 1432              		@ sp needed
 1433 001c 80BD     		pop	{r7, pc}
 1434              		.cfi_endproc
 1435              	.LFE123:
 1437 001e 00BF     		.section	.text.HAL_SYSTICK_CLKSourceConfig,"ax",%progbits
 1438              		.align	2
 1439              		.global	HAL_SYSTICK_CLKSourceConfig
 1440              		.thumb
 1441              		.thumb_func
 1443              	HAL_SYSTICK_CLKSourceConfig:
 1444              	.LFB124:
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /**
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @brief  Configures the SysTick clock source.
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @param  CLKSource: specifies the SysTick clock source.
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock 
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @retval None
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   */
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** {
 1445              		.loc 3 392 0
 1446              		.cfi_startproc
 1447              		@ args = 0, pretend = 0, frame = 8
 1448              		@ frame_needed = 1, uses_anonymous_args = 0
 1449              		@ link register save eliminated.
 1450 0000 80B4     		push	{r7}
 1451              	.LCFI131:
 1452              		.cfi_def_cfa_offset 4
 1453              		.cfi_offset 7, -4
 1454 0002 83B0     		sub	sp, sp, #12
 1455              	.LCFI132:
 1456              		.cfi_def_cfa_offset 16
 1457 0004 00AF     		add	r7, sp, #0
 1458              	.LCFI133:
 1459              		.cfi_def_cfa_register 7
 1460 0006 7860     		str	r0, [r7, #4]
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   /* Check the parameters */
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
ARM GAS  /tmp/ccLpvG41.s 			page 69


 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 1461              		.loc 3 395 0
 1462 0008 7B68     		ldr	r3, [r7, #4]
 1463 000a 042B     		cmp	r3, #4
 1464 000c 06D1     		bne	.L76
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   {
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****     SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 1465              		.loc 3 397 0
 1466 000e 094A     		ldr	r2, .L79
 1467 0010 084B     		ldr	r3, .L79
 1468 0012 1B68     		ldr	r3, [r3]
 1469 0014 43F00403 		orr	r3, r3, #4
 1470 0018 1360     		str	r3, [r2]
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   }
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   else
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   {
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****     SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   }
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** }
 1471              		.loc 3 403 0
 1472 001a 05E0     		b	.L78
 1473              	.L76:
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   }
 1474              		.loc 3 401 0
 1475 001c 054A     		ldr	r2, .L79
 1476 001e 054B     		ldr	r3, .L79
 1477 0020 1B68     		ldr	r3, [r3]
 1478 0022 23F00403 		bic	r3, r3, #4
 1479 0026 1360     		str	r3, [r2]
 1480              	.L78:
 1481              		.loc 3 403 0
 1482 0028 00BF     		nop
 1483 002a 0C37     		adds	r7, r7, #12
 1484              	.LCFI134:
 1485              		.cfi_def_cfa_offset 4
 1486 002c BD46     		mov	sp, r7
 1487              	.LCFI135:
 1488              		.cfi_def_cfa_register 13
 1489              		@ sp needed
 1490 002e 5DF8047B 		ldr	r7, [sp], #4
 1491              	.LCFI136:
 1492              		.cfi_restore 7
 1493              		.cfi_def_cfa_offset 0
 1494 0032 7047     		bx	lr
 1495              	.L80:
 1496              		.align	2
 1497              	.L79:
 1498 0034 10E000E0 		.word	-536813552
 1499              		.cfi_endproc
 1500              	.LFE124:
 1502              		.section	.text.HAL_SYSTICK_IRQHandler,"ax",%progbits
 1503              		.align	2
 1504              		.global	HAL_SYSTICK_IRQHandler
 1505              		.thumb
 1506              		.thumb_func
 1508              	HAL_SYSTICK_IRQHandler:
 1509              	.LFB125:
ARM GAS  /tmp/ccLpvG41.s 			page 70


 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /**
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @brief  This function handles SYSTICK interrupt request.
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @retval None
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   */
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** void HAL_SYSTICK_IRQHandler(void)
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** {
 1510              		.loc 3 410 0
 1511              		.cfi_startproc
 1512              		@ args = 0, pretend = 0, frame = 0
 1513              		@ frame_needed = 1, uses_anonymous_args = 0
 1514 0000 80B5     		push	{r7, lr}
 1515              	.LCFI137:
 1516              		.cfi_def_cfa_offset 8
 1517              		.cfi_offset 7, -8
 1518              		.cfi_offset 14, -4
 1519 0002 00AF     		add	r7, sp, #0
 1520              	.LCFI138:
 1521              		.cfi_def_cfa_register 7
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 1522              		.loc 3 411 0
 1523 0004 FFF7FEFF 		bl	HAL_SYSTICK_Callback
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** }
 1524              		.loc 3 412 0
 1525 0008 00BF     		nop
 1526 000a 80BD     		pop	{r7, pc}
 1527              		.cfi_endproc
 1528              	.LFE125:
 1530              		.section	.text.HAL_SYSTICK_Callback,"ax",%progbits
 1531              		.align	2
 1532              		.weak	HAL_SYSTICK_Callback
 1533              		.thumb
 1534              		.thumb_func
 1536              	HAL_SYSTICK_Callback:
 1537              	.LFB126:
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** 
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** /**
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @brief  SYSTICK callback.
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   * @retval None
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   */
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** __weak void HAL_SYSTICK_Callback(void)
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** {
 1538              		.loc 3 419 0
 1539              		.cfi_startproc
 1540              		@ args = 0, pretend = 0, frame = 0
 1541              		@ frame_needed = 1, uses_anonymous_args = 0
 1542              		@ link register save eliminated.
 1543 0000 80B4     		push	{r7}
 1544              	.LCFI139:
 1545              		.cfi_def_cfa_offset 4
 1546              		.cfi_offset 7, -4
 1547 0002 00AF     		add	r7, sp, #0
 1548              	.LCFI140:
 1549              		.cfi_def_cfa_register 7
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****             the HAL_SYSTICK_Callback could be implemented in the user file
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c ****    */
ARM GAS  /tmp/ccLpvG41.s 			page 71


 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c **** }
 1550              		.loc 3 423 0
 1551 0004 00BF     		nop
 1552 0006 BD46     		mov	sp, r7
 1553              	.LCFI141:
 1554              		.cfi_def_cfa_register 13
 1555              		@ sp needed
 1556 0008 5DF8047B 		ldr	r7, [sp], #4
 1557              	.LCFI142:
 1558              		.cfi_restore 7
 1559              		.cfi_def_cfa_offset 0
 1560 000c 7047     		bx	lr
 1561              		.cfi_endproc
 1562              	.LFE126:
 1564 000e 00BF     		.text
 1565              	.Letext0:
 1566              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 1567              		.file 5 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1568              		.file 6 "/usr/arm-none-eabi/include/sys/_stdint.h"
ARM GAS  /tmp/ccLpvG41.s 			page 72


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal_cortex.c
     /tmp/ccLpvG41.s:21     .text.NVIC_SetPriorityGrouping:0000000000000000 $t
     /tmp/ccLpvG41.s:25     .text.NVIC_SetPriorityGrouping:0000000000000000 NVIC_SetPriorityGrouping
     /tmp/ccLpvG41.s:88     .text.NVIC_SetPriorityGrouping:0000000000000044 $d
     /tmp/ccLpvG41.s:93     .text.NVIC_GetPriorityGrouping:0000000000000000 $t
     /tmp/ccLpvG41.s:97     .text.NVIC_GetPriorityGrouping:0000000000000000 NVIC_GetPriorityGrouping
     /tmp/ccLpvG41.s:130    .text.NVIC_GetPriorityGrouping:0000000000000018 $d
     /tmp/ccLpvG41.s:135    .text.NVIC_EnableIRQ:0000000000000000 $t
     /tmp/ccLpvG41.s:139    .text.NVIC_EnableIRQ:0000000000000000 NVIC_EnableIRQ
     /tmp/ccLpvG41.s:184    .text.NVIC_EnableIRQ:0000000000000030 $d
     /tmp/ccLpvG41.s:189    .text.NVIC_DisableIRQ:0000000000000000 $t
     /tmp/ccLpvG41.s:193    .text.NVIC_DisableIRQ:0000000000000000 NVIC_DisableIRQ
     /tmp/ccLpvG41.s:239    .text.NVIC_DisableIRQ:0000000000000030 $d
     /tmp/ccLpvG41.s:244    .text.NVIC_GetPendingIRQ:0000000000000000 $t
     /tmp/ccLpvG41.s:248    .text.NVIC_GetPendingIRQ:0000000000000000 NVIC_GetPendingIRQ
     /tmp/ccLpvG41.s:304    .text.NVIC_GetPendingIRQ:000000000000003c $d
     /tmp/ccLpvG41.s:309    .text.NVIC_SetPendingIRQ:0000000000000000 $t
     /tmp/ccLpvG41.s:313    .text.NVIC_SetPendingIRQ:0000000000000000 NVIC_SetPendingIRQ
     /tmp/ccLpvG41.s:359    .text.NVIC_SetPendingIRQ:0000000000000030 $d
     /tmp/ccLpvG41.s:364    .text.NVIC_ClearPendingIRQ:0000000000000000 $t
     /tmp/ccLpvG41.s:368    .text.NVIC_ClearPendingIRQ:0000000000000000 NVIC_ClearPendingIRQ
     /tmp/ccLpvG41.s:414    .text.NVIC_ClearPendingIRQ:0000000000000030 $d
     /tmp/ccLpvG41.s:419    .text.NVIC_GetActive:0000000000000000 $t
     /tmp/ccLpvG41.s:423    .text.NVIC_GetActive:0000000000000000 NVIC_GetActive
     /tmp/ccLpvG41.s:479    .text.NVIC_GetActive:000000000000003c $d
     /tmp/ccLpvG41.s:484    .text.NVIC_SetPriority:0000000000000000 $t
     /tmp/ccLpvG41.s:488    .text.NVIC_SetPriority:0000000000000000 NVIC_SetPriority
     /tmp/ccLpvG41.s:553    .text.NVIC_SetPriority:000000000000004c $d
     /tmp/ccLpvG41.s:559    .text.NVIC_GetPriority:0000000000000000 $t
     /tmp/ccLpvG41.s:563    .text.NVIC_GetPriority:0000000000000000 NVIC_GetPriority
     /tmp/ccLpvG41.s:624    .text.NVIC_GetPriority:0000000000000048 $d
     /tmp/ccLpvG41.s:630    .text.NVIC_EncodePriority:0000000000000000 $t
     /tmp/ccLpvG41.s:634    .text.NVIC_EncodePriority:0000000000000000 NVIC_EncodePriority
     /tmp/ccLpvG41.s:718    .text.NVIC_DecodePriority:0000000000000000 $t
     /tmp/ccLpvG41.s:722    .text.NVIC_DecodePriority:0000000000000000 NVIC_DecodePriority
     /tmp/ccLpvG41.s:808    .text.NVIC_SystemReset:0000000000000000 $t
     /tmp/ccLpvG41.s:812    .text.NVIC_SystemReset:0000000000000000 NVIC_SystemReset
     /tmp/ccLpvG41.s:865    .text.NVIC_SystemReset:0000000000000020 $d
     /tmp/ccLpvG41.s:871    .text.SysTick_Config:0000000000000000 $t
     /tmp/ccLpvG41.s:875    .text.SysTick_Config:0000000000000000 SysTick_Config
     /tmp/ccLpvG41.s:935    .text.SysTick_Config:0000000000000040 $d
     /tmp/ccLpvG41.s:940    .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 $t
     /tmp/ccLpvG41.s:945    .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 HAL_NVIC_SetPriorityGrouping
     /tmp/ccLpvG41.s:981    .text.HAL_NVIC_SetPriority:0000000000000000 $t
     /tmp/ccLpvG41.s:986    .text.HAL_NVIC_SetPriority:0000000000000000 HAL_NVIC_SetPriority
     /tmp/ccLpvG41.s:1037   .text.HAL_NVIC_EnableIRQ:0000000000000000 $t
     /tmp/ccLpvG41.s:1042   .text.HAL_NVIC_EnableIRQ:0000000000000000 HAL_NVIC_EnableIRQ
     /tmp/ccLpvG41.s:1079   .text.HAL_NVIC_DisableIRQ:0000000000000000 $t
     /tmp/ccLpvG41.s:1084   .text.HAL_NVIC_DisableIRQ:0000000000000000 HAL_NVIC_DisableIRQ
     /tmp/ccLpvG41.s:1121   .text.HAL_NVIC_SystemReset:0000000000000000 $t
     /tmp/ccLpvG41.s:1126   .text.HAL_NVIC_SystemReset:0000000000000000 HAL_NVIC_SystemReset
     /tmp/ccLpvG41.s:1149   .text.HAL_SYSTICK_Config:0000000000000000 $t
     /tmp/ccLpvG41.s:1154   .text.HAL_SYSTICK_Config:0000000000000000 HAL_SYSTICK_Config
     /tmp/ccLpvG41.s:1190   .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 $t
     /tmp/ccLpvG41.s:1195   .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 HAL_NVIC_GetPriorityGrouping
     /tmp/ccLpvG41.s:1219   .text.HAL_NVIC_GetPriority:0000000000000000 $t
ARM GAS  /tmp/ccLpvG41.s 			page 73


     /tmp/ccLpvG41.s:1224   .text.HAL_NVIC_GetPriority:0000000000000000 HAL_NVIC_GetPriority
     /tmp/ccLpvG41.s:1268   .text.HAL_NVIC_SetPendingIRQ:0000000000000000 $t
     /tmp/ccLpvG41.s:1273   .text.HAL_NVIC_SetPendingIRQ:0000000000000000 HAL_NVIC_SetPendingIRQ
     /tmp/ccLpvG41.s:1310   .text.HAL_NVIC_GetPendingIRQ:0000000000000000 $t
     /tmp/ccLpvG41.s:1315   .text.HAL_NVIC_GetPendingIRQ:0000000000000000 HAL_NVIC_GetPendingIRQ
     /tmp/ccLpvG41.s:1353   .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 $t
     /tmp/ccLpvG41.s:1358   .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 HAL_NVIC_ClearPendingIRQ
     /tmp/ccLpvG41.s:1395   .text.HAL_NVIC_GetActive:0000000000000000 $t
     /tmp/ccLpvG41.s:1400   .text.HAL_NVIC_GetActive:0000000000000000 HAL_NVIC_GetActive
     /tmp/ccLpvG41.s:1438   .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 $t
     /tmp/ccLpvG41.s:1443   .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 HAL_SYSTICK_CLKSourceConfig
     /tmp/ccLpvG41.s:1498   .text.HAL_SYSTICK_CLKSourceConfig:0000000000000034 $d
     /tmp/ccLpvG41.s:1503   .text.HAL_SYSTICK_IRQHandler:0000000000000000 $t
     /tmp/ccLpvG41.s:1508   .text.HAL_SYSTICK_IRQHandler:0000000000000000 HAL_SYSTICK_IRQHandler
     /tmp/ccLpvG41.s:1536   .text.HAL_SYSTICK_Callback:0000000000000000 HAL_SYSTICK_Callback
     /tmp/ccLpvG41.s:1531   .text.HAL_SYSTICK_Callback:0000000000000000 $t
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
