ARM GAS  /tmp/ccTmBZVe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"triggerchannel.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.triggerchannel_init,"ax",%progbits
  21              		.align	2
  22              		.global	triggerchannel_init
  23              		.thumb
  24              		.thumb_func
  26              	triggerchannel_init:
  27              	.LFB112:
  28              		.file 1 "Src/triggerchannel.c"
   1:Src/triggerchannel.c **** /*
   2:Src/triggerchannel.c ****  * trigger_sm.c
   3:Src/triggerchannel.c ****  *
   4:Src/triggerchannel.c ****  *  Created on: 19.05.2015
   5:Src/triggerchannel.c ****  *      Author: raphael
   6:Src/triggerchannel.c ****  */
   7:Src/triggerchannel.c **** 
   8:Src/triggerchannel.c **** #include "../Inc/triggerchannel.h"
   9:Src/triggerchannel.c **** 
  10:Src/triggerchannel.c **** #include "mcp4251.h"
  11:Src/triggerchannel.c **** 
  12:Src/triggerchannel.c **** void triggerchannel_init (TriggerChannel *sm, uint32_t* dma_adress0, uint32_t* dma_adress1,uint32_t
  29              		.loc 1 12 0
  30              		.cfi_startproc
  31              		@ args = 4, pretend = 0, frame = 24
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 86B0     		sub	sp, sp, #24
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 32
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 F860     		str	r0, [r7, #12]
  45 0008 B960     		str	r1, [r7, #8]
  46 000a 7A60     		str	r2, [r7, #4]
ARM GAS  /tmp/ccTmBZVe.s 			page 2


  47 000c 3B60     		str	r3, [r7]
  13:Src/triggerchannel.c **** 
  14:Src/triggerchannel.c **** 	//editable values
  15:Src/triggerchannel.c **** 	sm->midinote = 38;
  48              		.loc 1 15 0
  49 000e FB68     		ldr	r3, [r7, #12]
  50 0010 2622     		movs	r2, #38
  51 0012 1A64     		str	r2, [r3, #64]
  16:Src/triggerchannel.c **** 	sm->threshhold_static = 10;
  52              		.loc 1 16 0
  53 0014 FB68     		ldr	r3, [r7, #12]
  54 0016 0A22     		movs	r2, #10
  55 0018 1A63     		str	r2, [r3, #48]
  17:Src/triggerchannel.c **** 	sm->threshhold_dynamic = 0.8;
  56              		.loc 1 17 0
  57 001a FB68     		ldr	r3, [r7, #12]
  58 001c 224A     		ldr	r2, .L4
  59 001e 5A63     		str	r2, [r3, #52]	@ float
  18:Src/triggerchannel.c **** 	sm->samples_to_take = 3;							//15
  60              		.loc 1 18 0
  61 0020 FB68     		ldr	r3, [r7, #12]
  62 0022 0322     		movs	r2, #3
  63 0024 9A63     		str	r2, [r3, #56]
  19:Src/triggerchannel.c **** 	sm->time_offset = 100;									//400us
  64              		.loc 1 19 0
  65 0026 FB68     		ldr	r3, [r7, #12]
  66 0028 6422     		movs	r2, #100
  67 002a DA63     		str	r2, [r3, #60]
  20:Src/triggerchannel.c **** 	sm->lastProcessedSamples_size = 15;							//400us
  68              		.loc 1 20 0
  69 002c FB68     		ldr	r3, [r7, #12]
  70 002e 0F22     		movs	r2, #15
  71 0030 1A62     		str	r2, [r3, #32]
  21:Src/triggerchannel.c **** 
  22:Src/triggerchannel.c **** 
  23:Src/triggerchannel.c **** 	//sm->wiperPosition = 60;
  24:Src/triggerchannel.c **** 
  25:Src/triggerchannel.c **** 	//not editable values
  26:Src/triggerchannel.c **** 	sm->state = TRIGGERSM_MONITOR;
  72              		.loc 1 26 0
  73 0032 FB68     		ldr	r3, [r7, #12]
  74 0034 0122     		movs	r2, #1
  75 0036 1A76     		strb	r2, [r3, #24]
  27:Src/triggerchannel.c **** 	sm->max_velocity = 0;
  76              		.loc 1 27 0
  77 0038 FB68     		ldr	r3, [r7, #12]
  78 003a 0022     		movs	r2, #0
  79 003c 5A61     		str	r2, [r3, #20]
  28:Src/triggerchannel.c **** 	sm->dma_value_ptr[0] = dma_adress0;
  80              		.loc 1 28 0
  81 003e FB68     		ldr	r3, [r7, #12]
  82 0040 BA68     		ldr	r2, [r7, #8]
  83 0042 1A60     		str	r2, [r3]
  29:Src/triggerchannel.c **** 	sm->dma_value_ptr[1] = dma_adress1;
  84              		.loc 1 29 0
  85 0044 FB68     		ldr	r3, [r7, #12]
  86 0046 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/ccTmBZVe.s 			page 3


  87 0048 5A60     		str	r2, [r3, #4]
  30:Src/triggerchannel.c **** 	sm->dma_value_ptr[2] = dma_adress2;
  88              		.loc 1 30 0
  89 004a FB68     		ldr	r3, [r7, #12]
  90 004c 3A68     		ldr	r2, [r7]
  91 004e 9A60     		str	r2, [r3, #8]
  31:Src/triggerchannel.c **** 	sm->dma_value_ptr[3] = dma_adress3;
  92              		.loc 1 31 0
  93 0050 FB68     		ldr	r3, [r7, #12]
  94 0052 3A6A     		ldr	r2, [r7, #32]
  95 0054 DA60     		str	r2, [r3, #12]
  32:Src/triggerchannel.c **** 	sm->intervallcount_since_trans = 0;
  96              		.loc 1 32 0
  97 0056 FB68     		ldr	r3, [r7, #12]
  98 0058 0022     		movs	r2, #0
  99 005a 1A61     		str	r2, [r3, #16]
  33:Src/triggerchannel.c **** 	sm->storeSampleFlag = 0;
 100              		.loc 1 33 0
 101 005c FB68     		ldr	r3, [r7, #12]
 102 005e 0022     		movs	r2, #0
 103 0060 9A62     		str	r2, [r3, #40]
  34:Src/triggerchannel.c **** 
  35:Src/triggerchannel.c **** 
  36:Src/triggerchannel.c **** 	//set buffer
  37:Src/triggerchannel.c **** 	sm->lastProcessedSamples = malloc(sizeof(uint32_t) * sm->lastProcessedSamples_size);
 104              		.loc 1 37 0
 105 0062 FB68     		ldr	r3, [r7, #12]
 106 0064 1B6A     		ldr	r3, [r3, #32]
 107 0066 9B00     		lsls	r3, r3, #2
 108 0068 1846     		mov	r0, r3
 109 006a FFF7FEFF 		bl	malloc
 110 006e 0346     		mov	r3, r0
 111 0070 1A46     		mov	r2, r3
 112 0072 FB68     		ldr	r3, [r7, #12]
 113 0074 DA61     		str	r2, [r3, #28]
  38:Src/triggerchannel.c **** 	sm->lastProcessedSamples_head = 0;
 114              		.loc 1 38 0
 115 0076 FB68     		ldr	r3, [r7, #12]
 116 0078 0022     		movs	r2, #0
 117 007a 5A62     		str	r2, [r3, #36]
  39:Src/triggerchannel.c **** 	int i;
  40:Src/triggerchannel.c **** 	for(i = 0; i < sm->lastProcessedSamples_size; i++){
 118              		.loc 1 40 0
 119 007c 0023     		movs	r3, #0
 120 007e 7B61     		str	r3, [r7, #20]
 121 0080 09E0     		b	.L2
 122              	.L3:
  41:Src/triggerchannel.c **** 		sm->lastProcessedSamples[i] = 0;
 123              		.loc 1 41 0 discriminator 3
 124 0082 FB68     		ldr	r3, [r7, #12]
 125 0084 DA69     		ldr	r2, [r3, #28]
 126 0086 7B69     		ldr	r3, [r7, #20]
 127 0088 9B00     		lsls	r3, r3, #2
 128 008a 1344     		add	r3, r3, r2
 129 008c 0022     		movs	r2, #0
 130 008e 1A60     		str	r2, [r3]
  40:Src/triggerchannel.c **** 		sm->lastProcessedSamples[i] = 0;
ARM GAS  /tmp/ccTmBZVe.s 			page 4


 131              		.loc 1 40 0 discriminator 3
 132 0090 7B69     		ldr	r3, [r7, #20]
 133 0092 0133     		adds	r3, r3, #1
 134 0094 7B61     		str	r3, [r7, #20]
 135              	.L2:
  40:Src/triggerchannel.c **** 		sm->lastProcessedSamples[i] = 0;
 136              		.loc 1 40 0 is_stmt 0 discriminator 1
 137 0096 FB68     		ldr	r3, [r7, #12]
 138 0098 1A6A     		ldr	r2, [r3, #32]
 139 009a 7B69     		ldr	r3, [r7, #20]
 140 009c 9A42     		cmp	r2, r3
 141 009e F0D8     		bhi	.L3
  42:Src/triggerchannel.c **** 	}
  43:Src/triggerchannel.c **** }
 142              		.loc 1 43 0 is_stmt 1
 143 00a0 00BF     		nop
 144 00a2 1837     		adds	r7, r7, #24
 145              	.LCFI3:
 146              		.cfi_def_cfa_offset 8
 147 00a4 BD46     		mov	sp, r7
 148              	.LCFI4:
 149              		.cfi_def_cfa_register 13
 150              		@ sp needed
 151 00a6 80BD     		pop	{r7, pc}
 152              	.L5:
 153              		.align	2
 154              	.L4:
 155 00a8 CDCC4C3F 		.word	1061997773
 156              		.cfi_endproc
 157              	.LFE112:
 159              		.section	.text.triggerchannel_setWiper,"ax",%progbits
 160              		.align	2
 161              		.global	triggerchannel_setWiper
 162              		.thumb
 163              		.thumb_func
 165              	triggerchannel_setWiper:
 166              	.LFB113:
  44:Src/triggerchannel.c **** 
  45:Src/triggerchannel.c **** void triggerchannel_setWiper(TriggerChannel *chan, uint8_t wiper){
 167              		.loc 1 45 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 8
 170              		@ frame_needed = 1, uses_anonymous_args = 0
 171 0000 80B5     		push	{r7, lr}
 172              	.LCFI5:
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 7, -8
 175              		.cfi_offset 14, -4
 176 0002 82B0     		sub	sp, sp, #8
 177              	.LCFI6:
 178              		.cfi_def_cfa_offset 16
 179 0004 00AF     		add	r7, sp, #0
 180              	.LCFI7:
 181              		.cfi_def_cfa_register 7
 182 0006 7860     		str	r0, [r7, #4]
 183 0008 0B46     		mov	r3, r1
 184 000a FB70     		strb	r3, [r7, #3]
ARM GAS  /tmp/ccTmBZVe.s 			page 5


  46:Src/triggerchannel.c **** 	chan->wiperPosition = wiper;
 185              		.loc 1 46 0
 186 000c 7B68     		ldr	r3, [r7, #4]
 187 000e FA78     		ldrb	r2, [r7, #3]
 188 0010 83F84B20 		strb	r2, [r3, #75]
  47:Src/triggerchannel.c **** 	mcp4261_setWiperPosition(chan->potiCsPort,chan->potiCsPin,chan->potiWiperId,wiper);
 189              		.loc 1 47 0
 190 0014 7B68     		ldr	r3, [r7, #4]
 191 0016 586C     		ldr	r0, [r3, #68]
 192 0018 7B68     		ldr	r3, [r7, #4]
 193 001a B3F84810 		ldrh	r1, [r3, #72]
 194 001e 7B68     		ldr	r3, [r7, #4]
 195 0020 93F84A20 		ldrb	r2, [r3, #74]	@ zero_extendqisi2
 196 0024 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 197 0026 FFF7FEFF 		bl	mcp4261_setWiperPosition
  48:Src/triggerchannel.c **** }
 198              		.loc 1 48 0
 199 002a 00BF     		nop
 200 002c 0837     		adds	r7, r7, #8
 201              	.LCFI8:
 202              		.cfi_def_cfa_offset 8
 203 002e BD46     		mov	sp, r7
 204              	.LCFI9:
 205              		.cfi_def_cfa_register 13
 206              		@ sp needed
 207 0030 80BD     		pop	{r7, pc}
 208              		.cfi_endproc
 209              	.LFE113:
 211 0032 00BF     		.section	.text.triggerchannel_process,"ax",%progbits
 212              		.align	2
 213              		.global	triggerchannel_process
 214              		.thumb
 215              		.thumb_func
 217              	triggerchannel_process:
 218              	.LFB114:
  49:Src/triggerchannel.c **** 
  50:Src/triggerchannel.c **** //dispatcher for process methods
  51:Src/triggerchannel.c **** void triggerchannel_process (TriggerChannel *sm){
 219              		.loc 1 51 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 16
 222              		@ frame_needed = 1, uses_anonymous_args = 0
 223 0000 80B5     		push	{r7, lr}
 224              	.LCFI10:
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 7, -8
 227              		.cfi_offset 14, -4
 228 0002 84B0     		sub	sp, sp, #16
 229              	.LCFI11:
 230              		.cfi_def_cfa_offset 24
 231 0004 00AF     		add	r7, sp, #0
 232              	.LCFI12:
 233              		.cfi_def_cfa_register 7
 234 0006 7860     		str	r0, [r7, #4]
  52:Src/triggerchannel.c **** 
  53:Src/triggerchannel.c **** 	//get the highest value of the last 4 samples to process
  54:Src/triggerchannel.c **** 	sm->current_value =  *(sm->dma_value_ptr[0]);
ARM GAS  /tmp/ccTmBZVe.s 			page 6


 235              		.loc 1 54 0
 236 0008 7B68     		ldr	r3, [r7, #4]
 237 000a 1B68     		ldr	r3, [r3]
 238 000c 1A68     		ldr	r2, [r3]
 239 000e 7B68     		ldr	r3, [r7, #4]
 240 0010 DA62     		str	r2, [r3, #44]
  55:Src/triggerchannel.c **** 	uint32_t currentdmaval, i;
  56:Src/triggerchannel.c **** 	for(i=1; i<4; i++){
 241              		.loc 1 56 0
 242 0012 0123     		movs	r3, #1
 243 0014 FB60     		str	r3, [r7, #12]
 244 0016 10E0     		b	.L8
 245              	.L10:
  57:Src/triggerchannel.c **** 		currentdmaval = *sm->dma_value_ptr[i];
 246              		.loc 1 57 0
 247 0018 7B68     		ldr	r3, [r7, #4]
 248 001a FA68     		ldr	r2, [r7, #12]
 249 001c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 250 0020 1B68     		ldr	r3, [r3]
 251 0022 BB60     		str	r3, [r7, #8]
  58:Src/triggerchannel.c **** 		if(currentdmaval > sm->current_value) sm->current_value = currentdmaval;
 252              		.loc 1 58 0
 253 0024 7B68     		ldr	r3, [r7, #4]
 254 0026 DA6A     		ldr	r2, [r3, #44]
 255 0028 BB68     		ldr	r3, [r7, #8]
 256 002a 9A42     		cmp	r2, r3
 257 002c 02D2     		bcs	.L9
 258              		.loc 1 58 0 is_stmt 0 discriminator 1
 259 002e 7B68     		ldr	r3, [r7, #4]
 260 0030 BA68     		ldr	r2, [r7, #8]
 261 0032 DA62     		str	r2, [r3, #44]
 262              	.L9:
  56:Src/triggerchannel.c **** 		currentdmaval = *sm->dma_value_ptr[i];
 263              		.loc 1 56 0 is_stmt 1 discriminator 2
 264 0034 FB68     		ldr	r3, [r7, #12]
 265 0036 0133     		adds	r3, r3, #1
 266 0038 FB60     		str	r3, [r7, #12]
 267              	.L8:
  56:Src/triggerchannel.c **** 		currentdmaval = *sm->dma_value_ptr[i];
 268              		.loc 1 56 0 is_stmt 0 discriminator 1
 269 003a FB68     		ldr	r3, [r7, #12]
 270 003c 032B     		cmp	r3, #3
 271 003e EBD9     		bls	.L10
  59:Src/triggerchannel.c **** 	}
  60:Src/triggerchannel.c **** 
  61:Src/triggerchannel.c **** 	//process common tasks before dispatch
  62:Src/triggerchannel.c **** 	sm->intervallcount_since_trans++;
 272              		.loc 1 62 0 is_stmt 1
 273 0040 7B68     		ldr	r3, [r7, #4]
 274 0042 1B69     		ldr	r3, [r3, #16]
 275 0044 5A1C     		adds	r2, r3, #1
 276 0046 7B68     		ldr	r3, [r7, #4]
 277 0048 1A61     		str	r2, [r3, #16]
  63:Src/triggerchannel.c **** 
  64:Src/triggerchannel.c **** 	//dispatch by state
  65:Src/triggerchannel.c **** 	if(sm->state == TRIGGERSM_MONITOR) triggerchannel_process_monitor(sm);
 278              		.loc 1 65 0
ARM GAS  /tmp/ccTmBZVe.s 			page 7


 279 004a 7B68     		ldr	r3, [r7, #4]
 280 004c 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 281 004e 012B     		cmp	r3, #1
 282 0050 03D1     		bne	.L11
 283              		.loc 1 65 0 is_stmt 0 discriminator 1
 284 0052 7868     		ldr	r0, [r7, #4]
 285 0054 FFF7FEFF 		bl	triggerchannel_process_monitor
 286 0058 06E0     		b	.L12
 287              	.L11:
  66:Src/triggerchannel.c **** 	else if(sm->state == TRIGGERSM_EVENT) triggerchannel_process_triggerevent(sm);
 288              		.loc 1 66 0 is_stmt 1
 289 005a 7B68     		ldr	r3, [r7, #4]
 290 005c 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 291 005e 002B     		cmp	r3, #0
 292 0060 02D1     		bne	.L12
 293              		.loc 1 66 0 is_stmt 0 discriminator 1
 294 0062 7868     		ldr	r0, [r7, #4]
 295 0064 FFF7FEFF 		bl	triggerchannel_process_triggerevent
 296              	.L12:
  67:Src/triggerchannel.c **** 
  68:Src/triggerchannel.c **** 	//process common tasks after dispatch
  69:Src/triggerchannel.c **** 	triggerchannel_addSample(sm, sm->current_value);
 297              		.loc 1 69 0 is_stmt 1
 298 0068 7B68     		ldr	r3, [r7, #4]
 299 006a DB6A     		ldr	r3, [r3, #44]
 300 006c 1946     		mov	r1, r3
 301 006e 7868     		ldr	r0, [r7, #4]
 302 0070 FFF7FEFF 		bl	triggerchannel_addSample
  70:Src/triggerchannel.c **** }
 303              		.loc 1 70 0
 304 0074 00BF     		nop
 305 0076 1037     		adds	r7, r7, #16
 306              	.LCFI13:
 307              		.cfi_def_cfa_offset 8
 308 0078 BD46     		mov	sp, r7
 309              	.LCFI14:
 310              		.cfi_def_cfa_register 13
 311              		@ sp needed
 312 007a 80BD     		pop	{r7, pc}
 313              		.cfi_endproc
 314              	.LFE114:
 316              		.section	.text.triggerchannel_process_triggerevent,"ax",%progbits
 317              		.align	2
 318              		.global	triggerchannel_process_triggerevent
 319              		.thumb
 320              		.thumb_func
 322              	triggerchannel_process_triggerevent:
 323              	.LFB115:
  71:Src/triggerchannel.c **** 
  72:Src/triggerchannel.c **** //process methods for different states
  73:Src/triggerchannel.c **** void triggerchannel_process_triggerevent (TriggerChannel *sm){
 324              		.loc 1 73 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 8
 327              		@ frame_needed = 1, uses_anonymous_args = 0
 328 0000 80B5     		push	{r7, lr}
 329              	.LCFI15:
ARM GAS  /tmp/ccTmBZVe.s 			page 8


 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 7, -8
 332              		.cfi_offset 14, -4
 333 0002 82B0     		sub	sp, sp, #8
 334              	.LCFI16:
 335              		.cfi_def_cfa_offset 16
 336 0004 00AF     		add	r7, sp, #0
 337              	.LCFI17:
 338              		.cfi_def_cfa_register 7
 339 0006 7860     		str	r0, [r7, #4]
  74:Src/triggerchannel.c **** 
  75:Src/triggerchannel.c **** 	if(sm->current_value > sm->max_velocity) 								//check max value
 340              		.loc 1 75 0
 341 0008 7B68     		ldr	r3, [r7, #4]
 342 000a DA6A     		ldr	r2, [r3, #44]
 343 000c 7B68     		ldr	r3, [r7, #4]
 344 000e 5B69     		ldr	r3, [r3, #20]
 345 0010 9A42     		cmp	r2, r3
 346 0012 03D9     		bls	.L14
  76:Src/triggerchannel.c **** 		sm->max_velocity = sm->current_value;
 347              		.loc 1 76 0
 348 0014 7B68     		ldr	r3, [r7, #4]
 349 0016 DA6A     		ldr	r2, [r3, #44]
 350 0018 7B68     		ldr	r3, [r7, #4]
 351 001a 5A61     		str	r2, [r3, #20]
 352              	.L14:
  77:Src/triggerchannel.c **** 
  78:Src/triggerchannel.c **** 	//check transition to monitor
  79:Src/triggerchannel.c **** 	if(sm->intervallcount_since_trans >= sm->samples_to_take){
 353              		.loc 1 79 0
 354 001c 7B68     		ldr	r3, [r7, #4]
 355 001e 1A69     		ldr	r2, [r3, #16]
 356 0020 7B68     		ldr	r3, [r7, #4]
 357 0022 9B6B     		ldr	r3, [r3, #56]
 358 0024 9A42     		cmp	r2, r3
 359 0026 02D3     		bcc	.L16
  80:Src/triggerchannel.c **** 		triggerchannel_transition_triggerevent_monitor(sm);
 360              		.loc 1 80 0
 361 0028 7868     		ldr	r0, [r7, #4]
 362 002a FFF7FEFF 		bl	triggerchannel_transition_triggerevent_monitor
 363              	.L16:
  81:Src/triggerchannel.c **** 	}
  82:Src/triggerchannel.c **** 
  83:Src/triggerchannel.c **** }
 364              		.loc 1 83 0
 365 002e 00BF     		nop
 366 0030 0837     		adds	r7, r7, #8
 367              	.LCFI18:
 368              		.cfi_def_cfa_offset 8
 369 0032 BD46     		mov	sp, r7
 370              	.LCFI19:
 371              		.cfi_def_cfa_register 13
 372              		@ sp needed
 373 0034 80BD     		pop	{r7, pc}
 374              		.cfi_endproc
 375              	.LFE115:
 377              		.section	.text.triggerchannel_process_monitor,"ax",%progbits
ARM GAS  /tmp/ccTmBZVe.s 			page 9


 378              		.align	2
 379              		.global	triggerchannel_process_monitor
 380              		.thumb
 381              		.thumb_func
 383              	triggerchannel_process_monitor:
 384              	.LFB116:
  84:Src/triggerchannel.c **** 
  85:Src/triggerchannel.c **** 
  86:Src/triggerchannel.c **** void triggerchannel_process_monitor (TriggerChannel *sm){
 385              		.loc 1 86 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 16
 388              		@ frame_needed = 1, uses_anonymous_args = 0
 389 0000 80B5     		push	{r7, lr}
 390              	.LCFI20:
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 84B0     		sub	sp, sp, #16
 395              	.LCFI21:
 396              		.cfi_def_cfa_offset 24
 397 0004 00AF     		add	r7, sp, #0
 398              	.LCFI22:
 399              		.cfi_def_cfa_register 7
 400 0006 7860     		str	r0, [r7, #4]
  87:Src/triggerchannel.c **** 
  88:Src/triggerchannel.c **** 	//check transition
  89:Src/triggerchannel.c **** 	uint32_t lastSamplesMax = triggerchannel_getLastSamplesMax(sm);
 401              		.loc 1 89 0
 402 0008 7868     		ldr	r0, [r7, #4]
 403 000a FFF7FEFF 		bl	triggerchannel_getLastSamplesMax
 404 000e F860     		str	r0, [r7, #12]
  90:Src/triggerchannel.c **** 	uint32_t threshhold =  sm->threshhold_static + lastSamplesMax * sm->threshhold_dynamic;
 405              		.loc 1 90 0
 406 0010 7B68     		ldr	r3, [r7, #4]
 407 0012 1B6B     		ldr	r3, [r3, #48]
 408 0014 07EE903A 		vmov	s15, r3	@ int
 409 0018 B8EE677A 		vcvt.f32.u32	s14, s15
 410 001c FB68     		ldr	r3, [r7, #12]
 411 001e 07EE903A 		vmov	s15, r3	@ int
 412 0022 F8EE676A 		vcvt.f32.u32	s13, s15
 413 0026 7B68     		ldr	r3, [r7, #4]
 414 0028 D3ED0D7A 		vldr.32	s15, [r3, #52]
 415 002c 66EEA77A 		vmul.f32	s15, s13, s15
 416 0030 77EE277A 		vadd.f32	s15, s14, s15
 417 0034 FCEEE77A 		vcvt.u32.f32	s15, s15
 418 0038 17EE903A 		vmov	r3, s15	@ int
 419 003c BB60     		str	r3, [r7, #8]
  91:Src/triggerchannel.c **** 
  92:Src/triggerchannel.c **** 	if( lastSamplesMax + threshhold <= sm->current_value
 420              		.loc 1 92 0
 421 003e FA68     		ldr	r2, [r7, #12]
 422 0040 BB68     		ldr	r3, [r7, #8]
 423 0042 1A44     		add	r2, r2, r3
 424 0044 7B68     		ldr	r3, [r7, #4]
 425 0046 DB6A     		ldr	r3, [r3, #44]
 426 0048 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccTmBZVe.s 			page 10


 427 004a 08D8     		bhi	.L19
  93:Src/triggerchannel.c **** 			&& sm->time_offset < sm->intervallcount_since_trans){
 428              		.loc 1 93 0
 429 004c 7B68     		ldr	r3, [r7, #4]
 430 004e DA6B     		ldr	r2, [r3, #60]
 431 0050 7B68     		ldr	r3, [r7, #4]
 432 0052 1B69     		ldr	r3, [r3, #16]
 433 0054 9A42     		cmp	r2, r3
 434 0056 02D2     		bcs	.L19
  94:Src/triggerchannel.c **** 
  95:Src/triggerchannel.c **** 		triggerchannel_transition_monitor_triggerevent(sm);
 435              		.loc 1 95 0
 436 0058 7868     		ldr	r0, [r7, #4]
 437 005a FFF7FEFF 		bl	triggerchannel_transition_monitor_triggerevent
 438              	.L19:
  96:Src/triggerchannel.c **** 	}
  97:Src/triggerchannel.c **** 
  98:Src/triggerchannel.c **** }
 439              		.loc 1 98 0
 440 005e 00BF     		nop
 441 0060 1037     		adds	r7, r7, #16
 442              	.LCFI23:
 443              		.cfi_def_cfa_offset 8
 444 0062 BD46     		mov	sp, r7
 445              	.LCFI24:
 446              		.cfi_def_cfa_register 13
 447              		@ sp needed
 448 0064 80BD     		pop	{r7, pc}
 449              		.cfi_endproc
 450              	.LFE116:
 452 0066 00BF     		.section	.text.triggerchannel_transition_triggerevent_monitor,"ax",%progbits
 453              		.align	2
 454              		.global	triggerchannel_transition_triggerevent_monitor
 455              		.thumb
 456              		.thumb_func
 458              	triggerchannel_transition_triggerevent_monitor:
 459              	.LFB117:
  99:Src/triggerchannel.c **** 
 100:Src/triggerchannel.c **** //State transition methods
 101:Src/triggerchannel.c **** void triggerchannel_transition_triggerevent_monitor (TriggerChannel *sm){
 460              		.loc 1 101 0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 8
 463              		@ frame_needed = 1, uses_anonymous_args = 0
 464 0000 80B5     		push	{r7, lr}
 465              	.LCFI25:
 466              		.cfi_def_cfa_offset 8
 467              		.cfi_offset 7, -8
 468              		.cfi_offset 14, -4
 469 0002 82B0     		sub	sp, sp, #8
 470              	.LCFI26:
 471              		.cfi_def_cfa_offset 16
 472 0004 00AF     		add	r7, sp, #0
 473              	.LCFI27:
 474              		.cfi_def_cfa_register 7
 475 0006 7860     		str	r0, [r7, #4]
 102:Src/triggerchannel.c **** 	sm->state = TRIGGERSM_MONITOR;
ARM GAS  /tmp/ccTmBZVe.s 			page 11


 476              		.loc 1 102 0
 477 0008 7B68     		ldr	r3, [r7, #4]
 478 000a 0122     		movs	r2, #1
 479 000c 1A76     		strb	r2, [r3, #24]
 103:Src/triggerchannel.c **** 	sm->intervallcount_since_trans = 0;
 480              		.loc 1 103 0
 481 000e 7B68     		ldr	r3, [r7, #4]
 482 0010 0022     		movs	r2, #0
 483 0012 1A61     		str	r2, [r3, #16]
 104:Src/triggerchannel.c **** 
 105:Src/triggerchannel.c **** 
 106:Src/triggerchannel.c **** 	//note detected
 107:Src/triggerchannel.c **** 	midi_sendNote(10,sm->midinote, sm->max_velocity >> 5);
 484              		.loc 1 107 0
 485 0014 7B68     		ldr	r3, [r7, #4]
 486 0016 196C     		ldr	r1, [r3, #64]
 487 0018 7B68     		ldr	r3, [r7, #4]
 488 001a 5B69     		ldr	r3, [r3, #20]
 489 001c 5B09     		lsrs	r3, r3, #5
 490 001e 1A46     		mov	r2, r3
 491 0020 0A20     		movs	r0, #10
 492 0022 FFF7FEFF 		bl	midi_sendNote
 108:Src/triggerchannel.c **** 
 109:Src/triggerchannel.c **** 
 110:Src/triggerchannel.c **** 
 111:Src/triggerchannel.c **** }
 493              		.loc 1 111 0
 494 0026 00BF     		nop
 495 0028 0837     		adds	r7, r7, #8
 496              	.LCFI28:
 497              		.cfi_def_cfa_offset 8
 498 002a BD46     		mov	sp, r7
 499              	.LCFI29:
 500              		.cfi_def_cfa_register 13
 501              		@ sp needed
 502 002c 80BD     		pop	{r7, pc}
 503              		.cfi_endproc
 504              	.LFE117:
 506 002e 00BF     		.section	.text.triggerchannel_transition_monitor_triggerevent,"ax",%progbits
 507              		.align	2
 508              		.global	triggerchannel_transition_monitor_triggerevent
 509              		.thumb
 510              		.thumb_func
 512              	triggerchannel_transition_monitor_triggerevent:
 513              	.LFB118:
 112:Src/triggerchannel.c **** void triggerchannel_transition_monitor_triggerevent (TriggerChannel *sm){
 514              		.loc 1 112 0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 8
 517              		@ frame_needed = 1, uses_anonymous_args = 0
 518              		@ link register save eliminated.
 519 0000 80B4     		push	{r7}
 520              	.LCFI30:
 521              		.cfi_def_cfa_offset 4
 522              		.cfi_offset 7, -4
 523 0002 83B0     		sub	sp, sp, #12
 524              	.LCFI31:
ARM GAS  /tmp/ccTmBZVe.s 			page 12


 525              		.cfi_def_cfa_offset 16
 526 0004 00AF     		add	r7, sp, #0
 527              	.LCFI32:
 528              		.cfi_def_cfa_register 7
 529 0006 7860     		str	r0, [r7, #4]
 113:Src/triggerchannel.c **** 	sm->state = TRIGGERSM_EVENT;
 530              		.loc 1 113 0
 531 0008 7B68     		ldr	r3, [r7, #4]
 532 000a 0022     		movs	r2, #0
 533 000c 1A76     		strb	r2, [r3, #24]
 114:Src/triggerchannel.c **** 	sm->intervallcount_since_trans = 0;
 534              		.loc 1 114 0
 535 000e 7B68     		ldr	r3, [r7, #4]
 536 0010 0022     		movs	r2, #0
 537 0012 1A61     		str	r2, [r3, #16]
 115:Src/triggerchannel.c **** 	sm->max_velocity = sm->current_value;
 538              		.loc 1 115 0
 539 0014 7B68     		ldr	r3, [r7, #4]
 540 0016 DA6A     		ldr	r2, [r3, #44]
 541 0018 7B68     		ldr	r3, [r7, #4]
 542 001a 5A61     		str	r2, [r3, #20]
 116:Src/triggerchannel.c **** }
 543              		.loc 1 116 0
 544 001c 00BF     		nop
 545 001e 0C37     		adds	r7, r7, #12
 546              	.LCFI33:
 547              		.cfi_def_cfa_offset 4
 548 0020 BD46     		mov	sp, r7
 549              	.LCFI34:
 550              		.cfi_def_cfa_register 13
 551              		@ sp needed
 552 0022 5DF8047B 		ldr	r7, [sp], #4
 553              	.LCFI35:
 554              		.cfi_restore 7
 555              		.cfi_def_cfa_offset 0
 556 0026 7047     		bx	lr
 557              		.cfi_endproc
 558              	.LFE118:
 560              		.section	.text.triggerchannel_addSample,"ax",%progbits
 561              		.align	2
 562              		.global	triggerchannel_addSample
 563              		.thumb
 564              		.thumb_func
 566              	triggerchannel_addSample:
 567              	.LFB119:
 117:Src/triggerchannel.c **** 
 118:Src/triggerchannel.c **** void triggerchannel_addSample(TriggerChannel *sm,uint32_t sample){
 568              		.loc 1 118 0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 8
 571              		@ frame_needed = 1, uses_anonymous_args = 0
 572              		@ link register save eliminated.
 573 0000 80B4     		push	{r7}
 574              	.LCFI36:
 575              		.cfi_def_cfa_offset 4
 576              		.cfi_offset 7, -4
 577 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccTmBZVe.s 			page 13


 578              	.LCFI37:
 579              		.cfi_def_cfa_offset 16
 580 0004 00AF     		add	r7, sp, #0
 581              	.LCFI38:
 582              		.cfi_def_cfa_register 7
 583 0006 7860     		str	r0, [r7, #4]
 584 0008 3960     		str	r1, [r7]
 119:Src/triggerchannel.c **** 
 120:Src/triggerchannel.c **** 	if(sm->storeSampleFlag <= 0){
 585              		.loc 1 120 0
 586 000a 7B68     		ldr	r3, [r7, #4]
 587 000c 9B6A     		ldr	r3, [r3, #40]
 588 000e 002B     		cmp	r3, #0
 589 0010 03D1     		bne	.L23
 121:Src/triggerchannel.c **** 		sm->storeSampleFlag = 2;
 590              		.loc 1 121 0
 591 0012 7B68     		ldr	r3, [r7, #4]
 592 0014 0222     		movs	r2, #2
 593 0016 9A62     		str	r2, [r3, #40]
 122:Src/triggerchannel.c **** 		return;
 594              		.loc 1 122 0
 595 0018 18E0     		b	.L22
 596              	.L23:
 123:Src/triggerchannel.c **** 	}
 124:Src/triggerchannel.c **** 	sm->storeSampleFlag--;
 597              		.loc 1 124 0
 598 001a 7B68     		ldr	r3, [r7, #4]
 599 001c 9B6A     		ldr	r3, [r3, #40]
 600 001e 5A1E     		subs	r2, r3, #1
 601 0020 7B68     		ldr	r3, [r7, #4]
 602 0022 9A62     		str	r2, [r3, #40]
 125:Src/triggerchannel.c **** 
 126:Src/triggerchannel.c **** 
 127:Src/triggerchannel.c **** 	sm->lastProcessedSamples_head = (sm->lastProcessedSamples_head+1) % sm->lastProcessedSamples_size;
 603              		.loc 1 127 0
 604 0024 7B68     		ldr	r3, [r7, #4]
 605 0026 5B6A     		ldr	r3, [r3, #36]
 606 0028 0133     		adds	r3, r3, #1
 607 002a 7A68     		ldr	r2, [r7, #4]
 608 002c 126A     		ldr	r2, [r2, #32]
 609 002e B3FBF2F1 		udiv	r1, r3, r2
 610 0032 02FB01F2 		mul	r2, r2, r1
 611 0036 9A1A     		subs	r2, r3, r2
 612 0038 7B68     		ldr	r3, [r7, #4]
 613 003a 5A62     		str	r2, [r3, #36]
 128:Src/triggerchannel.c **** 	sm->lastProcessedSamples[sm->lastProcessedSamples_head] = sample;
 614              		.loc 1 128 0
 615 003c 7B68     		ldr	r3, [r7, #4]
 616 003e DA69     		ldr	r2, [r3, #28]
 617 0040 7B68     		ldr	r3, [r7, #4]
 618 0042 5B6A     		ldr	r3, [r3, #36]
 619 0044 9B00     		lsls	r3, r3, #2
 620 0046 1344     		add	r3, r3, r2
 621 0048 3A68     		ldr	r2, [r7]
 622 004a 1A60     		str	r2, [r3]
 623              	.L22:
 129:Src/triggerchannel.c **** 
ARM GAS  /tmp/ccTmBZVe.s 			page 14


 130:Src/triggerchannel.c **** }
 624              		.loc 1 130 0
 625 004c 0C37     		adds	r7, r7, #12
 626              	.LCFI39:
 627              		.cfi_def_cfa_offset 4
 628 004e BD46     		mov	sp, r7
 629              	.LCFI40:
 630              		.cfi_def_cfa_register 13
 631              		@ sp needed
 632 0050 5DF8047B 		ldr	r7, [sp], #4
 633              	.LCFI41:
 634              		.cfi_restore 7
 635              		.cfi_def_cfa_offset 0
 636 0054 7047     		bx	lr
 637              		.cfi_endproc
 638              	.LFE119:
 640 0056 00BF     		.section	.text.triggerchannel_getLastSample,"ax",%progbits
 641              		.align	2
 642              		.global	triggerchannel_getLastSample
 643              		.thumb
 644              		.thumb_func
 646              	triggerchannel_getLastSample:
 647              	.LFB120:
 131:Src/triggerchannel.c **** 
 132:Src/triggerchannel.c **** uint32_t triggerchannel_getLastSample(TriggerChannel *sm){
 648              		.loc 1 132 0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 8
 651              		@ frame_needed = 1, uses_anonymous_args = 0
 652              		@ link register save eliminated.
 653 0000 80B4     		push	{r7}
 654              	.LCFI42:
 655              		.cfi_def_cfa_offset 4
 656              		.cfi_offset 7, -4
 657 0002 83B0     		sub	sp, sp, #12
 658              	.LCFI43:
 659              		.cfi_def_cfa_offset 16
 660 0004 00AF     		add	r7, sp, #0
 661              	.LCFI44:
 662              		.cfi_def_cfa_register 7
 663 0006 7860     		str	r0, [r7, #4]
 133:Src/triggerchannel.c **** 	return sm->lastProcessedSamples[sm->lastProcessedSamples_head];
 664              		.loc 1 133 0
 665 0008 7B68     		ldr	r3, [r7, #4]
 666 000a DA69     		ldr	r2, [r3, #28]
 667 000c 7B68     		ldr	r3, [r7, #4]
 668 000e 5B6A     		ldr	r3, [r3, #36]
 669 0010 9B00     		lsls	r3, r3, #2
 670 0012 1344     		add	r3, r3, r2
 671 0014 1B68     		ldr	r3, [r3]
 134:Src/triggerchannel.c **** }
 672              		.loc 1 134 0
 673 0016 1846     		mov	r0, r3
 674 0018 0C37     		adds	r7, r7, #12
 675              	.LCFI45:
 676              		.cfi_def_cfa_offset 4
 677 001a BD46     		mov	sp, r7
ARM GAS  /tmp/ccTmBZVe.s 			page 15


 678              	.LCFI46:
 679              		.cfi_def_cfa_register 13
 680              		@ sp needed
 681 001c 5DF8047B 		ldr	r7, [sp], #4
 682              	.LCFI47:
 683              		.cfi_restore 7
 684              		.cfi_def_cfa_offset 0
 685 0020 7047     		bx	lr
 686              		.cfi_endproc
 687              	.LFE120:
 689 0022 00BF     		.section	.text.triggerchannel_getLastSamplesMax,"ax",%progbits
 690              		.align	2
 691              		.global	triggerchannel_getLastSamplesMax
 692              		.thumb
 693              		.thumb_func
 695              	triggerchannel_getLastSamplesMax:
 696              	.LFB121:
 135:Src/triggerchannel.c **** 
 136:Src/triggerchannel.c **** uint32_t triggerchannel_getLastSamplesMax(TriggerChannel *sm){
 697              		.loc 1 136 0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 16
 700              		@ frame_needed = 1, uses_anonymous_args = 0
 701              		@ link register save eliminated.
 702 0000 80B4     		push	{r7}
 703              	.LCFI48:
 704              		.cfi_def_cfa_offset 4
 705              		.cfi_offset 7, -4
 706 0002 85B0     		sub	sp, sp, #20
 707              	.LCFI49:
 708              		.cfi_def_cfa_offset 24
 709 0004 00AF     		add	r7, sp, #0
 710              	.LCFI50:
 711              		.cfi_def_cfa_register 7
 712 0006 7860     		str	r0, [r7, #4]
 137:Src/triggerchannel.c **** 	uint32_t i,max = 0;
 713              		.loc 1 137 0
 714 0008 0023     		movs	r3, #0
 715 000a BB60     		str	r3, [r7, #8]
 138:Src/triggerchannel.c **** 	for(i = 0; i < sm->lastProcessedSamples_size; i++){
 716              		.loc 1 138 0
 717 000c 0023     		movs	r3, #0
 718 000e FB60     		str	r3, [r7, #12]
 719 0010 12E0     		b	.L28
 720              	.L30:
 139:Src/triggerchannel.c **** 		if(sm->lastProcessedSamples[i] > max)
 721              		.loc 1 139 0
 722 0012 7B68     		ldr	r3, [r7, #4]
 723 0014 DA69     		ldr	r2, [r3, #28]
 724 0016 FB68     		ldr	r3, [r7, #12]
 725 0018 9B00     		lsls	r3, r3, #2
 726 001a 1344     		add	r3, r3, r2
 727 001c 1A68     		ldr	r2, [r3]
 728 001e BB68     		ldr	r3, [r7, #8]
 729 0020 9A42     		cmp	r2, r3
 730 0022 06D9     		bls	.L29
 140:Src/triggerchannel.c **** 			max = sm->lastProcessedSamples[i];
ARM GAS  /tmp/ccTmBZVe.s 			page 16


 731              		.loc 1 140 0
 732 0024 7B68     		ldr	r3, [r7, #4]
 733 0026 DA69     		ldr	r2, [r3, #28]
 734 0028 FB68     		ldr	r3, [r7, #12]
 735 002a 9B00     		lsls	r3, r3, #2
 736 002c 1344     		add	r3, r3, r2
 737 002e 1B68     		ldr	r3, [r3]
 738 0030 BB60     		str	r3, [r7, #8]
 739              	.L29:
 138:Src/triggerchannel.c **** 	for(i = 0; i < sm->lastProcessedSamples_size; i++){
 740              		.loc 1 138 0 discriminator 2
 741 0032 FB68     		ldr	r3, [r7, #12]
 742 0034 0133     		adds	r3, r3, #1
 743 0036 FB60     		str	r3, [r7, #12]
 744              	.L28:
 138:Src/triggerchannel.c **** 	for(i = 0; i < sm->lastProcessedSamples_size; i++){
 745              		.loc 1 138 0 is_stmt 0 discriminator 1
 746 0038 7B68     		ldr	r3, [r7, #4]
 747 003a 1A6A     		ldr	r2, [r3, #32]
 748 003c FB68     		ldr	r3, [r7, #12]
 749 003e 9A42     		cmp	r2, r3
 750 0040 E7D8     		bhi	.L30
 141:Src/triggerchannel.c **** 	}
 142:Src/triggerchannel.c **** 	return max;
 751              		.loc 1 142 0 is_stmt 1
 752 0042 BB68     		ldr	r3, [r7, #8]
 143:Src/triggerchannel.c **** }
 753              		.loc 1 143 0
 754 0044 1846     		mov	r0, r3
 755 0046 1437     		adds	r7, r7, #20
 756              	.LCFI51:
 757              		.cfi_def_cfa_offset 4
 758 0048 BD46     		mov	sp, r7
 759              	.LCFI52:
 760              		.cfi_def_cfa_register 13
 761              		@ sp needed
 762 004a 5DF8047B 		ldr	r7, [sp], #4
 763              	.LCFI53:
 764              		.cfi_restore 7
 765              		.cfi_def_cfa_offset 0
 766 004e 7047     		bx	lr
 767              		.cfi_endproc
 768              	.LFE121:
 770              		.text
 771              	.Letext0:
 772              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 773              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 774              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 775              		.file 5 "Src/../Inc/triggerchannel.h"
 776              		.file 6 "<built-in>"
 777              		.file 7 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/ccTmBZVe.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 triggerchannel.c
     /tmp/ccTmBZVe.s:21     .text.triggerchannel_init:0000000000000000 $t
     /tmp/ccTmBZVe.s:26     .text.triggerchannel_init:0000000000000000 triggerchannel_init
     /tmp/ccTmBZVe.s:155    .text.triggerchannel_init:00000000000000a8 $d
     /tmp/ccTmBZVe.s:160    .text.triggerchannel_setWiper:0000000000000000 $t
     /tmp/ccTmBZVe.s:165    .text.triggerchannel_setWiper:0000000000000000 triggerchannel_setWiper
     /tmp/ccTmBZVe.s:212    .text.triggerchannel_process:0000000000000000 $t
     /tmp/ccTmBZVe.s:217    .text.triggerchannel_process:0000000000000000 triggerchannel_process
     /tmp/ccTmBZVe.s:383    .text.triggerchannel_process_monitor:0000000000000000 triggerchannel_process_monitor
     /tmp/ccTmBZVe.s:322    .text.triggerchannel_process_triggerevent:0000000000000000 triggerchannel_process_triggerevent
     /tmp/ccTmBZVe.s:566    .text.triggerchannel_addSample:0000000000000000 triggerchannel_addSample
     /tmp/ccTmBZVe.s:317    .text.triggerchannel_process_triggerevent:0000000000000000 $t
     /tmp/ccTmBZVe.s:458    .text.triggerchannel_transition_triggerevent_monitor:0000000000000000 triggerchannel_transition_triggerevent_monitor
     /tmp/ccTmBZVe.s:378    .text.triggerchannel_process_monitor:0000000000000000 $t
     /tmp/ccTmBZVe.s:695    .text.triggerchannel_getLastSamplesMax:0000000000000000 triggerchannel_getLastSamplesMax
     /tmp/ccTmBZVe.s:512    .text.triggerchannel_transition_monitor_triggerevent:0000000000000000 triggerchannel_transition_monitor_triggerevent
     /tmp/ccTmBZVe.s:453    .text.triggerchannel_transition_triggerevent_monitor:0000000000000000 $t
     /tmp/ccTmBZVe.s:507    .text.triggerchannel_transition_monitor_triggerevent:0000000000000000 $t
     /tmp/ccTmBZVe.s:561    .text.triggerchannel_addSample:0000000000000000 $t
     /tmp/ccTmBZVe.s:641    .text.triggerchannel_getLastSample:0000000000000000 $t
     /tmp/ccTmBZVe.s:646    .text.triggerchannel_getLastSample:0000000000000000 triggerchannel_getLastSample
     /tmp/ccTmBZVe.s:690    .text.triggerchannel_getLastSamplesMax:0000000000000000 $t
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
malloc
mcp4261_setWiperPosition
midi_sendNote
